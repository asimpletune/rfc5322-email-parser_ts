/* AutoGenerated Code, changes may be overwritten
*/
type Nullable<T> = T | null;
type $$RuleType<T> = () => Nullable<T>;
export interface ASTNodeIntf {
    kind: ASTKinds;
}
export enum ASTKinds {
    input,
    CR,
    CRLF,
    DQUOTE,
    HTAB,
    LF,
    SP,
    VCHAR,
    WSP_1,
    WSP_2,
    quoted_pair_1,
    quoted_pair_2,
    quoted_pair_$0,
    quoted_pair_$0_$0_1,
    quoted_pair_$0_$0_2,
    FWS_1,
    FWS_2,
    FWS_$0,
    FWS_$0_$0,
    ctext_1,
    ctext_2,
    ctext_3,
    ctext_4,
    ccontent_1,
    ccontent_2,
    ccontent_3,
    comment,
    comment_$0,
    CFWS_1,
    CFWS_2,
    CFWS_$0,
    CFWS_$0_$0,
    atext,
    atom,
    dot_atom_text,
    dot_atom_text_$0,
    dot_atom,
    specials_1,
    specials_2,
    specials_3,
    specials_4,
    specials_5,
    specials_6,
    specials_7,
    specials_8,
    specials_9,
    specials_10,
    qtext_1,
    qtext_2,
    qtext_3,
    qtext_4,
    qcontent_1,
    qcontent_2,
    quoted_string,
    quoted_string_$0,
    word_1,
    word_2,
    phrase_1,
    phrase_2,
    address_1,
    address_2,
    mailbox_1,
    mailbox_2,
    name_addr,
    angle_addr_1,
    angle_addr_2,
    group,
    display_name,
    mailbox_list_1,
    mailbox_list_2,
    mailbox_list_$0,
    mailbox_list_$0_$0,
    address_list_1,
    address_list_2,
    address_list_$0,
    address_list_$0_$0,
    group_list_1,
    group_list_2,
    group_list_3,
    addr_spec,
    local_part_1,
    local_part_2,
    local_part_3,
    domain_1,
    domain_2,
    domain_3,
    domain_literal,
    domain_literal_$0,
    dtext_1,
    dtext_2,
    dtext_3,
    obs_NO_WS_CTL_1,
    obs_NO_WS_CTL_2,
    obs_NO_WS_CTL_3,
    obs_NO_WS_CTL_4,
    obs_NO_WS_CTL_5,
    obs_qtext,
    obs_ctext,
    obs_qp,
    obs_qp_$0_1,
    obs_qp_$0_2,
    obs_qp_$0_3,
    obs_qp_$0_4,
    obs_phrase,
    obs_phrase_$0_1,
    obs_phrase_$0_2,
    obs_phrase_$0_3,
    obs_FWS,
    obs_FWS_$0,
    obs_angle_addr,
    obs_route,
    obs_domain_list,
    obs_domain_list_$0_1,
    obs_domain_list_$0_2,
    obs_domain_list_$1,
    obs_domain_list_$1_$0,
    obs_mbox_list,
    obs_mbox_list_$0,
    obs_mbox_list_$1,
    obs_mbox_list_$1_$0_1,
    obs_mbox_list_$1_$0_2,
    obs_addr_list,
    obs_addr_list_$0,
    obs_addr_list_$1,
    obs_addr_list_$1_$0_1,
    obs_addr_list_$1_$0_2,
    obs_group_list,
    obs_group_list_$0,
    obs_local_part,
    obs_local_part_$0,
    obs_domain,
    obs_domain_$0,
    obs_dtext_1,
    obs_dtext_2,
}
export type input = addr_spec;
export type CR = string;
export interface CRLF {
    kind: ASTKinds.CRLF;
}
export type DQUOTE = string;
export type HTAB = string;
export type LF = string;
export type SP = string;
export type VCHAR = string;
export type WSP = WSP_1 | WSP_2;
export type WSP_1 = SP;
export type WSP_2 = HTAB;
export type quoted_pair = quoted_pair_1 | quoted_pair_2;
export type quoted_pair_1 = quoted_pair_$0;
export type quoted_pair_2 = obs_qp;
export interface quoted_pair_$0 {
    kind: ASTKinds.quoted_pair_$0;
}
export type quoted_pair_$0_$0 = quoted_pair_$0_$0_1 | quoted_pair_$0_$0_2;
export type quoted_pair_$0_$0_1 = VCHAR;
export type quoted_pair_$0_$0_2 = WSP;
export type FWS = FWS_1 | FWS_2;
export type FWS_1 = FWS_$0;
export type FWS_2 = obs_FWS;
export interface FWS_$0 {
    kind: ASTKinds.FWS_$0;
}
export interface FWS_$0_$0 {
    kind: ASTKinds.FWS_$0_$0;
}
export type ctext = ctext_1 | ctext_2 | ctext_3 | ctext_4;
export type ctext_1 = string;
export type ctext_2 = string;
export type ctext_3 = string;
export type ctext_4 = obs_ctext;
export type ccontent = ccontent_1 | ccontent_2 | ccontent_3;
export type ccontent_1 = ctext;
export type ccontent_2 = quoted_pair;
export type ccontent_3 = comment;
export interface comment {
    kind: ASTKinds.comment;
}
export interface comment_$0 {
    kind: ASTKinds.comment_$0;
}
export type CFWS = CFWS_1 | CFWS_2;
export type CFWS_1 = CFWS_$0;
export type CFWS_2 = FWS;
export interface CFWS_$0 {
    kind: ASTKinds.CFWS_$0;
}
export interface CFWS_$0_$0 {
    kind: ASTKinds.CFWS_$0_$0;
}
export type atext = string;
export interface atom {
    kind: ASTKinds.atom;
}
export class dot_atom_text {
    public kind: ASTKinds.dot_atom_text = ASTKinds.dot_atom_text;
    public _head_atext: atext[];
    public _tail_atext: dot_atom_text_$0[];
    public head: string;
    public tail: string[];
    public literal: string;
    constructor(_head_atext: atext[], _tail_atext: dot_atom_text_$0[]){
        this._head_atext = _head_atext;
        this._tail_atext = _tail_atext;
        this.head = ((): string => {
        return this._head_atext.join('')
        })();
        this.tail = ((): string[] => {
        return this._tail_atext.map(a => a._atext.join(''))
        })();
        this.literal = ((): string => {
        return this.head + this.tail.map(atext => '.' + atext).join('')
        })();
    }
}
export interface dot_atom_text_$0 {
    kind: ASTKinds.dot_atom_text_$0;
    _atext: atext[];
}
export class dot_atom {
    public kind: ASTKinds.dot_atom = ASTKinds.dot_atom;
    public _dot_atom_text: dot_atom_text;
    public head: string;
    public tail: string[];
    public literal: string;
    public parts: string[];
    constructor(_dot_atom_text: dot_atom_text){
        this._dot_atom_text = _dot_atom_text;
        this.head = ((): string => {
        return this._dot_atom_text.head
        })();
        this.tail = ((): string[] => {
        return this._dot_atom_text.tail
        })();
        this.literal = ((): string => {
        return this._dot_atom_text.literal
        })();
        this.parts = ((): string[] => {
        return this.literal.split('.')
        })();
    }
}
export type specials = specials_1 | specials_2 | specials_3 | specials_4 | specials_5 | specials_6 | specials_7 | specials_8 | specials_9 | specials_10;
export type specials_1 = string;
export type specials_2 = string;
export type specials_3 = string;
export type specials_4 = string;
export type specials_5 = string;
export type specials_6 = string;
export type specials_7 = string;
export type specials_8 = string;
export type specials_9 = string;
export type specials_10 = DQUOTE;
export type qtext = qtext_1 | qtext_2 | qtext_3 | qtext_4;
export type qtext_1 = string;
export type qtext_2 = string;
export type qtext_3 = string;
export type qtext_4 = obs_qtext;
export type qcontent = qcontent_1 | qcontent_2;
export type qcontent_1 = qtext;
export type qcontent_2 = quoted_pair;
export class quoted_string {
    public kind: ASTKinds.quoted_string = ASTKinds.quoted_string;
    public _contents: quoted_string_$0[];
    public literal: string;
    public contents: string;
    constructor(_contents: quoted_string_$0[]){
        this._contents = _contents;
        this.literal = ((): string => {
        return `"${this.contents}"`
        })();
        this.contents = ((): string => {
        return this._contents.map(c => c._qcontent).join('')
        })();
    }
}
export interface quoted_string_$0 {
    kind: ASTKinds.quoted_string_$0;
    _qcontent: qcontent;
}
export type word = word_1 | word_2;
export type word_1 = atom;
export type word_2 = quoted_string;
export type phrase = phrase_1 | phrase_2;
export type phrase_1 = word[];
export type phrase_2 = obs_phrase;
export type address = address_1 | address_2;
export type address_1 = mailbox;
export type address_2 = group;
export type mailbox = mailbox_1 | mailbox_2;
export type mailbox_1 = name_addr;
export type mailbox_2 = addr_spec;
export interface name_addr {
    kind: ASTKinds.name_addr;
}
export type angle_addr = angle_addr_1 | angle_addr_2;
export interface angle_addr_1 {
    kind: ASTKinds.angle_addr_1;
}
export type angle_addr_2 = obs_angle_addr;
export interface group {
    kind: ASTKinds.group;
}
export type display_name = phrase;
export type mailbox_list = mailbox_list_1 | mailbox_list_2;
export type mailbox_list_1 = mailbox_list_$0;
export type mailbox_list_2 = obs_mbox_list;
export interface mailbox_list_$0 {
    kind: ASTKinds.mailbox_list_$0;
}
export interface mailbox_list_$0_$0 {
    kind: ASTKinds.mailbox_list_$0_$0;
}
export type address_list = address_list_1 | address_list_2;
export type address_list_1 = address_list_$0;
export type address_list_2 = obs_addr_list;
export interface address_list_$0 {
    kind: ASTKinds.address_list_$0;
}
export interface address_list_$0_$0 {
    kind: ASTKinds.address_list_$0_$0;
}
export type group_list = group_list_1 | group_list_2 | group_list_3;
export type group_list_1 = mailbox_list;
export type group_list_2 = CFWS;
export type group_list_3 = obs_group_list;
export interface addr_spec {
    kind: ASTKinds.addr_spec;
    local_part: local_part;
    domain: domain;
}
export type local_part = local_part_1 | local_part_2 | local_part_3;
export interface local_part_1 {
    kind: ASTKinds.local_part_1;
    token: dot_atom;
}
export interface local_part_2 {
    kind: ASTKinds.local_part_2;
    token: quoted_string;
}
export interface local_part_3 {
    kind: ASTKinds.local_part_3;
    token: obs_local_part;
}
export type domain = domain_1 | domain_2 | domain_3;
export interface domain_1 {
    kind: ASTKinds.domain_1;
    token: dot_atom;
}
export interface domain_2 {
    kind: ASTKinds.domain_2;
    token: domain_literal;
}
export interface domain_3 {
    kind: ASTKinds.domain_3;
    token: obs_domain;
}
export class domain_literal {
    public kind: ASTKinds.domain_literal = ASTKinds.domain_literal;
    public _contents: domain_literal_$0[];
    public literal: string;
    public contents: string;
    constructor(_contents: domain_literal_$0[]){
        this._contents = _contents;
        this.literal = ((): string => {
        return `[${this.contents}]`
        })();
        this.contents = ((): string => {
        return this._contents.map(c => c._dtext).join('')
        })();
    }
}
export interface domain_literal_$0 {
    kind: ASTKinds.domain_literal_$0;
    _dtext: dtext;
}
export type dtext = dtext_1 | dtext_2 | dtext_3;
export type dtext_1 = string;
export type dtext_2 = string;
export interface dtext_3 {
    kind: ASTKinds.dtext_3;
    obs_dtext: obs_dtext;
}
export type obs_NO_WS_CTL = obs_NO_WS_CTL_1 | obs_NO_WS_CTL_2 | obs_NO_WS_CTL_3 | obs_NO_WS_CTL_4 | obs_NO_WS_CTL_5;
export type obs_NO_WS_CTL_1 = string;
export type obs_NO_WS_CTL_2 = string;
export type obs_NO_WS_CTL_3 = string;
export type obs_NO_WS_CTL_4 = string;
export type obs_NO_WS_CTL_5 = string;
export type obs_qtext = obs_NO_WS_CTL;
export type obs_ctext = obs_NO_WS_CTL;
export interface obs_qp {
    kind: ASTKinds.obs_qp;
}
export type obs_qp_$0 = obs_qp_$0_1 | obs_qp_$0_2 | obs_qp_$0_3 | obs_qp_$0_4;
export type obs_qp_$0_1 = string;
export type obs_qp_$0_2 = obs_NO_WS_CTL;
export type obs_qp_$0_3 = LF;
export type obs_qp_$0_4 = CR;
export interface obs_phrase {
    kind: ASTKinds.obs_phrase;
}
export type obs_phrase_$0 = obs_phrase_$0_1 | obs_phrase_$0_2 | obs_phrase_$0_3;
export type obs_phrase_$0_1 = word;
export type obs_phrase_$0_2 = string;
export type obs_phrase_$0_3 = CFWS;
export interface obs_FWS {
    kind: ASTKinds.obs_FWS;
}
export interface obs_FWS_$0 {
    kind: ASTKinds.obs_FWS_$0;
}
export interface obs_angle_addr {
    kind: ASTKinds.obs_angle_addr;
}
export interface obs_route {
    kind: ASTKinds.obs_route;
}
export interface obs_domain_list {
    kind: ASTKinds.obs_domain_list;
}
export type obs_domain_list_$0 = obs_domain_list_$0_1 | obs_domain_list_$0_2;
export type obs_domain_list_$0_1 = CFWS;
export type obs_domain_list_$0_2 = string;
export interface obs_domain_list_$1 {
    kind: ASTKinds.obs_domain_list_$1;
}
export interface obs_domain_list_$1_$0 {
    kind: ASTKinds.obs_domain_list_$1_$0;
}
export interface obs_mbox_list {
    kind: ASTKinds.obs_mbox_list;
}
export interface obs_mbox_list_$0 {
    kind: ASTKinds.obs_mbox_list_$0;
}
export interface obs_mbox_list_$1 {
    kind: ASTKinds.obs_mbox_list_$1;
}
export type obs_mbox_list_$1_$0 = obs_mbox_list_$1_$0_1 | obs_mbox_list_$1_$0_2;
export type obs_mbox_list_$1_$0_1 = mailbox;
export type obs_mbox_list_$1_$0_2 = CFWS;
export interface obs_addr_list {
    kind: ASTKinds.obs_addr_list;
}
export interface obs_addr_list_$0 {
    kind: ASTKinds.obs_addr_list_$0;
}
export interface obs_addr_list_$1 {
    kind: ASTKinds.obs_addr_list_$1;
}
export type obs_addr_list_$1_$0 = obs_addr_list_$1_$0_1 | obs_addr_list_$1_$0_2;
export type obs_addr_list_$1_$0_1 = address;
export type obs_addr_list_$1_$0_2 = CFWS;
export interface obs_group_list {
    kind: ASTKinds.obs_group_list;
}
export interface obs_group_list_$0 {
    kind: ASTKinds.obs_group_list_$0;
}
export interface obs_local_part {
    kind: ASTKinds.obs_local_part;
}
export interface obs_local_part_$0 {
    kind: ASTKinds.obs_local_part_$0;
}
export interface obs_domain {
    kind: ASTKinds.obs_domain;
    head_atom: atom;
}
export interface obs_domain_$0 {
    kind: ASTKinds.obs_domain_$0;
    tail_atom: atom;
}
export type obs_dtext = obs_dtext_1 | obs_dtext_2;
export type obs_dtext_1 = obs_NO_WS_CTL;
export type obs_dtext_2 = quoted_pair;
export class Parser {
    private readonly input: string;
    private pos: PosInfo;
    private negating: boolean = false;
    private memoSafe: boolean = true;
    constructor(input: string) {
        this.pos = {overallPos: 0, line: 1, offset: 0};
        this.input = input;
    }
    public reset(pos: PosInfo) {
        this.pos = pos;
    }
    public finished(): boolean {
        return this.pos.overallPos === this.input.length;
    }
    public clearMemos(): void {
        this.$scope$input$memo.clear();
        this.$scope$CR$memo.clear();
        this.$scope$CRLF$memo.clear();
        this.$scope$DQUOTE$memo.clear();
        this.$scope$HTAB$memo.clear();
        this.$scope$LF$memo.clear();
        this.$scope$SP$memo.clear();
        this.$scope$VCHAR$memo.clear();
        this.$scope$WSP$memo.clear();
        this.$scope$quoted_pair$memo.clear();
        this.$scope$quoted_pair_$0$memo.clear();
        this.$scope$quoted_pair_$0_$0$memo.clear();
        this.$scope$FWS$memo.clear();
        this.$scope$FWS_$0$memo.clear();
        this.$scope$FWS_$0_$0$memo.clear();
        this.$scope$ctext$memo.clear();
        this.$scope$ccontent$memo.clear();
        this.$scope$comment$memo.clear();
        this.$scope$comment_$0$memo.clear();
        this.$scope$CFWS$memo.clear();
        this.$scope$CFWS_$0$memo.clear();
        this.$scope$CFWS_$0_$0$memo.clear();
        this.$scope$atext$memo.clear();
        this.$scope$atom$memo.clear();
        this.$scope$dot_atom_text$memo.clear();
        this.$scope$dot_atom_text_$0$memo.clear();
        this.$scope$dot_atom$memo.clear();
        this.$scope$specials$memo.clear();
        this.$scope$qtext$memo.clear();
        this.$scope$qcontent$memo.clear();
        this.$scope$quoted_string$memo.clear();
        this.$scope$quoted_string_$0$memo.clear();
        this.$scope$word$memo.clear();
        this.$scope$phrase$memo.clear();
        this.$scope$address$memo.clear();
        this.$scope$mailbox$memo.clear();
        this.$scope$name_addr$memo.clear();
        this.$scope$angle_addr$memo.clear();
        this.$scope$group$memo.clear();
        this.$scope$display_name$memo.clear();
        this.$scope$mailbox_list$memo.clear();
        this.$scope$mailbox_list_$0$memo.clear();
        this.$scope$mailbox_list_$0_$0$memo.clear();
        this.$scope$address_list$memo.clear();
        this.$scope$address_list_$0$memo.clear();
        this.$scope$address_list_$0_$0$memo.clear();
        this.$scope$group_list$memo.clear();
        this.$scope$addr_spec$memo.clear();
        this.$scope$local_part$memo.clear();
        this.$scope$domain$memo.clear();
        this.$scope$domain_literal$memo.clear();
        this.$scope$domain_literal_$0$memo.clear();
        this.$scope$dtext$memo.clear();
        this.$scope$obs_NO_WS_CTL$memo.clear();
        this.$scope$obs_qtext$memo.clear();
        this.$scope$obs_ctext$memo.clear();
        this.$scope$obs_qp$memo.clear();
        this.$scope$obs_qp_$0$memo.clear();
        this.$scope$obs_phrase$memo.clear();
        this.$scope$obs_phrase_$0$memo.clear();
        this.$scope$obs_FWS$memo.clear();
        this.$scope$obs_FWS_$0$memo.clear();
        this.$scope$obs_angle_addr$memo.clear();
        this.$scope$obs_route$memo.clear();
        this.$scope$obs_domain_list$memo.clear();
        this.$scope$obs_domain_list_$0$memo.clear();
        this.$scope$obs_domain_list_$1$memo.clear();
        this.$scope$obs_domain_list_$1_$0$memo.clear();
        this.$scope$obs_mbox_list$memo.clear();
        this.$scope$obs_mbox_list_$0$memo.clear();
        this.$scope$obs_mbox_list_$1$memo.clear();
        this.$scope$obs_mbox_list_$1_$0$memo.clear();
        this.$scope$obs_addr_list$memo.clear();
        this.$scope$obs_addr_list_$0$memo.clear();
        this.$scope$obs_addr_list_$1$memo.clear();
        this.$scope$obs_addr_list_$1_$0$memo.clear();
        this.$scope$obs_group_list$memo.clear();
        this.$scope$obs_group_list_$0$memo.clear();
        this.$scope$obs_local_part$memo.clear();
        this.$scope$obs_local_part_$0$memo.clear();
        this.$scope$obs_domain$memo.clear();
        this.$scope$obs_domain_$0$memo.clear();
        this.$scope$obs_dtext$memo.clear();
    }
    protected $scope$input$memo: Map<number, [Nullable<input>, PosInfo]> = new Map();
    protected $scope$CR$memo: Map<number, [Nullable<CR>, PosInfo]> = new Map();
    protected $scope$CRLF$memo: Map<number, [Nullable<CRLF>, PosInfo]> = new Map();
    protected $scope$DQUOTE$memo: Map<number, [Nullable<DQUOTE>, PosInfo]> = new Map();
    protected $scope$HTAB$memo: Map<number, [Nullable<HTAB>, PosInfo]> = new Map();
    protected $scope$LF$memo: Map<number, [Nullable<LF>, PosInfo]> = new Map();
    protected $scope$SP$memo: Map<number, [Nullable<SP>, PosInfo]> = new Map();
    protected $scope$VCHAR$memo: Map<number, [Nullable<VCHAR>, PosInfo]> = new Map();
    protected $scope$WSP$memo: Map<number, [Nullable<WSP>, PosInfo]> = new Map();
    protected $scope$quoted_pair$memo: Map<number, [Nullable<quoted_pair>, PosInfo]> = new Map();
    protected $scope$quoted_pair_$0$memo: Map<number, [Nullable<quoted_pair_$0>, PosInfo]> = new Map();
    protected $scope$quoted_pair_$0_$0$memo: Map<number, [Nullable<quoted_pair_$0_$0>, PosInfo]> = new Map();
    protected $scope$FWS$memo: Map<number, [Nullable<FWS>, PosInfo]> = new Map();
    protected $scope$FWS_$0$memo: Map<number, [Nullable<FWS_$0>, PosInfo]> = new Map();
    protected $scope$FWS_$0_$0$memo: Map<number, [Nullable<FWS_$0_$0>, PosInfo]> = new Map();
    protected $scope$ctext$memo: Map<number, [Nullable<ctext>, PosInfo]> = new Map();
    protected $scope$ccontent$memo: Map<number, [Nullable<ccontent>, PosInfo]> = new Map();
    protected $scope$comment$memo: Map<number, [Nullable<comment>, PosInfo]> = new Map();
    protected $scope$comment_$0$memo: Map<number, [Nullable<comment_$0>, PosInfo]> = new Map();
    protected $scope$CFWS$memo: Map<number, [Nullable<CFWS>, PosInfo]> = new Map();
    protected $scope$CFWS_$0$memo: Map<number, [Nullable<CFWS_$0>, PosInfo]> = new Map();
    protected $scope$CFWS_$0_$0$memo: Map<number, [Nullable<CFWS_$0_$0>, PosInfo]> = new Map();
    protected $scope$atext$memo: Map<number, [Nullable<atext>, PosInfo]> = new Map();
    protected $scope$atom$memo: Map<number, [Nullable<atom>, PosInfo]> = new Map();
    protected $scope$dot_atom_text$memo: Map<number, [Nullable<dot_atom_text>, PosInfo]> = new Map();
    protected $scope$dot_atom_text_$0$memo: Map<number, [Nullable<dot_atom_text_$0>, PosInfo]> = new Map();
    protected $scope$dot_atom$memo: Map<number, [Nullable<dot_atom>, PosInfo]> = new Map();
    protected $scope$specials$memo: Map<number, [Nullable<specials>, PosInfo]> = new Map();
    protected $scope$qtext$memo: Map<number, [Nullable<qtext>, PosInfo]> = new Map();
    protected $scope$qcontent$memo: Map<number, [Nullable<qcontent>, PosInfo]> = new Map();
    protected $scope$quoted_string$memo: Map<number, [Nullable<quoted_string>, PosInfo]> = new Map();
    protected $scope$quoted_string_$0$memo: Map<number, [Nullable<quoted_string_$0>, PosInfo]> = new Map();
    protected $scope$word$memo: Map<number, [Nullable<word>, PosInfo]> = new Map();
    protected $scope$phrase$memo: Map<number, [Nullable<phrase>, PosInfo]> = new Map();
    protected $scope$address$memo: Map<number, [Nullable<address>, PosInfo]> = new Map();
    protected $scope$mailbox$memo: Map<number, [Nullable<mailbox>, PosInfo]> = new Map();
    protected $scope$name_addr$memo: Map<number, [Nullable<name_addr>, PosInfo]> = new Map();
    protected $scope$angle_addr$memo: Map<number, [Nullable<angle_addr>, PosInfo]> = new Map();
    protected $scope$group$memo: Map<number, [Nullable<group>, PosInfo]> = new Map();
    protected $scope$display_name$memo: Map<number, [Nullable<display_name>, PosInfo]> = new Map();
    protected $scope$mailbox_list$memo: Map<number, [Nullable<mailbox_list>, PosInfo]> = new Map();
    protected $scope$mailbox_list_$0$memo: Map<number, [Nullable<mailbox_list_$0>, PosInfo]> = new Map();
    protected $scope$mailbox_list_$0_$0$memo: Map<number, [Nullable<mailbox_list_$0_$0>, PosInfo]> = new Map();
    protected $scope$address_list$memo: Map<number, [Nullable<address_list>, PosInfo]> = new Map();
    protected $scope$address_list_$0$memo: Map<number, [Nullable<address_list_$0>, PosInfo]> = new Map();
    protected $scope$address_list_$0_$0$memo: Map<number, [Nullable<address_list_$0_$0>, PosInfo]> = new Map();
    protected $scope$group_list$memo: Map<number, [Nullable<group_list>, PosInfo]> = new Map();
    protected $scope$addr_spec$memo: Map<number, [Nullable<addr_spec>, PosInfo]> = new Map();
    protected $scope$local_part$memo: Map<number, [Nullable<local_part>, PosInfo]> = new Map();
    protected $scope$domain$memo: Map<number, [Nullable<domain>, PosInfo]> = new Map();
    protected $scope$domain_literal$memo: Map<number, [Nullable<domain_literal>, PosInfo]> = new Map();
    protected $scope$domain_literal_$0$memo: Map<number, [Nullable<domain_literal_$0>, PosInfo]> = new Map();
    protected $scope$dtext$memo: Map<number, [Nullable<dtext>, PosInfo]> = new Map();
    protected $scope$obs_NO_WS_CTL$memo: Map<number, [Nullable<obs_NO_WS_CTL>, PosInfo]> = new Map();
    protected $scope$obs_qtext$memo: Map<number, [Nullable<obs_qtext>, PosInfo]> = new Map();
    protected $scope$obs_ctext$memo: Map<number, [Nullable<obs_ctext>, PosInfo]> = new Map();
    protected $scope$obs_qp$memo: Map<number, [Nullable<obs_qp>, PosInfo]> = new Map();
    protected $scope$obs_qp_$0$memo: Map<number, [Nullable<obs_qp_$0>, PosInfo]> = new Map();
    protected $scope$obs_phrase$memo: Map<number, [Nullable<obs_phrase>, PosInfo]> = new Map();
    protected $scope$obs_phrase_$0$memo: Map<number, [Nullable<obs_phrase_$0>, PosInfo]> = new Map();
    protected $scope$obs_FWS$memo: Map<number, [Nullable<obs_FWS>, PosInfo]> = new Map();
    protected $scope$obs_FWS_$0$memo: Map<number, [Nullable<obs_FWS_$0>, PosInfo]> = new Map();
    protected $scope$obs_angle_addr$memo: Map<number, [Nullable<obs_angle_addr>, PosInfo]> = new Map();
    protected $scope$obs_route$memo: Map<number, [Nullable<obs_route>, PosInfo]> = new Map();
    protected $scope$obs_domain_list$memo: Map<number, [Nullable<obs_domain_list>, PosInfo]> = new Map();
    protected $scope$obs_domain_list_$0$memo: Map<number, [Nullable<obs_domain_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_domain_list_$1$memo: Map<number, [Nullable<obs_domain_list_$1>, PosInfo]> = new Map();
    protected $scope$obs_domain_list_$1_$0$memo: Map<number, [Nullable<obs_domain_list_$1_$0>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list$memo: Map<number, [Nullable<obs_mbox_list>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list_$0$memo: Map<number, [Nullable<obs_mbox_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list_$1$memo: Map<number, [Nullable<obs_mbox_list_$1>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list_$1_$0$memo: Map<number, [Nullable<obs_mbox_list_$1_$0>, PosInfo]> = new Map();
    protected $scope$obs_addr_list$memo: Map<number, [Nullable<obs_addr_list>, PosInfo]> = new Map();
    protected $scope$obs_addr_list_$0$memo: Map<number, [Nullable<obs_addr_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_addr_list_$1$memo: Map<number, [Nullable<obs_addr_list_$1>, PosInfo]> = new Map();
    protected $scope$obs_addr_list_$1_$0$memo: Map<number, [Nullable<obs_addr_list_$1_$0>, PosInfo]> = new Map();
    protected $scope$obs_group_list$memo: Map<number, [Nullable<obs_group_list>, PosInfo]> = new Map();
    protected $scope$obs_group_list_$0$memo: Map<number, [Nullable<obs_group_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_local_part$memo: Map<number, [Nullable<obs_local_part>, PosInfo]> = new Map();
    protected $scope$obs_local_part_$0$memo: Map<number, [Nullable<obs_local_part_$0>, PosInfo]> = new Map();
    protected $scope$obs_domain$memo: Map<number, [Nullable<obs_domain>, PosInfo]> = new Map();
    protected $scope$obs_domain_$0$memo: Map<number, [Nullable<obs_domain_$0>, PosInfo]> = new Map();
    protected $scope$obs_dtext$memo: Map<number, [Nullable<obs_dtext>, PosInfo]> = new Map();
    public matchinput($$dpth: number, $$cr?: ErrorTracker): Nullable<input> {
        return this.memoise(
            () => {
                return this.matchaddr_spec($$dpth + 1, $$cr);
            },
            this.$scope$input$memo,
        );
    }
    public matchCR($$dpth: number, $$cr?: ErrorTracker): Nullable<CR> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x0D)`, $$dpth + 1, $$cr);
            },
            this.$scope$CR$memo,
        );
    }
    public matchCRLF($$dpth: number, $$cr?: ErrorTracker): Nullable<CRLF> {
        return this.memoise(
            () => {
                return this.run<CRLF>($$dpth,
                    () => {
                        let $$res: Nullable<CRLF> = null;
                        if (true
                            && this.matchCR($$dpth + 1, $$cr) !== null
                            && this.matchLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.CRLF, };
                        }
                        return $$res;
                    });
            },
            this.$scope$CRLF$memo,
        );
    }
    public matchDQUOTE($$dpth: number, $$cr?: ErrorTracker): Nullable<DQUOTE> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x22)`, $$dpth + 1, $$cr);
            },
            this.$scope$DQUOTE$memo,
        );
    }
    public matchHTAB($$dpth: number, $$cr?: ErrorTracker): Nullable<HTAB> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x09)`, $$dpth + 1, $$cr);
            },
            this.$scope$HTAB$memo,
        );
    }
    public matchLF($$dpth: number, $$cr?: ErrorTracker): Nullable<LF> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x0A)`, $$dpth + 1, $$cr);
            },
            this.$scope$LF$memo,
        );
    }
    public matchSP($$dpth: number, $$cr?: ErrorTracker): Nullable<SP> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x20)`, $$dpth + 1, $$cr);
            },
            this.$scope$SP$memo,
        );
    }
    public matchVCHAR($$dpth: number, $$cr?: ErrorTracker): Nullable<VCHAR> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:[\x21-\x7E])`, $$dpth + 1, $$cr);
            },
            this.$scope$VCHAR$memo,
        );
    }
    public matchWSP($$dpth: number, $$cr?: ErrorTracker): Nullable<WSP> {
        return this.memoise(
            () => {
                return this.choice<WSP>([
                    () => this.matchWSP_1($$dpth + 1, $$cr),
                    () => this.matchWSP_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$WSP$memo,
        );
    }
    public matchWSP_1($$dpth: number, $$cr?: ErrorTracker): Nullable<WSP_1> {
        return this.matchSP($$dpth + 1, $$cr);
    }
    public matchWSP_2($$dpth: number, $$cr?: ErrorTracker): Nullable<WSP_2> {
        return this.matchHTAB($$dpth + 1, $$cr);
    }
    public matchquoted_pair($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair> {
        return this.memoise(
            () => {
                return this.choice<quoted_pair>([
                    () => this.matchquoted_pair_1($$dpth + 1, $$cr),
                    () => this.matchquoted_pair_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$quoted_pair$memo,
        );
    }
    public matchquoted_pair_1($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_1> {
        return this.matchquoted_pair_$0($$dpth + 1, $$cr);
    }
    public matchquoted_pair_2($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_2> {
        return this.matchobs_qp($$dpth + 1, $$cr);
    }
    public matchquoted_pair_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0> {
        return this.memoise(
            () => {
                return this.run<quoted_pair_$0>($$dpth,
                    () => {
                        let $$res: Nullable<quoted_pair_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr) !== null
                            && this.matchquoted_pair_$0_$0($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.quoted_pair_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$quoted_pair_$0$memo,
        );
    }
    public matchquoted_pair_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0_$0> {
        return this.memoise(
            () => {
                return this.choice<quoted_pair_$0_$0>([
                    () => this.matchquoted_pair_$0_$0_1($$dpth + 1, $$cr),
                    () => this.matchquoted_pair_$0_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$quoted_pair_$0_$0$memo,
        );
    }
    public matchquoted_pair_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0_$0_1> {
        return this.matchVCHAR($$dpth + 1, $$cr);
    }
    public matchquoted_pair_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0_$0_2> {
        return this.matchWSP($$dpth + 1, $$cr);
    }
    public matchFWS($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS> {
        return this.memoise(
            () => {
                return this.choice<FWS>([
                    () => this.matchFWS_1($$dpth + 1, $$cr),
                    () => this.matchFWS_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$FWS$memo,
        );
    }
    public matchFWS_1($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_1> {
        return this.matchFWS_$0($$dpth + 1, $$cr);
    }
    public matchFWS_2($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_2> {
        return this.matchobs_FWS($$dpth + 1, $$cr);
    }
    public matchFWS_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_$0> {
        return this.memoise(
            () => {
                return this.run<FWS_$0>($$dpth,
                    () => {
                        let $$res: Nullable<FWS_$0> = null;
                        if (true
                            && ((this.matchFWS_$0_$0($$dpth + 1, $$cr)) || true)
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), false) !== null
                        ) {
                            $$res = {kind: ASTKinds.FWS_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$FWS_$0$memo,
        );
    }
    public matchFWS_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_$0_$0> {
        return this.memoise(
            () => {
                return this.run<FWS_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<FWS_$0_$0> = null;
                        if (true
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.FWS_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$FWS_$0_$0$memo,
        );
    }
    public matchctext($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext> {
        return this.memoise(
            () => {
                return this.choice<ctext>([
                    () => this.matchctext_1($$dpth + 1, $$cr),
                    () => this.matchctext_2($$dpth + 1, $$cr),
                    () => this.matchctext_3($$dpth + 1, $$cr),
                    () => this.matchctext_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$ctext$memo,
        );
    }
    public matchctext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_1> {
        return this.regexAccept(String.raw`(?:[\x21-\x27])`, $$dpth + 1, $$cr);
    }
    public matchctext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_2> {
        return this.regexAccept(String.raw`(?:[\x2a-\x5b])`, $$dpth + 1, $$cr);
    }
    public matchctext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_3> {
        return this.regexAccept(String.raw`(?:[\x5d-\x7e])`, $$dpth + 1, $$cr);
    }
    public matchctext_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_4> {
        return this.matchobs_ctext($$dpth + 1, $$cr);
    }
    public matchccontent($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent> {
        return this.memoise(
            () => {
                return this.choice<ccontent>([
                    () => this.matchccontent_1($$dpth + 1, $$cr),
                    () => this.matchccontent_2($$dpth + 1, $$cr),
                    () => this.matchccontent_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$ccontent$memo,
        );
    }
    public matchccontent_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent_1> {
        return this.matchctext($$dpth + 1, $$cr);
    }
    public matchccontent_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent_2> {
        return this.matchquoted_pair($$dpth + 1, $$cr);
    }
    public matchccontent_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent_3> {
        return this.matchcomment($$dpth + 1, $$cr);
    }
    public matchcomment($$dpth: number, $$cr?: ErrorTracker): Nullable<comment> {
        return this.memoise(
            () => {
                return this.run<comment>($$dpth,
                    () => {
                        let $$res: Nullable<comment> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                            && this.loop<comment_$0>(() => this.matchcomment_$0($$dpth + 1, $$cr), true) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.comment, };
                        }
                        return $$res;
                    });
            },
            this.$scope$comment$memo,
        );
    }
    public matchcomment_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<comment_$0> {
        return this.memoise(
            () => {
                return this.run<comment_$0>($$dpth,
                    () => {
                        let $$res: Nullable<comment_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchccontent($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.comment_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$comment_$0$memo,
        );
    }
    public matchCFWS($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS> {
        return this.memoise(
            () => {
                return this.choice<CFWS>([
                    () => this.matchCFWS_1($$dpth + 1, $$cr),
                    () => this.matchCFWS_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$CFWS$memo,
        );
    }
    public matchCFWS_1($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_1> {
        return this.matchCFWS_$0($$dpth + 1, $$cr);
    }
    public matchCFWS_2($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_2> {
        return this.matchFWS($$dpth + 1, $$cr);
    }
    public matchCFWS_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_$0> {
        return this.memoise(
            () => {
                return this.run<CFWS_$0>($$dpth,
                    () => {
                        let $$res: Nullable<CFWS_$0> = null;
                        if (true
                            && this.loop<CFWS_$0_$0>(() => this.matchCFWS_$0_$0($$dpth + 1, $$cr), false) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.CFWS_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$CFWS_$0$memo,
        );
    }
    public matchCFWS_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_$0_$0> {
        return this.memoise(
            () => {
                return this.run<CFWS_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<CFWS_$0_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchcomment($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.CFWS_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$CFWS_$0_$0$memo,
        );
    }
    public matchatext($$dpth: number, $$cr?: ErrorTracker): Nullable<atext> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:[A-Za-z0-9!#$%&\x27*+\-\/=?^_\`{|}~])`, $$dpth + 1, $$cr);
            },
            this.$scope$atext$memo,
        );
    }
    public matchatom($$dpth: number, $$cr?: ErrorTracker): Nullable<atom> {
        return this.memoise(
            () => {
                return this.run<atom>($$dpth,
                    () => {
                        let $$res: Nullable<atom> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.loop<atext>(() => this.matchatext($$dpth + 1, $$cr), false) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.atom, };
                        }
                        return $$res;
                    });
            },
            this.$scope$atom$memo,
        );
    }
    public matchdot_atom_text($$dpth: number, $$cr?: ErrorTracker): Nullable<dot_atom_text> {
        return this.memoise(
            () => {
                return this.run<dot_atom_text>($$dpth,
                    () => {
                        let $scope$_head_atext: Nullable<atext[]>;
                        let $scope$_tail_atext: Nullable<dot_atom_text_$0[]>;
                        let $$res: Nullable<dot_atom_text> = null;
                        if (true
                            && ($scope$_head_atext = this.loop<atext>(() => this.matchatext($$dpth + 1, $$cr), false)) !== null
                            && ($scope$_tail_atext = this.loop<dot_atom_text_$0>(() => this.matchdot_atom_text_$0($$dpth + 1, $$cr), true)) !== null
                        ) {
                            $$res = new dot_atom_text($scope$_head_atext, $scope$_tail_atext);
                        }
                        return $$res;
                    });
            },
            this.$scope$dot_atom_text$memo,
        );
    }
    public matchdot_atom_text_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<dot_atom_text_$0> {
        return this.memoise(
            () => {
                return this.run<dot_atom_text_$0>($$dpth,
                    () => {
                        let $scope$_atext: Nullable<atext[]>;
                        let $$res: Nullable<dot_atom_text_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr) !== null
                            && ($scope$_atext = this.loop<atext>(() => this.matchatext($$dpth + 1, $$cr), false)) !== null
                        ) {
                            $$res = {kind: ASTKinds.dot_atom_text_$0, _atext: $scope$_atext};
                        }
                        return $$res;
                    });
            },
            this.$scope$dot_atom_text_$0$memo,
        );
    }
    public matchdot_atom($$dpth: number, $$cr?: ErrorTracker): Nullable<dot_atom> {
        return this.memoise(
            () => {
                return this.run<dot_atom>($$dpth,
                    () => {
                        let $scope$_dot_atom_text: Nullable<dot_atom_text>;
                        let $$res: Nullable<dot_atom> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && ($scope$_dot_atom_text = this.matchdot_atom_text($$dpth + 1, $$cr)) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = new dot_atom($scope$_dot_atom_text);
                        }
                        return $$res;
                    });
            },
            this.$scope$dot_atom$memo,
        );
    }
    public matchspecials($$dpth: number, $$cr?: ErrorTracker): Nullable<specials> {
        return this.memoise(
            () => {
                return this.choice<specials>([
                    () => this.matchspecials_1($$dpth + 1, $$cr),
                    () => this.matchspecials_2($$dpth + 1, $$cr),
                    () => this.matchspecials_3($$dpth + 1, $$cr),
                    () => this.matchspecials_4($$dpth + 1, $$cr),
                    () => this.matchspecials_5($$dpth + 1, $$cr),
                    () => this.matchspecials_6($$dpth + 1, $$cr),
                    () => this.matchspecials_7($$dpth + 1, $$cr),
                    () => this.matchspecials_8($$dpth + 1, $$cr),
                    () => this.matchspecials_9($$dpth + 1, $$cr),
                    () => this.matchspecials_10($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$specials$memo,
        );
    }
    public matchspecials_1($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_1> {
        return this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr);
    }
    public matchspecials_2($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_2> {
        return this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr);
    }
    public matchspecials_3($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_3> {
        return this.regexAccept(String.raw`(?:[<>])`, $$dpth + 1, $$cr);
    }
    public matchspecials_4($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_4> {
        return this.regexAccept(String.raw`(?:\[)`, $$dpth + 1, $$cr);
    }
    public matchspecials_5($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_5> {
        return this.regexAccept(String.raw`(?:\])`, $$dpth + 1, $$cr);
    }
    public matchspecials_6($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_6> {
        return this.regexAccept(String.raw`(?:[:;@])`, $$dpth + 1, $$cr);
    }
    public matchspecials_7($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_7> {
        return this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr);
    }
    public matchspecials_8($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_8> {
        return this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr);
    }
    public matchspecials_9($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_9> {
        return this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr);
    }
    public matchspecials_10($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_10> {
        return this.matchDQUOTE($$dpth + 1, $$cr);
    }
    public matchqtext($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext> {
        return this.memoise(
            () => {
                return this.choice<qtext>([
                    () => this.matchqtext_1($$dpth + 1, $$cr),
                    () => this.matchqtext_2($$dpth + 1, $$cr),
                    () => this.matchqtext_3($$dpth + 1, $$cr),
                    () => this.matchqtext_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$qtext$memo,
        );
    }
    public matchqtext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_1> {
        return this.regexAccept(String.raw`(?:\x21)`, $$dpth + 1, $$cr);
    }
    public matchqtext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_2> {
        return this.regexAccept(String.raw`(?:[\x23-\x5b])`, $$dpth + 1, $$cr);
    }
    public matchqtext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_3> {
        return this.regexAccept(String.raw`(?:[\x5d-\x7e])`, $$dpth + 1, $$cr);
    }
    public matchqtext_4($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_4> {
        return this.matchobs_qtext($$dpth + 1, $$cr);
    }
    public matchqcontent($$dpth: number, $$cr?: ErrorTracker): Nullable<qcontent> {
        return this.memoise(
            () => {
                return this.choice<qcontent>([
                    () => this.matchqcontent_1($$dpth + 1, $$cr),
                    () => this.matchqcontent_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$qcontent$memo,
        );
    }
    public matchqcontent_1($$dpth: number, $$cr?: ErrorTracker): Nullable<qcontent_1> {
        return this.matchqtext($$dpth + 1, $$cr);
    }
    public matchqcontent_2($$dpth: number, $$cr?: ErrorTracker): Nullable<qcontent_2> {
        return this.matchquoted_pair($$dpth + 1, $$cr);
    }
    public matchquoted_string($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_string> {
        return this.memoise(
            () => {
                return this.run<quoted_string>($$dpth,
                    () => {
                        let $scope$_contents: Nullable<quoted_string_$0[]>;
                        let $$res: Nullable<quoted_string> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchDQUOTE($$dpth + 1, $$cr) !== null
                            && ($scope$_contents = this.loop<quoted_string_$0>(() => this.matchquoted_string_$0($$dpth + 1, $$cr), true)) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchDQUOTE($$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = new quoted_string($scope$_contents);
                        }
                        return $$res;
                    });
            },
            this.$scope$quoted_string$memo,
        );
    }
    public matchquoted_string_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_string_$0> {
        return this.memoise(
            () => {
                return this.run<quoted_string_$0>($$dpth,
                    () => {
                        let $scope$_qcontent: Nullable<qcontent>;
                        let $$res: Nullable<quoted_string_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && ($scope$_qcontent = this.matchqcontent($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.quoted_string_$0, _qcontent: $scope$_qcontent};
                        }
                        return $$res;
                    });
            },
            this.$scope$quoted_string_$0$memo,
        );
    }
    public matchword($$dpth: number, $$cr?: ErrorTracker): Nullable<word> {
        return this.memoise(
            () => {
                return this.choice<word>([
                    () => this.matchword_1($$dpth + 1, $$cr),
                    () => this.matchword_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$word$memo,
        );
    }
    public matchword_1($$dpth: number, $$cr?: ErrorTracker): Nullable<word_1> {
        return this.matchatom($$dpth + 1, $$cr);
    }
    public matchword_2($$dpth: number, $$cr?: ErrorTracker): Nullable<word_2> {
        return this.matchquoted_string($$dpth + 1, $$cr);
    }
    public matchphrase($$dpth: number, $$cr?: ErrorTracker): Nullable<phrase> {
        return this.memoise(
            () => {
                return this.choice<phrase>([
                    () => this.matchphrase_1($$dpth + 1, $$cr),
                    () => this.matchphrase_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$phrase$memo,
        );
    }
    public matchphrase_1($$dpth: number, $$cr?: ErrorTracker): Nullable<phrase_1> {
        return this.loop<word>(() => this.matchword($$dpth + 1, $$cr), false);
    }
    public matchphrase_2($$dpth: number, $$cr?: ErrorTracker): Nullable<phrase_2> {
        return this.matchobs_phrase($$dpth + 1, $$cr);
    }
    public matchaddress($$dpth: number, $$cr?: ErrorTracker): Nullable<address> {
        return this.memoise(
            () => {
                return this.choice<address>([
                    () => this.matchaddress_1($$dpth + 1, $$cr),
                    () => this.matchaddress_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$address$memo,
        );
    }
    public matchaddress_1($$dpth: number, $$cr?: ErrorTracker): Nullable<address_1> {
        return this.matchmailbox($$dpth + 1, $$cr);
    }
    public matchaddress_2($$dpth: number, $$cr?: ErrorTracker): Nullable<address_2> {
        return this.matchgroup($$dpth + 1, $$cr);
    }
    public matchmailbox($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox> {
        return this.memoise(
            () => {
                return this.choice<mailbox>([
                    () => this.matchmailbox_1($$dpth + 1, $$cr),
                    () => this.matchmailbox_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$mailbox$memo,
        );
    }
    public matchmailbox_1($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_1> {
        return this.matchname_addr($$dpth + 1, $$cr);
    }
    public matchmailbox_2($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_2> {
        return this.matchaddr_spec($$dpth + 1, $$cr);
    }
    public matchname_addr($$dpth: number, $$cr?: ErrorTracker): Nullable<name_addr> {
        return this.memoise(
            () => {
                return this.run<name_addr>($$dpth,
                    () => {
                        let $$res: Nullable<name_addr> = null;
                        if (true
                            && ((this.matchdisplay_name($$dpth + 1, $$cr)) || true)
                            && this.matchangle_addr($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.name_addr, };
                        }
                        return $$res;
                    });
            },
            this.$scope$name_addr$memo,
        );
    }
    public matchangle_addr($$dpth: number, $$cr?: ErrorTracker): Nullable<angle_addr> {
        return this.memoise(
            () => {
                return this.choice<angle_addr>([
                    () => this.matchangle_addr_1($$dpth + 1, $$cr),
                    () => this.matchangle_addr_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$angle_addr$memo,
        );
    }
    public matchangle_addr_1($$dpth: number, $$cr?: ErrorTracker): Nullable<angle_addr_1> {
        return this.run<angle_addr_1>($$dpth,
            () => {
                let $$res: Nullable<angle_addr_1> = null;
                if (true
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:<)`, $$dpth + 1, $$cr) !== null
                    && this.matchaddr_spec($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:>)`, $$dpth + 1, $$cr) !== null
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.angle_addr_1, };
                }
                return $$res;
            });
    }
    public matchangle_addr_2($$dpth: number, $$cr?: ErrorTracker): Nullable<angle_addr_2> {
        return this.matchobs_angle_addr($$dpth + 1, $$cr);
    }
    public matchgroup($$dpth: number, $$cr?: ErrorTracker): Nullable<group> {
        return this.memoise(
            () => {
                return this.run<group>($$dpth,
                    () => {
                        let $$res: Nullable<group> = null;
                        if (true
                            && this.matchdisplay_name($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchgroup_list($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:;)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.group, };
                        }
                        return $$res;
                    });
            },
            this.$scope$group$memo,
        );
    }
    public matchdisplay_name($$dpth: number, $$cr?: ErrorTracker): Nullable<display_name> {
        return this.memoise(
            () => {
                return this.matchphrase($$dpth + 1, $$cr);
            },
            this.$scope$display_name$memo,
        );
    }
    public matchmailbox_list($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list> {
        return this.memoise(
            () => {
                return this.choice<mailbox_list>([
                    () => this.matchmailbox_list_1($$dpth + 1, $$cr),
                    () => this.matchmailbox_list_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$mailbox_list$memo,
        );
    }
    public matchmailbox_list_1($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_1> {
        return this.matchmailbox_list_$0($$dpth + 1, $$cr);
    }
    public matchmailbox_list_2($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_2> {
        return this.matchobs_mbox_list($$dpth + 1, $$cr);
    }
    public matchmailbox_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_$0> {
        return this.memoise(
            () => {
                return this.run<mailbox_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<mailbox_list_$0> = null;
                        if (true
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.loop<mailbox_list_$0_$0>(() => this.matchmailbox_list_$0_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.mailbox_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$mailbox_list_$0$memo,
        );
    }
    public matchmailbox_list_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_$0_$0> {
        return this.memoise(
            () => {
                return this.run<mailbox_list_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<mailbox_list_$0_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.mailbox_list_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$mailbox_list_$0_$0$memo,
        );
    }
    public matchaddress_list($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list> {
        return this.memoise(
            () => {
                return this.choice<address_list>([
                    () => this.matchaddress_list_1($$dpth + 1, $$cr),
                    () => this.matchaddress_list_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$address_list$memo,
        );
    }
    public matchaddress_list_1($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_1> {
        return this.matchaddress_list_$0($$dpth + 1, $$cr);
    }
    public matchaddress_list_2($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_2> {
        return this.matchobs_addr_list($$dpth + 1, $$cr);
    }
    public matchaddress_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_$0> {
        return this.memoise(
            () => {
                return this.run<address_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<address_list_$0> = null;
                        if (true
                            && this.matchaddress($$dpth + 1, $$cr) !== null
                            && this.loop<address_list_$0_$0>(() => this.matchaddress_list_$0_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.address_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$address_list_$0$memo,
        );
    }
    public matchaddress_list_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_$0_$0> {
        return this.memoise(
            () => {
                return this.run<address_list_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<address_list_$0_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.address_list_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$address_list_$0_$0$memo,
        );
    }
    public matchgroup_list($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list> {
        return this.memoise(
            () => {
                return this.choice<group_list>([
                    () => this.matchgroup_list_1($$dpth + 1, $$cr),
                    () => this.matchgroup_list_2($$dpth + 1, $$cr),
                    () => this.matchgroup_list_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$group_list$memo,
        );
    }
    public matchgroup_list_1($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list_1> {
        return this.matchmailbox_list($$dpth + 1, $$cr);
    }
    public matchgroup_list_2($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchgroup_list_3($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list_3> {
        return this.matchobs_group_list($$dpth + 1, $$cr);
    }
    public matchaddr_spec($$dpth: number, $$cr?: ErrorTracker): Nullable<addr_spec> {
        return this.memoise(
            () => {
                return this.run<addr_spec>($$dpth,
                    () => {
                        let $scope$local_part: Nullable<local_part>;
                        let $scope$domain: Nullable<domain>;
                        let $$res: Nullable<addr_spec> = null;
                        if (true
                            && ($scope$local_part = this.matchlocal_part($$dpth + 1, $$cr)) !== null
                            && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                            && ($scope$domain = this.matchdomain($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.addr_spec, local_part: $scope$local_part, domain: $scope$domain};
                        }
                        return $$res;
                    });
            },
            this.$scope$addr_spec$memo,
        );
    }
    public matchlocal_part($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part> {
        return this.memoise(
            () => {
                return this.choice<local_part>([
                    () => this.matchlocal_part_1($$dpth + 1, $$cr),
                    () => this.matchlocal_part_2($$dpth + 1, $$cr),
                    () => this.matchlocal_part_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$local_part$memo,
        );
    }
    public matchlocal_part_1($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part_1> {
        return this.run<local_part_1>($$dpth,
            () => {
                let $scope$token: Nullable<dot_atom>;
                let $$res: Nullable<local_part_1> = null;
                if (true
                    && ($scope$token = this.matchdot_atom($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.local_part_1, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchlocal_part_2($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part_2> {
        return this.run<local_part_2>($$dpth,
            () => {
                let $scope$token: Nullable<quoted_string>;
                let $$res: Nullable<local_part_2> = null;
                if (true
                    && ($scope$token = this.matchquoted_string($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.local_part_2, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchlocal_part_3($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part_3> {
        return this.run<local_part_3>($$dpth,
            () => {
                let $scope$token: Nullable<obs_local_part>;
                let $$res: Nullable<local_part_3> = null;
                if (true
                    && ($scope$token = this.matchobs_local_part($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.local_part_3, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain($$dpth: number, $$cr?: ErrorTracker): Nullable<domain> {
        return this.memoise(
            () => {
                return this.choice<domain>([
                    () => this.matchdomain_1($$dpth + 1, $$cr),
                    () => this.matchdomain_2($$dpth + 1, $$cr),
                    () => this.matchdomain_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$domain$memo,
        );
    }
    public matchdomain_1($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_1> {
        return this.run<domain_1>($$dpth,
            () => {
                let $scope$token: Nullable<dot_atom>;
                let $$res: Nullable<domain_1> = null;
                if (true
                    && ($scope$token = this.matchdot_atom($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.domain_1, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain_2($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_2> {
        return this.run<domain_2>($$dpth,
            () => {
                let $scope$token: Nullable<domain_literal>;
                let $$res: Nullable<domain_2> = null;
                if (true
                    && ($scope$token = this.matchdomain_literal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.domain_2, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain_3($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_3> {
        return this.run<domain_3>($$dpth,
            () => {
                let $scope$token: Nullable<obs_domain>;
                let $$res: Nullable<domain_3> = null;
                if (true
                    && ($scope$token = this.matchobs_domain($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.domain_3, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain_literal($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_literal> {
        return this.memoise(
            () => {
                return this.run<domain_literal>($$dpth,
                    () => {
                        let $scope$_contents: Nullable<domain_literal_$0[]>;
                        let $$res: Nullable<domain_literal> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:\[)`, $$dpth + 1, $$cr) !== null
                            && ($scope$_contents = this.loop<domain_literal_$0>(() => this.matchdomain_literal_$0($$dpth + 1, $$cr), true)) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:\])`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = new domain_literal($scope$_contents);
                        }
                        return $$res;
                    });
            },
            this.$scope$domain_literal$memo,
        );
    }
    public matchdomain_literal_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_literal_$0> {
        return this.memoise(
            () => {
                return this.run<domain_literal_$0>($$dpth,
                    () => {
                        let $scope$_dtext: Nullable<dtext>;
                        let $$res: Nullable<domain_literal_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && ($scope$_dtext = this.matchdtext($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.domain_literal_$0, _dtext: $scope$_dtext};
                        }
                        return $$res;
                    });
            },
            this.$scope$domain_literal_$0$memo,
        );
    }
    public matchdtext($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext> {
        return this.memoise(
            () => {
                return this.choice<dtext>([
                    () => this.matchdtext_1($$dpth + 1, $$cr),
                    () => this.matchdtext_2($$dpth + 1, $$cr),
                    () => this.matchdtext_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$dtext$memo,
        );
    }
    public matchdtext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext_1> {
        return this.regexAccept(String.raw`(?:[\x21-\x5a])`, $$dpth + 1, $$cr);
    }
    public matchdtext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext_2> {
        return this.regexAccept(String.raw`(?:[\x5e-\x7e])`, $$dpth + 1, $$cr);
    }
    public matchdtext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext_3> {
        return this.run<dtext_3>($$dpth,
            () => {
                let $scope$obs_dtext: Nullable<obs_dtext>;
                let $$res: Nullable<dtext_3> = null;
                if (true
                    && ($scope$obs_dtext = this.matchobs_dtext($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.dtext_3, obs_dtext: $scope$obs_dtext};
                }
                return $$res;
            });
    }
    public matchobs_NO_WS_CTL($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL> {
        return this.memoise(
            () => {
                return this.choice<obs_NO_WS_CTL>([
                    () => this.matchobs_NO_WS_CTL_1($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_2($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_3($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_4($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_5($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_NO_WS_CTL$memo,
        );
    }
    public matchobs_NO_WS_CTL_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_1> {
        return this.regexAccept(String.raw`(?:[\x01-\x08])`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_2> {
        return this.regexAccept(String.raw`(?:\x0B)`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_3> {
        return this.regexAccept(String.raw`(?:\x0C)`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_4($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_4> {
        return this.regexAccept(String.raw`(?:[\x0E-\x1F])`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_5($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_5> {
        return this.regexAccept(String.raw`(?:\x7F)`, $$dpth + 1, $$cr);
    }
    public matchobs_qtext($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qtext> {
        return this.memoise(
            () => {
                return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
            },
            this.$scope$obs_qtext$memo,
        );
    }
    public matchobs_ctext($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_ctext> {
        return this.memoise(
            () => {
                return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
            },
            this.$scope$obs_ctext$memo,
        );
    }
    public matchobs_qp($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp> {
        return this.memoise(
            () => {
                return this.run<obs_qp>($$dpth,
                    () => {
                        let $$res: Nullable<obs_qp> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr) !== null
                            && this.matchobs_qp_$0($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_qp, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_qp$memo,
        );
    }
    public matchobs_qp_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_qp_$0>([
                    () => this.matchobs_qp_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_qp_$0_2($$dpth + 1, $$cr),
                    () => this.matchobs_qp_$0_3($$dpth + 1, $$cr),
                    () => this.matchobs_qp_$0_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_qp_$0$memo,
        );
    }
    public matchobs_qp_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_1> {
        return this.regexAccept(String.raw`(?:\x00)`, $$dpth + 1, $$cr);
    }
    public matchobs_qp_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_2> {
        return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
    }
    public matchobs_qp_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_3> {
        return this.matchLF($$dpth + 1, $$cr);
    }
    public matchobs_qp_$0_4($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_4> {
        return this.matchCR($$dpth + 1, $$cr);
    }
    public matchobs_phrase($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase> {
        return this.memoise(
            () => {
                return this.run<obs_phrase>($$dpth,
                    () => {
                        let $$res: Nullable<obs_phrase> = null;
                        if (true
                            && this.matchword($$dpth + 1, $$cr) !== null
                            && this.matchobs_phrase_$0($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_phrase, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_phrase$memo,
        );
    }
    public matchobs_phrase_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_phrase_$0>([
                    () => this.matchobs_phrase_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_phrase_$0_2($$dpth + 1, $$cr),
                    () => this.matchobs_phrase_$0_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_phrase_$0$memo,
        );
    }
    public matchobs_phrase_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0_1> {
        return this.matchword($$dpth + 1, $$cr);
    }
    public matchobs_phrase_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0_2> {
        return this.regexAccept(String.raw`(?:.)`, $$dpth + 1, $$cr);
    }
    public matchobs_phrase_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0_3> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_FWS($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_FWS> {
        return this.memoise(
            () => {
                return this.run<obs_FWS>($$dpth,
                    () => {
                        let $$res: Nullable<obs_FWS> = null;
                        if (true
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), false) !== null
                            && this.loop<obs_FWS_$0>(() => this.matchobs_FWS_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_FWS, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_FWS$memo,
        );
    }
    public matchobs_FWS_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_FWS_$0> {
        return this.memoise(
            () => {
                return this.run<obs_FWS_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_FWS_$0> = null;
                        if (true
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), false) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_FWS_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_FWS_$0$memo,
        );
    }
    public matchobs_angle_addr($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_angle_addr> {
        return this.memoise(
            () => {
                return this.run<obs_angle_addr>($$dpth,
                    () => {
                        let $$res: Nullable<obs_angle_addr> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:<)`, $$dpth + 1, $$cr) !== null
                            && this.matchobs_route($$dpth + 1, $$cr) !== null
                            && this.matchaddr_spec($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?:>)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_angle_addr, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_angle_addr$memo,
        );
    }
    public matchobs_route($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_route> {
        return this.memoise(
            () => {
                return this.run<obs_route>($$dpth,
                    () => {
                        let $$res: Nullable<obs_route> = null;
                        if (true
                            && this.matchobs_domain_list($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_route, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_route$memo,
        );
    }
    public matchobs_domain_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list> {
        return this.memoise(
            () => {
                return this.run<obs_domain_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_domain_list> = null;
                        if (true
                            && this.loop<obs_domain_list_$0>(() => this.matchobs_domain_list_$0($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                            && this.matchdomain($$dpth + 1, $$cr) !== null
                            && this.loop<obs_domain_list_$1>(() => this.matchobs_domain_list_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_list$memo,
        );
    }
    public matchobs_domain_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_domain_list_$0>([
                    () => this.matchobs_domain_list_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_domain_list_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_domain_list_$0$memo,
        );
    }
    public matchobs_domain_list_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0_1> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_domain_list_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0_2> {
        return this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr);
    }
    public matchobs_domain_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$1> {
        return this.memoise(
            () => {
                return this.run<obs_domain_list_$1>($$dpth,
                    () => {
                        let $$res: Nullable<obs_domain_list_$1> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && ((this.matchobs_domain_list_$1_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_list_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_list_$1$memo,
        );
    }
    public matchobs_domain_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$1_$0> {
        return this.memoise(
            () => {
                return this.run<obs_domain_list_$1_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_domain_list_$1_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                            && this.matchdomain($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_list_$1_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_list_$1_$0$memo,
        );
    }
    public matchobs_mbox_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list> {
        return this.memoise(
            () => {
                return this.run<obs_mbox_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_mbox_list> = null;
                        if (true
                            && this.loop<obs_mbox_list_$0>(() => this.matchobs_mbox_list_$0($$dpth + 1, $$cr), true) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.loop<obs_mbox_list_$1>(() => this.matchobs_mbox_list_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_mbox_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_mbox_list$memo,
        );
    }
    public matchobs_mbox_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$0> {
        return this.memoise(
            () => {
                return this.run<obs_mbox_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_mbox_list_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_mbox_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_mbox_list_$0$memo,
        );
    }
    public matchobs_mbox_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1> {
        return this.memoise(
            () => {
                return this.run<obs_mbox_list_$1>($$dpth,
                    () => {
                        let $$res: Nullable<obs_mbox_list_$1> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchobs_mbox_list_$1_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_mbox_list_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_mbox_list_$1$memo,
        );
    }
    public matchobs_mbox_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_mbox_list_$1_$0>([
                    () => this.matchobs_mbox_list_$1_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_mbox_list_$1_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_mbox_list_$1_$0$memo,
        );
    }
    public matchobs_mbox_list_$1_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0_1> {
        return this.matchmailbox($$dpth + 1, $$cr);
    }
    public matchobs_mbox_list_$1_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_addr_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list> {
        return this.memoise(
            () => {
                return this.run<obs_addr_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_addr_list> = null;
                        if (true
                            && this.loop<obs_addr_list_$0>(() => this.matchobs_addr_list_$0($$dpth + 1, $$cr), true) !== null
                            && this.matchaddress($$dpth + 1, $$cr) !== null
                            && this.loop<obs_addr_list_$1>(() => this.matchobs_addr_list_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_addr_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_addr_list$memo,
        );
    }
    public matchobs_addr_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$0> {
        return this.memoise(
            () => {
                return this.run<obs_addr_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_addr_list_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_addr_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_addr_list_$0$memo,
        );
    }
    public matchobs_addr_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1> {
        return this.memoise(
            () => {
                return this.run<obs_addr_list_$1>($$dpth,
                    () => {
                        let $$res: Nullable<obs_addr_list_$1> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchobs_addr_list_$1_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_addr_list_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_addr_list_$1$memo,
        );
    }
    public matchobs_addr_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_addr_list_$1_$0>([
                    () => this.matchobs_addr_list_$1_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_addr_list_$1_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_addr_list_$1_$0$memo,
        );
    }
    public matchobs_addr_list_$1_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0_1> {
        return this.matchaddress($$dpth + 1, $$cr);
    }
    public matchobs_addr_list_$1_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_group_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_group_list> {
        return this.memoise(
            () => {
                return this.run<obs_group_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_group_list> = null;
                        if (true
                            && this.loop<obs_group_list_$0>(() => this.matchobs_group_list_$0($$dpth + 1, $$cr), false) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_group_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_group_list$memo,
        );
    }
    public matchobs_group_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_group_list_$0> {
        return this.memoise(
            () => {
                return this.run<obs_group_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_group_list_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_group_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_group_list_$0$memo,
        );
    }
    public matchobs_angle_addr($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_angle_addr> {
        return this.run<obs_angle_addr>($$dpth,
            () => {
                let $$res: Nullable<obs_angle_addr> = null;
                if (true
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:<)`, $$dpth + 1, $$cr) !== null
                    && this.matchobs_route($$dpth + 1, $$cr) !== null
                    && this.matchaddr_spec($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:>)`, $$dpth + 1, $$cr) !== null
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.obs_angle_addr, };
                }
                return $$res;
            });
    }
    public matchobs_route($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_route> {
        return this.run<obs_route>($$dpth,
            () => {
                let $$res: Nullable<obs_route> = null;
                if (true
                    && this.matchobs_domain_list($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_route, };
                }
                return $$res;
            });
    }
    public matchobs_domain_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list> {
        return this.run<obs_domain_list>($$dpth,
            () => {
                let $$res: Nullable<obs_domain_list> = null;
                if (true
                    && this.loop<obs_domain_list_$0>(() => this.matchobs_domain_list_$0($$dpth + 1, $$cr), true) !== null
                    && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                    && this.matchdomain($$dpth + 1, $$cr) !== null
                    && this.loop<obs_domain_list_$1>(() => this.matchobs_domain_list_$1($$dpth + 1, $$cr), true) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_domain_list, };
                }
                return $$res;
            });
    }
    public matchobs_domain_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0> {
        return this.choice<obs_domain_list_$0>([
            () => this.matchobs_domain_list_$0_1($$dpth + 1, $$cr),
            () => this.matchobs_domain_list_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchobs_domain_list_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0_1> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_domain_list_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0_2> {
        return this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr);
    }
    public matchobs_domain_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$1> {
        return this.run<obs_domain_list_$1>($$dpth,
            () => {
                let $$res: Nullable<obs_domain_list_$1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                    && ((this.matchobs_domain_list_$1_$0($$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.obs_domain_list_$1, };
                }
                return $$res;
            });
    }
    public matchobs_domain_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$1_$0> {
        return this.run<obs_domain_list_$1_$0>($$dpth,
            () => {
                let $$res: Nullable<obs_domain_list_$1_$0> = null;
                if (true
                    && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                    && this.matchdomain($$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_domain_list_$1_$0, };
                }
                return $$res;
            });
    }
    public matchobs_mbox_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list> {
        return this.run<obs_mbox_list>($$dpth,
            () => {
                let $$res: Nullable<obs_mbox_list> = null;
                if (true
                    && this.loop<obs_mbox_list_$0>(() => this.matchobs_mbox_list_$0($$dpth + 1, $$cr), true) !== null
                    && this.matchmailbox($$dpth + 1, $$cr) !== null
                    && this.loop<obs_mbox_list_$1>(() => this.matchobs_mbox_list_$1($$dpth + 1, $$cr), true) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_mbox_list, };
                }
                return $$res;
            });
    }
    public matchobs_mbox_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$0> {
        return this.run<obs_mbox_list_$0>($$dpth,
            () => {
                let $$res: Nullable<obs_mbox_list_$0> = null;
                if (true
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_mbox_list_$0, };
                }
                return $$res;
            });
    }
    public matchobs_mbox_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1> {
        return this.run<obs_mbox_list_$1>($$dpth,
            () => {
                let $$res: Nullable<obs_mbox_list_$1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && ((this.matchobs_mbox_list_$1_$0($$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.obs_mbox_list_$1, };
                }
                return $$res;
            });
    }
    public matchobs_mbox_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0> {
        return this.choice<obs_mbox_list_$1_$0>([
            () => this.matchobs_mbox_list_$1_$0_1($$dpth + 1, $$cr),
            () => this.matchobs_mbox_list_$1_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchobs_mbox_list_$1_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0_1> {
        return this.matchmailbox($$dpth + 1, $$cr);
    }
    public matchobs_mbox_list_$1_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_addr_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list> {
        return this.run<obs_addr_list>($$dpth,
            () => {
                let $$res: Nullable<obs_addr_list> = null;
                if (true
                    && this.loop<obs_addr_list_$0>(() => this.matchobs_addr_list_$0($$dpth + 1, $$cr), true) !== null
                    && this.matchaddress($$dpth + 1, $$cr) !== null
                    && this.loop<obs_addr_list_$1>(() => this.matchobs_addr_list_$1($$dpth + 1, $$cr), true) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_addr_list, };
                }
                return $$res;
            });
    }
    public matchobs_addr_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$0> {
        return this.run<obs_addr_list_$0>($$dpth,
            () => {
                let $$res: Nullable<obs_addr_list_$0> = null;
                if (true
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_addr_list_$0, };
                }
                return $$res;
            });
    }
    public matchobs_addr_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1> {
        return this.run<obs_addr_list_$1>($$dpth,
            () => {
                let $$res: Nullable<obs_addr_list_$1> = null;
                if (true
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                    && ((this.matchobs_addr_list_$1_$0($$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.obs_addr_list_$1, };
                }
                return $$res;
            });
    }
    public matchobs_addr_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0> {
        return this.choice<obs_addr_list_$1_$0>([
            () => this.matchobs_addr_list_$1_$0_1($$dpth + 1, $$cr),
            () => this.matchobs_addr_list_$1_$0_2($$dpth + 1, $$cr),
        ]);
    }
    public matchobs_addr_list_$1_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0_1> {
        return this.matchaddress($$dpth + 1, $$cr);
    }
    public matchobs_addr_list_$1_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_group_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_group_list> {
        return this.run<obs_group_list>($$dpth,
            () => {
                let $$res: Nullable<obs_group_list> = null;
                if (true
                    && this.loop<obs_group_list_$0>(() => this.matchobs_group_list_$0($$dpth + 1, $$cr), false) !== null
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.obs_group_list, };
                }
                return $$res;
            });
    }
    public matchobs_group_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_group_list_$0> {
        return this.run<obs_group_list_$0>($$dpth,
            () => {
                let $$res: Nullable<obs_group_list_$0> = null;
                if (true
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                ) {
                    $$res = {kind: ASTKinds.obs_group_list_$0, };
                }
                return $$res;
            });
    }
    public matchobs_local_part($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_local_part> {
        return this.memoise(
            () => {
                return this.run<obs_local_part>($$dpth,
                    () => {
                        let $$res: Nullable<obs_local_part> = null;
                        if (true
                            && this.matchword($$dpth + 1, $$cr) !== null
                            && this.loop<obs_local_part_$0>(() => this.matchobs_local_part_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_local_part, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_local_part$memo,
        );
    }
    public matchobs_local_part_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_local_part_$0> {
        return this.memoise(
            () => {
                return this.run<obs_local_part_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_local_part_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr) !== null
                            && this.matchword($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_local_part_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_local_part_$0$memo,
        );
    }
    public matchobs_domain($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain> {
        return this.memoise(
            () => {
                return this.run<obs_domain>($$dpth,
                    () => {
                        let $scope$head_atom: Nullable<atom>;
                        let $$res: Nullable<obs_domain> = null;
                        if (true
                            && ($scope$head_atom = this.matchatom($$dpth + 1, $$cr)) !== null
                            && this.loop<obs_domain_$0>(() => this.matchobs_domain_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain, head_atom: $scope$head_atom};
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain$memo,
        );
    }
    public matchobs_domain_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_$0> {
        return this.memoise(
            () => {
                return this.run<obs_domain_$0>($$dpth,
                    () => {
                        let $scope$tail_atom: Nullable<atom>;
                        let $$res: Nullable<obs_domain_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr) !== null
                            && ($scope$tail_atom = this.matchatom($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_$0, tail_atom: $scope$tail_atom};
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_$0$memo,
        );
    }
    public matchobs_dtext($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_dtext> {
        return this.memoise(
            () => {
                return this.choice<obs_dtext>([
                    () => this.matchobs_dtext_1($$dpth + 1, $$cr),
                    () => this.matchobs_dtext_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_dtext$memo,
        );
    }
    public matchobs_dtext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_dtext_1> {
        return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
    }
    public matchobs_dtext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_dtext_2> {
        return this.matchquoted_pair($$dpth + 1, $$cr);
    }
    public test(): boolean {
        const mrk = this.mark();
        const res = this.matchinput(0);
        const ans = res !== null;
        this.reset(mrk);
        return ans;
    }
    public parse(): ParseResult {
        const mrk = this.mark();
        const res = this.matchinput(0);
        if (res)
            return {ast: res, errs: []};
        this.reset(mrk);
        const rec = new ErrorTracker();
        this.clearMemos();
        this.matchinput(0, rec);
        const err = rec.getErr()
        return {ast: res, errs: err !== null ? [err] : []}
    }
    public mark(): PosInfo {
        return this.pos;
    }
    private loop<T>(func: $$RuleType<T>, star: boolean = false): Nullable<T[]> {
        const mrk = this.mark();
        const res: T[] = [];
        for (;;) {
            const t = func();
            if (t === null) {
                break;
            }
            res.push(t);
        }
        if (star || res.length > 0) {
            return res;
        }
        this.reset(mrk);
        return null;
    }
    private run<T>($$dpth: number, fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn()
        if (res !== null)
            return res;
        this.reset(mrk);
        return null;
    }
    private choice<T>(fns: Array<$$RuleType<T>>): Nullable<T> {
        for (const f of fns) {
            const res = f();
            if (res !== null) {
                return res;
            }
        }
        return null;
    }
    private regexAccept(match: string, dpth: number, cr?: ErrorTracker): Nullable<string> {
        return this.run<string>(dpth,
            () => {
                const reg = new RegExp(match, "y");
                const mrk = this.mark();
                reg.lastIndex = mrk.overallPos;
                const res = this.tryConsume(reg);
                if(cr) {
                    cr.record(mrk, res, {
                        kind: "RegexMatch",
                        // We substring from 3 to len - 1 to strip off the
                        // non-capture group syntax added as a WebKit workaround
                        literal: match.substring(3, match.length - 1),
                        negated: this.negating,
                    });
                }
                return res;
            });
    }
    private tryConsume(reg: RegExp): Nullable<string> {
        const res = reg.exec(this.input);
        if (res) {
            let lineJmp = 0;
            let lind = -1;
            for (let i = 0; i < res[0].length; ++i) {
                if (res[0][i] === "\n") {
                    ++lineJmp;
                    lind = i;
                }
            }
            this.pos = {
                overallPos: reg.lastIndex,
                line: this.pos.line + lineJmp,
                offset: lind === -1 ? this.pos.offset + res[0].length : (res[0].length - lind - 1)
            };
            return res[0];
        }
        return null;
    }
    private noConsume<T>(fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn();
        this.reset(mrk);
        return res;
    }
    private negate<T>(fn: $$RuleType<T>): Nullable<boolean> {
        const mrk = this.mark();
        const oneg = this.negating;
        this.negating = !oneg;
        const res = fn();
        this.negating = oneg;
        this.reset(mrk);
        return res === null ? true : null;
    }
    private memoise<K>(rule: $$RuleType<K>, memo: Map<number, [Nullable<K>, PosInfo]>): Nullable<K> {
        const $scope$pos = this.mark();
        const $scope$memoRes = memo.get($scope$pos.overallPos);
        if(this.memoSafe && $scope$memoRes !== undefined) {
        this.reset($scope$memoRes[1]);
        return $scope$memoRes[0];
        }
        const $scope$result = rule();
        if(this.memoSafe)
        memo.set($scope$pos.overallPos, [$scope$result, this.mark()]);
        return $scope$result;
    }
}
export function parse(s: string): ParseResult {
    const p = new Parser(s);
    return p.parse();
}
export interface ParseResult {
    ast: Nullable<input>;
    errs: SyntaxErr[];
}
export interface PosInfo {
    readonly overallPos: number;
    readonly line: number;
    readonly offset: number;
}
export interface RegexMatch {
    readonly kind: "RegexMatch";
    readonly negated: boolean;
    readonly literal: string;
}
export type EOFMatch = { kind: "EOF"; negated: boolean };
export type MatchAttempt = RegexMatch | EOFMatch;
export class SyntaxErr {
    public pos: PosInfo;
    public expmatches: MatchAttempt[];
    constructor(pos: PosInfo, expmatches: MatchAttempt[]) {
        this.pos = pos;
        this.expmatches = [...expmatches];
    }
    public toString(): string {
        return `Syntax Error at line ${this.pos.line}:${this.pos.offset}. Expected one of ${this.expmatches.map(x => x.kind === "EOF" ? " EOF" : ` ${x.negated ? 'not ': ''}'${x.literal}'`)}`;
    }
}
class ErrorTracker {
    private mxpos: PosInfo = {overallPos: -1, line: -1, offset: -1};
    private regexset: Set<string> = new Set();
    private pmatches: MatchAttempt[] = [];
    public record(pos: PosInfo, result: any, att: MatchAttempt) {
        if ((result === null) === att.negated)
            return;
        if (pos.overallPos > this.mxpos.overallPos) {
            this.mxpos = pos;
            this.pmatches = [];
            this.regexset.clear()
        }
        if (this.mxpos.overallPos === pos.overallPos) {
            if(att.kind === "RegexMatch") {
                if(!this.regexset.has(att.literal))
                    this.pmatches.push(att);
                this.regexset.add(att.literal);
            } else {
                this.pmatches.push(att);
            }
        }
    }
    public getErr(): SyntaxErr | null {
        if (this.mxpos.overallPos !== -1)
            return new SyntaxErr(this.mxpos, this.pmatches);
        return null;
    }
}