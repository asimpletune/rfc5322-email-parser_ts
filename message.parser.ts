/* AutoGenerated Code, changes may be overwritten
*/
type Nullable<T> = T | null;
type $$RuleType<T> = () => Nullable<T>;
export interface ASTNodeIntf {
    kind: ASTKinds;
}
export enum ASTKinds {
    start = "start",
    CR = "CR",
    CRLF = "CRLF",
    DIGIT = "DIGIT",
    TWO_DIGIT = "TWO_DIGIT",
    FOUR_DIGIT = "FOUR_DIGIT",
    DQUOTE = "DQUOTE",
    HTAB = "HTAB",
    LF = "LF",
    SP = "SP",
    VCHAR = "VCHAR",
    WSP_1 = "WSP_1",
    WSP_2 = "WSP_2",
    quoted_pair_1 = "quoted_pair_1",
    quoted_pair_2 = "quoted_pair_2",
    quoted_pair_$0 = "quoted_pair_$0",
    quoted_pair_$0_$0_1 = "quoted_pair_$0_$0_1",
    quoted_pair_$0_$0_2 = "quoted_pair_$0_$0_2",
    FWS_1 = "FWS_1",
    FWS_2 = "FWS_2",
    FWS_$0 = "FWS_$0",
    FWS_$0_$0 = "FWS_$0_$0",
    ctext_1 = "ctext_1",
    ctext_2 = "ctext_2",
    ctext_3 = "ctext_3",
    ctext_4 = "ctext_4",
    ccontent_1 = "ccontent_1",
    ccontent_2 = "ccontent_2",
    ccontent_3 = "ccontent_3",
    comment = "comment",
    comment_$0 = "comment_$0",
    CFWS_1 = "CFWS_1",
    CFWS_2 = "CFWS_2",
    CFWS_$0 = "CFWS_$0",
    CFWS_$0_$0 = "CFWS_$0_$0",
    atext = "atext",
    atom = "atom",
    dot_atom_text = "dot_atom_text",
    dot_atom_text_$0 = "dot_atom_text_$0",
    dot_atom = "dot_atom",
    specials_1 = "specials_1",
    specials_2 = "specials_2",
    specials_3 = "specials_3",
    specials_4 = "specials_4",
    specials_5 = "specials_5",
    specials_6 = "specials_6",
    specials_7 = "specials_7",
    specials_8 = "specials_8",
    specials_9 = "specials_9",
    specials_10 = "specials_10",
    qtext_1 = "qtext_1",
    qtext_2 = "qtext_2",
    qtext_3 = "qtext_3",
    qtext_4 = "qtext_4",
    qcontent_1 = "qcontent_1",
    qcontent_2 = "qcontent_2",
    quoted_string = "quoted_string",
    quoted_string_$0 = "quoted_string_$0",
    word_1 = "word_1",
    word_2 = "word_2",
    phrase_1 = "phrase_1",
    phrase_2 = "phrase_2",
    unstructured_1 = "unstructured_1",
    unstructured_2 = "unstructured_2",
    unstructured_$0 = "unstructured_$0",
    unstructured_$0_$0 = "unstructured_$0_$0",
    date_time = "date_time",
    date_time_$0 = "date_time_$0",
    day_of_week_1 = "day_of_week_1",
    day_of_week_2 = "day_of_week_2",
    day_of_week_$0 = "day_of_week_$0",
    day_name_1 = "day_name_1",
    day_name_2 = "day_name_2",
    day_name_3 = "day_name_3",
    day_name_4 = "day_name_4",
    day_name_5 = "day_name_5",
    day_name_6 = "day_name_6",
    day_name_7 = "day_name_7",
    date = "date",
    day_1 = "day_1",
    day_2 = "day_2",
    day_$0 = "day_$0",
    month_1 = "month_1",
    month_2 = "month_2",
    month_3 = "month_3",
    month_4 = "month_4",
    month_5 = "month_5",
    month_6 = "month_6",
    month_7 = "month_7",
    month_8 = "month_8",
    month_9 = "month_9",
    month_10 = "month_10",
    month_11 = "month_11",
    month_12 = "month_12",
    year_1 = "year_1",
    year_2 = "year_2",
    year_$0 = "year_$0",
    time = "time",
    time_of_day = "time_of_day",
    time_of_day_$0 = "time_of_day_$0",
    hour_1 = "hour_1",
    hour_2 = "hour_2",
    minute_1 = "minute_1",
    minute_2 = "minute_2",
    second_1 = "second_1",
    second_2 = "second_2",
    zone_1 = "zone_1",
    zone_2 = "zone_2",
    zone_$0 = "zone_$0",
    zone_$0_$0_1 = "zone_$0_$0_1",
    zone_$0_$0_2 = "zone_$0_$0_2",
    address_1 = "address_1",
    address_2 = "address_2",
    mailbox_1 = "mailbox_1",
    mailbox_2 = "mailbox_2",
    name_addr = "name_addr",
    angle_addr_1 = "angle_addr_1",
    angle_addr_2 = "angle_addr_2",
    group = "group",
    display_name = "display_name",
    mailbox_list_1 = "mailbox_list_1",
    mailbox_list_2 = "mailbox_list_2",
    mailbox_list_$0 = "mailbox_list_$0",
    mailbox_list_$0_$0 = "mailbox_list_$0_$0",
    address_list_1 = "address_list_1",
    address_list_2 = "address_list_2",
    address_list_$0 = "address_list_$0",
    address_list_$0_$0 = "address_list_$0_$0",
    group_list_1 = "group_list_1",
    group_list_2 = "group_list_2",
    group_list_3 = "group_list_3",
    addr_spec = "addr_spec",
    local_part_1 = "local_part_1",
    local_part_2 = "local_part_2",
    local_part_3 = "local_part_3",
    domain_1 = "domain_1",
    domain_2 = "domain_2",
    domain_3 = "domain_3",
    domain_literal = "domain_literal",
    domain_literal_$0 = "domain_literal_$0",
    dtext_1 = "dtext_1",
    dtext_2 = "dtext_2",
    dtext_3 = "dtext_3",
    message = "message",
    message_$0_1 = "message_$0_1",
    message_$0_2 = "message_$0_2",
    message_$1 = "message_$1",
    body_1 = "body_1",
    body_2 = "body_2",
    body_$0 = "body_$0",
    body_$0_$0 = "body_$0_$0",
    text_1 = "text_1",
    text_2 = "text_2",
    text_3 = "text_3",
    text_4 = "text_4",
    _998text = "_998text",
    fields = "fields",
    fields_$0_1 = "fields_$0_1",
    fields_$0_2 = "fields_$0_2",
    fields_$0_$0_1 = "fields_$0_$0_1",
    fields_$0_$0_2 = "fields_$0_$0_2",
    fields_$0_$0_3 = "fields_$0_$0_3",
    fields_$0_$0_4 = "fields_$0_$0_4",
    fields_$0_$0_5 = "fields_$0_$0_5",
    fields_$0_$0_6 = "fields_$0_$0_6",
    fields_$0_$0_7 = "fields_$0_$0_7",
    fields_$1_1 = "fields_$1_1",
    fields_$1_2 = "fields_$1_2",
    fields_$1_3 = "fields_$1_3",
    fields_$1_4 = "fields_$1_4",
    fields_$1_5 = "fields_$1_5",
    fields_$1_6 = "fields_$1_6",
    fields_$1_7 = "fields_$1_7",
    fields_$1_8 = "fields_$1_8",
    fields_$1_9 = "fields_$1_9",
    fields_$1_10 = "fields_$1_10",
    fields_$1_11 = "fields_$1_11",
    fields_$1_12 = "fields_$1_12",
    fields_$1_13 = "fields_$1_13",
    fields_$1_14 = "fields_$1_14",
    orig_date = "orig_date",
    from = "from",
    sender = "sender",
    reply_to = "reply_to",
    to = "to",
    cc = "cc",
    bcc = "bcc",
    bcc_$0_1 = "bcc_$0_1",
    bcc_$0_2 = "bcc_$0_2",
    message_id = "message_id",
    in_reply_to = "in_reply_to",
    references = "references",
    msg_id = "msg_id",
    id_left_1 = "id_left_1",
    id_left_2 = "id_left_2",
    id_right_1 = "id_right_1",
    id_right_2 = "id_right_2",
    id_right_3 = "id_right_3",
    no_fold_literal = "no_fold_literal",
    subject = "subject",
    comments = "comments",
    keywords = "keywords",
    keywords_$0 = "keywords_$0",
    resent_date = "resent_date",
    resent_from = "resent_from",
    resent_sender = "resent_sender",
    resent_to = "resent_to",
    resent_cc = "resent_cc",
    resent_bcc = "resent_bcc",
    resent_bcc_$0_1 = "resent_bcc_$0_1",
    resent_bcc_$0_2 = "resent_bcc_$0_2",
    resent_msg_id = "resent_msg_id",
    trace = "trace",
    return_path = "return_path",
    path_1 = "path_1",
    path_2 = "path_2",
    path_$0 = "path_$0",
    received = "received",
    received_token_1 = "received_token_1",
    received_token_2 = "received_token_2",
    received_token_3 = "received_token_3",
    received_token_4 = "received_token_4",
    optional_field = "optional_field",
    field_name = "field_name",
    ftext_1 = "ftext_1",
    ftext_2 = "ftext_2",
    obs_NO_WS_CTL_1 = "obs_NO_WS_CTL_1",
    obs_NO_WS_CTL_2 = "obs_NO_WS_CTL_2",
    obs_NO_WS_CTL_3 = "obs_NO_WS_CTL_3",
    obs_NO_WS_CTL_4 = "obs_NO_WS_CTL_4",
    obs_NO_WS_CTL_5 = "obs_NO_WS_CTL_5",
    obs_ctext = "obs_ctext",
    obs_qtext = "obs_qtext",
    obs_utext_1 = "obs_utext_1",
    obs_utext_2 = "obs_utext_2",
    obs_utext_3 = "obs_utext_3",
    obs_qp = "obs_qp",
    obs_qp_$0_1 = "obs_qp_$0_1",
    obs_qp_$0_2 = "obs_qp_$0_2",
    obs_qp_$0_3 = "obs_qp_$0_3",
    obs_qp_$0_4 = "obs_qp_$0_4",
    obs_body = "obs_body",
    obs_body_$0_1 = "obs_body_$0_1",
    obs_body_$0_2 = "obs_body_$0_2",
    obs_body_$0_$0 = "obs_body_$0_$0",
    obs_body_$0_$0_$0 = "obs_body_$0_$0_$0",
    obs_body_$0_$0_$0_$0_1 = "obs_body_$0_$0_$0_$0_1",
    obs_body_$0_$0_$0_$0_2 = "obs_body_$0_$0_$0_$0_2",
    obs_unstruct = "obs_unstruct",
    obs_unstruct_$0_1 = "obs_unstruct_$0_1",
    obs_unstruct_$0_2 = "obs_unstruct_$0_2",
    obs_unstruct_$0_$0 = "obs_unstruct_$0_$0",
    obs_unstruct_$0_$0_$0 = "obs_unstruct_$0_$0_$0",
    obs_phrase = "obs_phrase",
    obs_phrase_$0_1 = "obs_phrase_$0_1",
    obs_phrase_$0_2 = "obs_phrase_$0_2",
    obs_phrase_$0_3 = "obs_phrase_$0_3",
    obs_phrase_list = "obs_phrase_list",
    obs_phrase_list_$0_1 = "obs_phrase_list_$0_1",
    obs_phrase_list_$0_2 = "obs_phrase_list_$0_2",
    obs_phrase_list_$1 = "obs_phrase_list_$1",
    obs_phrase_list_$1_$0_1 = "obs_phrase_list_$1_$0_1",
    obs_phrase_list_$1_$0_2 = "obs_phrase_list_$1_$0_2",
    obs_FWS = "obs_FWS",
    obs_FWS_$0 = "obs_FWS_$0",
    obs_day_of_week = "obs_day_of_week",
    obs_day = "obs_day",
    obs_year = "obs_year",
    obs_hour = "obs_hour",
    obs_minute = "obs_minute",
    obs_second = "obs_second",
    obs_zone_1 = "obs_zone_1",
    obs_zone_2 = "obs_zone_2",
    obs_zone_3 = "obs_zone_3",
    obs_zone_4 = "obs_zone_4",
    obs_zone_5 = "obs_zone_5",
    obs_zone_6 = "obs_zone_6",
    obs_zone_7 = "obs_zone_7",
    obs_zone_8 = "obs_zone_8",
    obs_zone_9 = "obs_zone_9",
    obs_zone_10 = "obs_zone_10",
    obs_zone_11 = "obs_zone_11",
    obs_zone_12 = "obs_zone_12",
    obs_zone_13 = "obs_zone_13",
    obs_zone_14 = "obs_zone_14",
    obs_angle_addr = "obs_angle_addr",
    obs_route = "obs_route",
    obs_domain_list = "obs_domain_list",
    obs_domain_list_$0_1 = "obs_domain_list_$0_1",
    obs_domain_list_$0_2 = "obs_domain_list_$0_2",
    obs_domain_list_$1 = "obs_domain_list_$1",
    obs_domain_list_$1_$0 = "obs_domain_list_$1_$0",
    obs_mbox_list = "obs_mbox_list",
    obs_mbox_list_$0 = "obs_mbox_list_$0",
    obs_mbox_list_$1 = "obs_mbox_list_$1",
    obs_mbox_list_$1_$0_1 = "obs_mbox_list_$1_$0_1",
    obs_mbox_list_$1_$0_2 = "obs_mbox_list_$1_$0_2",
    obs_addr_list = "obs_addr_list",
    obs_addr_list_$0 = "obs_addr_list_$0",
    obs_addr_list_$1 = "obs_addr_list_$1",
    obs_addr_list_$1_$0_1 = "obs_addr_list_$1_$0_1",
    obs_addr_list_$1_$0_2 = "obs_addr_list_$1_$0_2",
    obs_group_list = "obs_group_list",
    obs_group_list_$0 = "obs_group_list_$0",
    obs_local_part = "obs_local_part",
    obs_local_part_$0 = "obs_local_part_$0",
    obs_domain = "obs_domain",
    obs_domain_$0 = "obs_domain_$0",
    obs_dtext_1 = "obs_dtext_1",
    obs_dtext_2 = "obs_dtext_2",
    obs_fields = "obs_fields",
    obs_fields_$0_1 = "obs_fields_$0_1",
    obs_fields_$0_2 = "obs_fields_$0_2",
    obs_fields_$0_3 = "obs_fields_$0_3",
    obs_fields_$0_4 = "obs_fields_$0_4",
    obs_fields_$0_5 = "obs_fields_$0_5",
    obs_fields_$0_6 = "obs_fields_$0_6",
    obs_fields_$0_7 = "obs_fields_$0_7",
    obs_fields_$0_8 = "obs_fields_$0_8",
    obs_fields_$0_9 = "obs_fields_$0_9",
    obs_fields_$0_10 = "obs_fields_$0_10",
    obs_fields_$0_11 = "obs_fields_$0_11",
    obs_fields_$0_12 = "obs_fields_$0_12",
    obs_fields_$0_13 = "obs_fields_$0_13",
    obs_fields_$0_14 = "obs_fields_$0_14",
    obs_fields_$0_15 = "obs_fields_$0_15",
    obs_fields_$0_16 = "obs_fields_$0_16",
    obs_fields_$0_17 = "obs_fields_$0_17",
    obs_fields_$0_18 = "obs_fields_$0_18",
    obs_fields_$0_19 = "obs_fields_$0_19",
    obs_fields_$0_20 = "obs_fields_$0_20",
    obs_fields_$0_21 = "obs_fields_$0_21",
    obs_fields_$0_22 = "obs_fields_$0_22",
    obs_fields_$0_23 = "obs_fields_$0_23",
    obs_fields_$0_24 = "obs_fields_$0_24",
    obs_orig_date = "obs_orig_date",
    obs_from = "obs_from",
    obs_sender = "obs_sender",
    obs_reply_to = "obs_reply_to",
    obs_to = "obs_to",
    obs_cc = "obs_cc",
    obs_bcc = "obs_bcc",
    obs_bcc_$0_1 = "obs_bcc_$0_1",
    obs_bcc_$0_2 = "obs_bcc_$0_2",
    obs_bcc_$0_$0 = "obs_bcc_$0_$0",
    obs_bcc_$0_$0_$0 = "obs_bcc_$0_$0_$0",
    obs_message_id = "obs_message_id",
    obs_in_reply_to = "obs_in_reply_to",
    obs_in_reply_to_$0_1 = "obs_in_reply_to_$0_1",
    obs_in_reply_to_$0_2 = "obs_in_reply_to_$0_2",
    obs_references = "obs_references",
    obs_references_$0_1 = "obs_references_$0_1",
    obs_references_$0_2 = "obs_references_$0_2",
    obs_id_left = "obs_id_left",
    obs_id_right = "obs_id_right",
    obs_subject = "obs_subject",
    obs_comments = "obs_comments",
    obs_keywords = "obs_keywords",
    obs_resent_from = "obs_resent_from",
    obs_resent_send = "obs_resent_send",
    obs_resent_date = "obs_resent_date",
    obs_resent_to = "obs_resent_to",
    obs_resent_cc = "obs_resent_cc",
    obs_resent_bcc = "obs_resent_bcc",
    obs_resent_bcc_$0_1 = "obs_resent_bcc_$0_1",
    obs_resent_bcc_$0_2 = "obs_resent_bcc_$0_2",
    obs_resent_bcc_$0_$0 = "obs_resent_bcc_$0_$0",
    obs_resent_bcc_$0_$0_$0 = "obs_resent_bcc_$0_$0_$0",
    obs_resent_mid = "obs_resent_mid",
    obs_resent_rply = "obs_resent_rply",
    obs_return = "obs_return",
    obs_received = "obs_received",
    obs_optional = "obs_optional",
}
export type start = message;
export type CR = string;
export interface CRLF {
    kind: ASTKinds.CRLF;
}
export type DIGIT = string;
export interface TWO_DIGIT {
    kind: ASTKinds.TWO_DIGIT;
}
export interface FOUR_DIGIT {
    kind: ASTKinds.FOUR_DIGIT;
}
export type DQUOTE = string;
export type HTAB = string;
export type LF = string;
export type SP = string;
export type VCHAR = string;
export type WSP = WSP_1 | WSP_2;
export type WSP_1 = SP;
export type WSP_2 = HTAB;
export type quoted_pair = quoted_pair_1 | quoted_pair_2;
export type quoted_pair_1 = quoted_pair_$0;
export type quoted_pair_2 = obs_qp;
export interface quoted_pair_$0 {
    kind: ASTKinds.quoted_pair_$0;
}
export type quoted_pair_$0_$0 = quoted_pair_$0_$0_1 | quoted_pair_$0_$0_2;
export type quoted_pair_$0_$0_1 = VCHAR;
export type quoted_pair_$0_$0_2 = WSP;
export type FWS = FWS_1 | FWS_2;
export type FWS_1 = FWS_$0;
export type FWS_2 = obs_FWS;
export interface FWS_$0 {
    kind: ASTKinds.FWS_$0;
}
export interface FWS_$0_$0 {
    kind: ASTKinds.FWS_$0_$0;
}
export type ctext = ctext_1 | ctext_2 | ctext_3 | ctext_4;
export type ctext_1 = string;
export type ctext_2 = string;
export type ctext_3 = string;
export type ctext_4 = obs_ctext;
export type ccontent = ccontent_1 | ccontent_2 | ccontent_3;
export type ccontent_1 = ctext;
export type ccontent_2 = quoted_pair;
export type ccontent_3 = comment;
export interface comment {
    kind: ASTKinds.comment;
}
export interface comment_$0 {
    kind: ASTKinds.comment_$0;
}
export type CFWS = CFWS_1 | CFWS_2;
export type CFWS_1 = CFWS_$0;
export type CFWS_2 = FWS;
export interface CFWS_$0 {
    kind: ASTKinds.CFWS_$0;
}
export interface CFWS_$0_$0 {
    kind: ASTKinds.CFWS_$0_$0;
}
export type atext = string;
export interface atom {
    kind: ASTKinds.atom;
}
export class dot_atom_text {
    public kind: ASTKinds.dot_atom_text = ASTKinds.dot_atom_text;
    public _head_atext: atext[];
    public _tail_atext: dot_atom_text_$0[];
    public head: string;
    public tail: string[];
    public literal: string;
    constructor(_head_atext: atext[], _tail_atext: dot_atom_text_$0[]){
        this._head_atext = _head_atext;
        this._tail_atext = _tail_atext;
        this.head = ((): string => {
        return this._head_atext.join('')
        })();
        this.tail = ((): string[] => {
        return this._tail_atext.map(a => a._atext.join(''))
        })();
        this.literal = ((): string => {
        return this.head + this.tail.map(atext => '.' + atext).join('')
        })();
    }
}
export interface dot_atom_text_$0 {
    kind: ASTKinds.dot_atom_text_$0;
    _atext: atext[];
}
export class dot_atom {
    public kind: ASTKinds.dot_atom = ASTKinds.dot_atom;
    public _dot_atom_text: dot_atom_text;
    public head: string;
    public tail: string[];
    public literal: string;
    public parts: string[];
    constructor(_dot_atom_text: dot_atom_text){
        this._dot_atom_text = _dot_atom_text;
        this.head = ((): string => {
        return this._dot_atom_text.head
        })();
        this.tail = ((): string[] => {
        return this._dot_atom_text.tail
        })();
        this.literal = ((): string => {
        return this._dot_atom_text.literal
        })();
        this.parts = ((): string[] => {
        return this.literal.split('.')
        })();
    }
}
export type specials = specials_1 | specials_2 | specials_3 | specials_4 | specials_5 | specials_6 | specials_7 | specials_8 | specials_9 | specials_10;
export type specials_1 = string;
export type specials_2 = string;
export type specials_3 = string;
export type specials_4 = string;
export type specials_5 = string;
export type specials_6 = string;
export type specials_7 = string;
export type specials_8 = string;
export type specials_9 = string;
export type specials_10 = DQUOTE;
export type qtext = qtext_1 | qtext_2 | qtext_3 | qtext_4;
export type qtext_1 = string;
export type qtext_2 = string;
export type qtext_3 = string;
export type qtext_4 = obs_qtext;
export type qcontent = qcontent_1 | qcontent_2;
export type qcontent_1 = qtext;
export type qcontent_2 = quoted_pair;
export class quoted_string {
    public kind: ASTKinds.quoted_string = ASTKinds.quoted_string;
    public _contents: quoted_string_$0[];
    public literal: string;
    public contents: string;
    constructor(_contents: quoted_string_$0[]){
        this._contents = _contents;
        this.literal = ((): string => {
        return `"${this.contents}"`
        })();
        this.contents = ((): string => {
        return this._contents.map(c => c._qcontent).join('')
        })();
    }
}
export interface quoted_string_$0 {
    kind: ASTKinds.quoted_string_$0;
    _qcontent: qcontent;
}
export type word = word_1 | word_2;
export type word_1 = atom;
export type word_2 = quoted_string;
export type phrase = phrase_1 | phrase_2;
export type phrase_1 = word[];
export type phrase_2 = obs_phrase;
export type unstructured = unstructured_1 | unstructured_2;
export type unstructured_1 = unstructured_$0;
export type unstructured_2 = obs_unstruct;
export interface unstructured_$0 {
    kind: ASTKinds.unstructured_$0;
}
export interface unstructured_$0_$0 {
    kind: ASTKinds.unstructured_$0_$0;
}
export interface date_time {
    kind: ASTKinds.date_time;
}
export interface date_time_$0 {
    kind: ASTKinds.date_time_$0;
}
export type day_of_week = day_of_week_1 | day_of_week_2;
export type day_of_week_1 = day_of_week_$0;
export type day_of_week_2 = obs_day_of_week;
export interface day_of_week_$0 {
    kind: ASTKinds.day_of_week_$0;
}
export type day_name = day_name_1 | day_name_2 | day_name_3 | day_name_4 | day_name_5 | day_name_6 | day_name_7;
export type day_name_1 = string;
export type day_name_2 = string;
export type day_name_3 = string;
export type day_name_4 = string;
export type day_name_5 = string;
export type day_name_6 = string;
export type day_name_7 = string;
export interface date {
    kind: ASTKinds.date;
}
export type day = day_1 | day_2;
export type day_1 = day_$0;
export type day_2 = obs_day;
export interface day_$0 {
    kind: ASTKinds.day_$0;
}
export type month = month_1 | month_2 | month_3 | month_4 | month_5 | month_6 | month_7 | month_8 | month_9 | month_10 | month_11 | month_12;
export type month_1 = string;
export type month_2 = string;
export type month_3 = string;
export type month_4 = string;
export type month_5 = string;
export type month_6 = string;
export type month_7 = string;
export type month_8 = string;
export type month_9 = string;
export type month_10 = string;
export type month_11 = string;
export type month_12 = string;
export type year = year_1 | year_2;
export type year_1 = year_$0;
export type year_2 = obs_year;
export interface year_$0 {
    kind: ASTKinds.year_$0;
}
export interface time {
    kind: ASTKinds.time;
}
export interface time_of_day {
    kind: ASTKinds.time_of_day;
}
export interface time_of_day_$0 {
    kind: ASTKinds.time_of_day_$0;
}
export type hour = hour_1 | hour_2;
export type hour_1 = TWO_DIGIT;
export type hour_2 = obs_hour;
export type minute = minute_1 | minute_2;
export type minute_1 = TWO_DIGIT;
export type minute_2 = obs_minute;
export type second = second_1 | second_2;
export type second_1 = TWO_DIGIT;
export type second_2 = obs_second;
export type zone = zone_1 | zone_2;
export type zone_1 = zone_$0;
export type zone_2 = obs_zone;
export interface zone_$0 {
    kind: ASTKinds.zone_$0;
}
export type zone_$0_$0 = zone_$0_$0_1 | zone_$0_$0_2;
export type zone_$0_$0_1 = string;
export type zone_$0_$0_2 = string;
export type address = address_1 | address_2;
export type address_1 = mailbox;
export type address_2 = group;
export type mailbox = mailbox_1 | mailbox_2;
export type mailbox_1 = name_addr;
export type mailbox_2 = addr_spec;
export interface name_addr {
    kind: ASTKinds.name_addr;
}
export type angle_addr = angle_addr_1 | angle_addr_2;
export interface angle_addr_1 {
    kind: ASTKinds.angle_addr_1;
}
export type angle_addr_2 = obs_angle_addr;
export interface group {
    kind: ASTKinds.group;
}
export type display_name = phrase;
export type mailbox_list = mailbox_list_1 | mailbox_list_2;
export type mailbox_list_1 = mailbox_list_$0;
export type mailbox_list_2 = obs_mbox_list;
export interface mailbox_list_$0 {
    kind: ASTKinds.mailbox_list_$0;
}
export interface mailbox_list_$0_$0 {
    kind: ASTKinds.mailbox_list_$0_$0;
}
export type address_list = address_list_1 | address_list_2;
export type address_list_1 = address_list_$0;
export type address_list_2 = obs_addr_list;
export interface address_list_$0 {
    kind: ASTKinds.address_list_$0;
}
export interface address_list_$0_$0 {
    kind: ASTKinds.address_list_$0_$0;
}
export type group_list = group_list_1 | group_list_2 | group_list_3;
export type group_list_1 = mailbox_list;
export type group_list_2 = CFWS;
export type group_list_3 = obs_group_list;
export interface addr_spec {
    kind: ASTKinds.addr_spec;
    local_part: local_part;
    domain: domain;
}
export type local_part = local_part_1 | local_part_2 | local_part_3;
export interface local_part_1 {
    kind: ASTKinds.local_part_1;
    token: dot_atom;
}
export interface local_part_2 {
    kind: ASTKinds.local_part_2;
    token: quoted_string;
}
export interface local_part_3 {
    kind: ASTKinds.local_part_3;
    token: obs_local_part;
}
export type domain = domain_1 | domain_2 | domain_3;
export interface domain_1 {
    kind: ASTKinds.domain_1;
    token: dot_atom;
}
export interface domain_2 {
    kind: ASTKinds.domain_2;
    token: domain_literal;
}
export interface domain_3 {
    kind: ASTKinds.domain_3;
    token: obs_domain;
}
export interface domain_literal {
    kind: ASTKinds.domain_literal;
    _contents: domain_literal_$0[];
}
export interface domain_literal_$0 {
    kind: ASTKinds.domain_literal_$0;
    _dtext: dtext;
}
export type dtext = dtext_1 | dtext_2 | dtext_3;
export type dtext_1 = string;
export type dtext_2 = string;
export interface dtext_3 {
    kind: ASTKinds.dtext_3;
    obs_dtext: obs_dtext;
}
export interface message {
    kind: ASTKinds.message;
}
export type message_$0 = message_$0_1 | message_$0_2;
export type message_$0_1 = fields;
export type message_$0_2 = obs_fields;
export interface message_$1 {
    kind: ASTKinds.message_$1;
}
export type body = body_1 | body_2;
export type body_1 = body_$0;
export type body_2 = obs_body;
export interface body_$0 {
    kind: ASTKinds.body_$0;
}
export interface body_$0_$0 {
    kind: ASTKinds.body_$0_$0;
}
export type text = text_1 | text_2 | text_3 | text_4;
export type text_1 = string;
export type text_2 = string;
export type text_3 = string;
export type text_4 = string;
export type _998text = string;
export interface fields {
    kind: ASTKinds.fields;
}
export type fields_$0 = fields_$0_1 | fields_$0_2;
export interface fields_$0_1 {
    kind: ASTKinds.fields_$0_1;
}
export type fields_$0_2 = fields_$0_$0[];
export type fields_$0_$0 = fields_$0_$0_1 | fields_$0_$0_2 | fields_$0_$0_3 | fields_$0_$0_4 | fields_$0_$0_5 | fields_$0_$0_6 | fields_$0_$0_7;
export type fields_$0_$0_1 = resent_date;
export type fields_$0_$0_2 = resent_from;
export type fields_$0_$0_3 = resent_sender;
export type fields_$0_$0_4 = resent_to;
export type fields_$0_$0_5 = resent_cc;
export type fields_$0_$0_6 = resent_bcc;
export type fields_$0_$0_7 = resent_msg_id;
export type fields_$1 = fields_$1_1 | fields_$1_2 | fields_$1_3 | fields_$1_4 | fields_$1_5 | fields_$1_6 | fields_$1_7 | fields_$1_8 | fields_$1_9 | fields_$1_10 | fields_$1_11 | fields_$1_12 | fields_$1_13 | fields_$1_14;
export type fields_$1_1 = orig_date;
export type fields_$1_2 = from;
export type fields_$1_3 = sender;
export type fields_$1_4 = reply_to;
export type fields_$1_5 = to;
export type fields_$1_6 = cc;
export type fields_$1_7 = bcc;
export type fields_$1_8 = message_id;
export type fields_$1_9 = in_reply_to;
export type fields_$1_10 = references;
export type fields_$1_11 = subject;
export type fields_$1_12 = comments;
export type fields_$1_13 = keywords;
export type fields_$1_14 = optional_field;
export interface orig_date {
    kind: ASTKinds.orig_date;
}
export interface from {
    kind: ASTKinds.from;
}
export interface sender {
    kind: ASTKinds.sender;
}
export interface reply_to {
    kind: ASTKinds.reply_to;
}
export interface to {
    kind: ASTKinds.to;
}
export interface cc {
    kind: ASTKinds.cc;
}
export interface bcc {
    kind: ASTKinds.bcc;
}
export type bcc_$0 = bcc_$0_1 | bcc_$0_2;
export type bcc_$0_1 = address_list;
export type bcc_$0_2 = CFWS;
export interface message_id {
    kind: ASTKinds.message_id;
}
export interface in_reply_to {
    kind: ASTKinds.in_reply_to;
}
export interface references {
    kind: ASTKinds.references;
}
export interface msg_id {
    kind: ASTKinds.msg_id;
}
export type id_left = id_left_1 | id_left_2;
export type id_left_1 = dot_atom_text;
export type id_left_2 = obs_id_left;
export type id_right = id_right_1 | id_right_2 | id_right_3;
export type id_right_1 = dot_atom_text;
export type id_right_2 = no_fold_literal;
export type id_right_3 = obs_id_right;
export interface no_fold_literal {
    kind: ASTKinds.no_fold_literal;
}
export interface subject {
    kind: ASTKinds.subject;
}
export interface comments {
    kind: ASTKinds.comments;
}
export interface keywords {
    kind: ASTKinds.keywords;
}
export interface keywords_$0 {
    kind: ASTKinds.keywords_$0;
}
export interface resent_date {
    kind: ASTKinds.resent_date;
}
export interface resent_from {
    kind: ASTKinds.resent_from;
}
export interface resent_sender {
    kind: ASTKinds.resent_sender;
}
export interface resent_to {
    kind: ASTKinds.resent_to;
}
export interface resent_cc {
    kind: ASTKinds.resent_cc;
}
export interface resent_bcc {
    kind: ASTKinds.resent_bcc;
}
export type resent_bcc_$0 = resent_bcc_$0_1 | resent_bcc_$0_2;
export type resent_bcc_$0_1 = address_list;
export type resent_bcc_$0_2 = CFWS;
export interface resent_msg_id {
    kind: ASTKinds.resent_msg_id;
}
export interface trace {
    kind: ASTKinds.trace;
}
export interface return_path {
    kind: ASTKinds.return_path;
}
export type path = path_1 | path_2;
export type path_1 = angle_addr;
export type path_2 = path_$0;
export interface path_$0 {
    kind: ASTKinds.path_$0;
}
export interface received {
    kind: ASTKinds.received;
}
export type received_token = received_token_1 | received_token_2 | received_token_3 | received_token_4;
export type received_token_1 = word;
export type received_token_2 = angle_addr;
export type received_token_3 = addr_spec;
export type received_token_4 = domain;
export interface optional_field {
    kind: ASTKinds.optional_field;
}
export type field_name = ftext[];
export type ftext = ftext_1 | ftext_2;
export type ftext_1 = string;
export type ftext_2 = string;
export type obs_NO_WS_CTL = obs_NO_WS_CTL_1 | obs_NO_WS_CTL_2 | obs_NO_WS_CTL_3 | obs_NO_WS_CTL_4 | obs_NO_WS_CTL_5;
export type obs_NO_WS_CTL_1 = string;
export type obs_NO_WS_CTL_2 = string;
export type obs_NO_WS_CTL_3 = string;
export type obs_NO_WS_CTL_4 = string;
export type obs_NO_WS_CTL_5 = string;
export type obs_ctext = obs_NO_WS_CTL;
export type obs_qtext = obs_NO_WS_CTL;
export type obs_utext = obs_utext_1 | obs_utext_2 | obs_utext_3;
export type obs_utext_1 = string;
export type obs_utext_2 = obs_NO_WS_CTL;
export type obs_utext_3 = VCHAR;
export interface obs_qp {
    kind: ASTKinds.obs_qp;
}
export type obs_qp_$0 = obs_qp_$0_1 | obs_qp_$0_2 | obs_qp_$0_3 | obs_qp_$0_4;
export type obs_qp_$0_1 = string;
export type obs_qp_$0_2 = obs_NO_WS_CTL;
export type obs_qp_$0_3 = LF;
export type obs_qp_$0_4 = CR;
export type obs_body = obs_body_$0[];
export type obs_body_$0 = obs_body_$0_1 | obs_body_$0_2;
export type obs_body_$0_1 = obs_body_$0_$0;
export type obs_body_$0_2 = CRLF;
export interface obs_body_$0_$0 {
    kind: ASTKinds.obs_body_$0_$0;
}
export interface obs_body_$0_$0_$0 {
    kind: ASTKinds.obs_body_$0_$0_$0;
}
export type obs_body_$0_$0_$0_$0 = obs_body_$0_$0_$0_$0_1 | obs_body_$0_$0_$0_$0_2;
export type obs_body_$0_$0_$0_$0_1 = string;
export type obs_body_$0_$0_$0_$0_2 = text;
export type obs_unstruct = obs_unstruct_$0[];
export type obs_unstruct_$0 = obs_unstruct_$0_1 | obs_unstruct_$0_2;
export type obs_unstruct_$0_1 = obs_unstruct_$0_$0;
export type obs_unstruct_$0_2 = FWS;
export interface obs_unstruct_$0_$0 {
    kind: ASTKinds.obs_unstruct_$0_$0;
}
export interface obs_unstruct_$0_$0_$0 {
    kind: ASTKinds.obs_unstruct_$0_$0_$0;
}
export interface obs_phrase {
    kind: ASTKinds.obs_phrase;
}
export type obs_phrase_$0 = obs_phrase_$0_1 | obs_phrase_$0_2 | obs_phrase_$0_3;
export type obs_phrase_$0_1 = word;
export type obs_phrase_$0_2 = string;
export type obs_phrase_$0_3 = CFWS;
export interface obs_phrase_list {
    kind: ASTKinds.obs_phrase_list;
}
export type obs_phrase_list_$0 = obs_phrase_list_$0_1 | obs_phrase_list_$0_2;
export type obs_phrase_list_$0_1 = phrase;
export type obs_phrase_list_$0_2 = CFWS;
export interface obs_phrase_list_$1 {
    kind: ASTKinds.obs_phrase_list_$1;
}
export type obs_phrase_list_$1_$0 = obs_phrase_list_$1_$0_1 | obs_phrase_list_$1_$0_2;
export type obs_phrase_list_$1_$0_1 = phrase;
export type obs_phrase_list_$1_$0_2 = CFWS;
export interface obs_FWS {
    kind: ASTKinds.obs_FWS;
}
export interface obs_FWS_$0 {
    kind: ASTKinds.obs_FWS_$0;
}
export interface obs_day_of_week {
    kind: ASTKinds.obs_day_of_week;
}
export interface obs_day {
    kind: ASTKinds.obs_day;
}
export interface obs_year {
    kind: ASTKinds.obs_year;
}
export interface obs_hour {
    kind: ASTKinds.obs_hour;
}
export interface obs_minute {
    kind: ASTKinds.obs_minute;
}
export interface obs_second {
    kind: ASTKinds.obs_second;
}
export type obs_zone = obs_zone_1 | obs_zone_2 | obs_zone_3 | obs_zone_4 | obs_zone_5 | obs_zone_6 | obs_zone_7 | obs_zone_8 | obs_zone_9 | obs_zone_10 | obs_zone_11 | obs_zone_12 | obs_zone_13 | obs_zone_14;
export type obs_zone_1 = string;
export type obs_zone_2 = string;
export type obs_zone_3 = string;
export type obs_zone_4 = string;
export type obs_zone_5 = string;
export type obs_zone_6 = string;
export type obs_zone_7 = string;
export type obs_zone_8 = string;
export type obs_zone_9 = string;
export type obs_zone_10 = string;
export type obs_zone_11 = string;
export type obs_zone_12 = string;
export type obs_zone_13 = string;
export type obs_zone_14 = string;
export interface obs_angle_addr {
    kind: ASTKinds.obs_angle_addr;
}
export interface obs_route {
    kind: ASTKinds.obs_route;
}
export interface obs_domain_list {
    kind: ASTKinds.obs_domain_list;
}
export type obs_domain_list_$0 = obs_domain_list_$0_1 | obs_domain_list_$0_2;
export type obs_domain_list_$0_1 = CFWS;
export type obs_domain_list_$0_2 = string;
export interface obs_domain_list_$1 {
    kind: ASTKinds.obs_domain_list_$1;
}
export interface obs_domain_list_$1_$0 {
    kind: ASTKinds.obs_domain_list_$1_$0;
}
export interface obs_mbox_list {
    kind: ASTKinds.obs_mbox_list;
}
export interface obs_mbox_list_$0 {
    kind: ASTKinds.obs_mbox_list_$0;
}
export interface obs_mbox_list_$1 {
    kind: ASTKinds.obs_mbox_list_$1;
}
export type obs_mbox_list_$1_$0 = obs_mbox_list_$1_$0_1 | obs_mbox_list_$1_$0_2;
export type obs_mbox_list_$1_$0_1 = mailbox;
export type obs_mbox_list_$1_$0_2 = CFWS;
export interface obs_addr_list {
    kind: ASTKinds.obs_addr_list;
}
export interface obs_addr_list_$0 {
    kind: ASTKinds.obs_addr_list_$0;
}
export interface obs_addr_list_$1 {
    kind: ASTKinds.obs_addr_list_$1;
}
export type obs_addr_list_$1_$0 = obs_addr_list_$1_$0_1 | obs_addr_list_$1_$0_2;
export type obs_addr_list_$1_$0_1 = address;
export type obs_addr_list_$1_$0_2 = CFWS;
export interface obs_group_list {
    kind: ASTKinds.obs_group_list;
}
export interface obs_group_list_$0 {
    kind: ASTKinds.obs_group_list_$0;
}
export interface obs_local_part {
    kind: ASTKinds.obs_local_part;
}
export interface obs_local_part_$0 {
    kind: ASTKinds.obs_local_part_$0;
}
export interface obs_domain {
    kind: ASTKinds.obs_domain;
    head_atom: atom;
}
export interface obs_domain_$0 {
    kind: ASTKinds.obs_domain_$0;
    tail_atom: atom;
}
export type obs_dtext = obs_dtext_1 | obs_dtext_2;
export type obs_dtext_1 = obs_NO_WS_CTL;
export type obs_dtext_2 = quoted_pair;
export type obs_fields = obs_fields_$0[];
export type obs_fields_$0 = obs_fields_$0_1 | obs_fields_$0_2 | obs_fields_$0_3 | obs_fields_$0_4 | obs_fields_$0_5 | obs_fields_$0_6 | obs_fields_$0_7 | obs_fields_$0_8 | obs_fields_$0_9 | obs_fields_$0_10 | obs_fields_$0_11 | obs_fields_$0_12 | obs_fields_$0_13 | obs_fields_$0_14 | obs_fields_$0_15 | obs_fields_$0_16 | obs_fields_$0_17 | obs_fields_$0_18 | obs_fields_$0_19 | obs_fields_$0_20 | obs_fields_$0_21 | obs_fields_$0_22 | obs_fields_$0_23 | obs_fields_$0_24;
export type obs_fields_$0_1 = obs_return;
export type obs_fields_$0_2 = obs_received;
export type obs_fields_$0_3 = obs_orig_date;
export type obs_fields_$0_4 = obs_from;
export type obs_fields_$0_5 = obs_sender;
export type obs_fields_$0_6 = obs_reply_to;
export type obs_fields_$0_7 = obs_to;
export type obs_fields_$0_8 = obs_cc;
export type obs_fields_$0_9 = obs_bcc;
export type obs_fields_$0_10 = obs_message_id;
export type obs_fields_$0_11 = obs_in_reply_to;
export type obs_fields_$0_12 = obs_references;
export type obs_fields_$0_13 = obs_subject;
export type obs_fields_$0_14 = obs_comments;
export type obs_fields_$0_15 = obs_keywords;
export type obs_fields_$0_16 = obs_resent_date;
export type obs_fields_$0_17 = obs_resent_from;
export type obs_fields_$0_18 = obs_resent_send;
export type obs_fields_$0_19 = obs_resent_rply;
export type obs_fields_$0_20 = obs_resent_to;
export type obs_fields_$0_21 = obs_resent_cc;
export type obs_fields_$0_22 = obs_resent_bcc;
export type obs_fields_$0_23 = obs_resent_mid;
export type obs_fields_$0_24 = obs_optional;
export interface obs_orig_date {
    kind: ASTKinds.obs_orig_date;
}
export interface obs_from {
    kind: ASTKinds.obs_from;
}
export interface obs_sender {
    kind: ASTKinds.obs_sender;
}
export interface obs_reply_to {
    kind: ASTKinds.obs_reply_to;
}
export interface obs_to {
    kind: ASTKinds.obs_to;
}
export interface obs_cc {
    kind: ASTKinds.obs_cc;
}
export interface obs_bcc {
    kind: ASTKinds.obs_bcc;
}
export type obs_bcc_$0 = obs_bcc_$0_1 | obs_bcc_$0_2;
export type obs_bcc_$0_1 = address_list;
export type obs_bcc_$0_2 = obs_bcc_$0_$0;
export interface obs_bcc_$0_$0 {
    kind: ASTKinds.obs_bcc_$0_$0;
}
export interface obs_bcc_$0_$0_$0 {
    kind: ASTKinds.obs_bcc_$0_$0_$0;
}
export interface obs_message_id {
    kind: ASTKinds.obs_message_id;
}
export interface obs_in_reply_to {
    kind: ASTKinds.obs_in_reply_to;
}
export type obs_in_reply_to_$0 = obs_in_reply_to_$0_1 | obs_in_reply_to_$0_2;
export type obs_in_reply_to_$0_1 = phrase;
export type obs_in_reply_to_$0_2 = msg_id;
export interface obs_references {
    kind: ASTKinds.obs_references;
}
export type obs_references_$0 = obs_references_$0_1 | obs_references_$0_2;
export type obs_references_$0_1 = phrase;
export type obs_references_$0_2 = msg_id;
export type obs_id_left = local_part;
export type obs_id_right = domain;
export interface obs_subject {
    kind: ASTKinds.obs_subject;
}
export interface obs_comments {
    kind: ASTKinds.obs_comments;
}
export interface obs_keywords {
    kind: ASTKinds.obs_keywords;
}
export interface obs_resent_from {
    kind: ASTKinds.obs_resent_from;
}
export interface obs_resent_send {
    kind: ASTKinds.obs_resent_send;
}
export interface obs_resent_date {
    kind: ASTKinds.obs_resent_date;
}
export interface obs_resent_to {
    kind: ASTKinds.obs_resent_to;
}
export interface obs_resent_cc {
    kind: ASTKinds.obs_resent_cc;
}
export interface obs_resent_bcc {
    kind: ASTKinds.obs_resent_bcc;
}
export type obs_resent_bcc_$0 = obs_resent_bcc_$0_1 | obs_resent_bcc_$0_2;
export type obs_resent_bcc_$0_1 = address_list;
export type obs_resent_bcc_$0_2 = obs_resent_bcc_$0_$0;
export interface obs_resent_bcc_$0_$0 {
    kind: ASTKinds.obs_resent_bcc_$0_$0;
}
export interface obs_resent_bcc_$0_$0_$0 {
    kind: ASTKinds.obs_resent_bcc_$0_$0_$0;
}
export interface obs_resent_mid {
    kind: ASTKinds.obs_resent_mid;
}
export interface obs_resent_rply {
    kind: ASTKinds.obs_resent_rply;
}
export interface obs_return {
    kind: ASTKinds.obs_return;
}
export interface obs_received {
    kind: ASTKinds.obs_received;
}
export interface obs_optional {
    kind: ASTKinds.obs_optional;
}
export class Parser {
    private readonly input: string;
    private pos: PosInfo;
    private negating: boolean = false;
    private memoSafe: boolean = true;
    constructor(input: string) {
        this.pos = {overallPos: 0, line: 1, offset: 0};
        this.input = input;
    }
    public reset(pos: PosInfo) {
        this.pos = pos;
    }
    public finished(): boolean {
        return this.pos.overallPos === this.input.length;
    }
    public clearMemos(): void {
        this.$scope$start$memo.clear();
        this.$scope$CR$memo.clear();
        this.$scope$CRLF$memo.clear();
        this.$scope$DIGIT$memo.clear();
        this.$scope$TWO_DIGIT$memo.clear();
        this.$scope$FOUR_DIGIT$memo.clear();
        this.$scope$DQUOTE$memo.clear();
        this.$scope$HTAB$memo.clear();
        this.$scope$LF$memo.clear();
        this.$scope$SP$memo.clear();
        this.$scope$VCHAR$memo.clear();
        this.$scope$WSP$memo.clear();
        this.$scope$quoted_pair$memo.clear();
        this.$scope$quoted_pair_$0$memo.clear();
        this.$scope$quoted_pair_$0_$0$memo.clear();
        this.$scope$FWS$memo.clear();
        this.$scope$FWS_$0$memo.clear();
        this.$scope$FWS_$0_$0$memo.clear();
        this.$scope$ctext$memo.clear();
        this.$scope$ccontent$memo.clear();
        this.$scope$comment$memo.clear();
        this.$scope$comment_$0$memo.clear();
        this.$scope$CFWS$memo.clear();
        this.$scope$CFWS_$0$memo.clear();
        this.$scope$CFWS_$0_$0$memo.clear();
        this.$scope$atext$memo.clear();
        this.$scope$atom$memo.clear();
        this.$scope$dot_atom_text$memo.clear();
        this.$scope$dot_atom_text_$0$memo.clear();
        this.$scope$dot_atom$memo.clear();
        this.$scope$specials$memo.clear();
        this.$scope$qtext$memo.clear();
        this.$scope$qcontent$memo.clear();
        this.$scope$quoted_string$memo.clear();
        this.$scope$quoted_string_$0$memo.clear();
        this.$scope$word$memo.clear();
        this.$scope$phrase$memo.clear();
        this.$scope$unstructured$memo.clear();
        this.$scope$unstructured_$0$memo.clear();
        this.$scope$unstructured_$0_$0$memo.clear();
        this.$scope$date_time$memo.clear();
        this.$scope$date_time_$0$memo.clear();
        this.$scope$day_of_week$memo.clear();
        this.$scope$day_of_week_$0$memo.clear();
        this.$scope$day_name$memo.clear();
        this.$scope$date$memo.clear();
        this.$scope$day$memo.clear();
        this.$scope$day_$0$memo.clear();
        this.$scope$month$memo.clear();
        this.$scope$year$memo.clear();
        this.$scope$year_$0$memo.clear();
        this.$scope$time$memo.clear();
        this.$scope$time_of_day$memo.clear();
        this.$scope$time_of_day_$0$memo.clear();
        this.$scope$hour$memo.clear();
        this.$scope$minute$memo.clear();
        this.$scope$second$memo.clear();
        this.$scope$zone$memo.clear();
        this.$scope$zone_$0$memo.clear();
        this.$scope$zone_$0_$0$memo.clear();
        this.$scope$address$memo.clear();
        this.$scope$mailbox$memo.clear();
        this.$scope$name_addr$memo.clear();
        this.$scope$angle_addr$memo.clear();
        this.$scope$group$memo.clear();
        this.$scope$display_name$memo.clear();
        this.$scope$mailbox_list$memo.clear();
        this.$scope$mailbox_list_$0$memo.clear();
        this.$scope$mailbox_list_$0_$0$memo.clear();
        this.$scope$address_list$memo.clear();
        this.$scope$address_list_$0$memo.clear();
        this.$scope$address_list_$0_$0$memo.clear();
        this.$scope$group_list$memo.clear();
        this.$scope$addr_spec$memo.clear();
        this.$scope$local_part$memo.clear();
        this.$scope$domain$memo.clear();
        this.$scope$domain_literal$memo.clear();
        this.$scope$domain_literal_$0$memo.clear();
        this.$scope$dtext$memo.clear();
        this.$scope$message$memo.clear();
        this.$scope$message_$0$memo.clear();
        this.$scope$message_$1$memo.clear();
        this.$scope$body$memo.clear();
        this.$scope$body_$0$memo.clear();
        this.$scope$body_$0_$0$memo.clear();
        this.$scope$text$memo.clear();
        this.$scope$_998text$memo.clear();
        this.$scope$fields$memo.clear();
        this.$scope$fields_$0$memo.clear();
        this.$scope$fields_$0_$0$memo.clear();
        this.$scope$fields_$1$memo.clear();
        this.$scope$orig_date$memo.clear();
        this.$scope$from$memo.clear();
        this.$scope$sender$memo.clear();
        this.$scope$reply_to$memo.clear();
        this.$scope$to$memo.clear();
        this.$scope$cc$memo.clear();
        this.$scope$bcc$memo.clear();
        this.$scope$bcc_$0$memo.clear();
        this.$scope$message_id$memo.clear();
        this.$scope$in_reply_to$memo.clear();
        this.$scope$references$memo.clear();
        this.$scope$msg_id$memo.clear();
        this.$scope$id_left$memo.clear();
        this.$scope$id_right$memo.clear();
        this.$scope$no_fold_literal$memo.clear();
        this.$scope$subject$memo.clear();
        this.$scope$comments$memo.clear();
        this.$scope$keywords$memo.clear();
        this.$scope$keywords_$0$memo.clear();
        this.$scope$resent_date$memo.clear();
        this.$scope$resent_from$memo.clear();
        this.$scope$resent_sender$memo.clear();
        this.$scope$resent_to$memo.clear();
        this.$scope$resent_cc$memo.clear();
        this.$scope$resent_bcc$memo.clear();
        this.$scope$resent_bcc_$0$memo.clear();
        this.$scope$resent_msg_id$memo.clear();
        this.$scope$trace$memo.clear();
        this.$scope$return_path$memo.clear();
        this.$scope$path$memo.clear();
        this.$scope$path_$0$memo.clear();
        this.$scope$received$memo.clear();
        this.$scope$received_token$memo.clear();
        this.$scope$optional_field$memo.clear();
        this.$scope$field_name$memo.clear();
        this.$scope$ftext$memo.clear();
        this.$scope$obs_NO_WS_CTL$memo.clear();
        this.$scope$obs_ctext$memo.clear();
        this.$scope$obs_qtext$memo.clear();
        this.$scope$obs_utext$memo.clear();
        this.$scope$obs_qp$memo.clear();
        this.$scope$obs_qp_$0$memo.clear();
        this.$scope$obs_body$memo.clear();
        this.$scope$obs_body_$0$memo.clear();
        this.$scope$obs_body_$0_$0$memo.clear();
        this.$scope$obs_body_$0_$0_$0$memo.clear();
        this.$scope$obs_body_$0_$0_$0_$0$memo.clear();
        this.$scope$obs_unstruct$memo.clear();
        this.$scope$obs_unstruct_$0$memo.clear();
        this.$scope$obs_unstruct_$0_$0$memo.clear();
        this.$scope$obs_unstruct_$0_$0_$0$memo.clear();
        this.$scope$obs_phrase$memo.clear();
        this.$scope$obs_phrase_$0$memo.clear();
        this.$scope$obs_phrase_list$memo.clear();
        this.$scope$obs_phrase_list_$0$memo.clear();
        this.$scope$obs_phrase_list_$1$memo.clear();
        this.$scope$obs_phrase_list_$1_$0$memo.clear();
        this.$scope$obs_FWS$memo.clear();
        this.$scope$obs_FWS_$0$memo.clear();
        this.$scope$obs_day_of_week$memo.clear();
        this.$scope$obs_day$memo.clear();
        this.$scope$obs_year$memo.clear();
        this.$scope$obs_hour$memo.clear();
        this.$scope$obs_minute$memo.clear();
        this.$scope$obs_second$memo.clear();
        this.$scope$obs_zone$memo.clear();
        this.$scope$obs_angle_addr$memo.clear();
        this.$scope$obs_route$memo.clear();
        this.$scope$obs_domain_list$memo.clear();
        this.$scope$obs_domain_list_$0$memo.clear();
        this.$scope$obs_domain_list_$1$memo.clear();
        this.$scope$obs_domain_list_$1_$0$memo.clear();
        this.$scope$obs_mbox_list$memo.clear();
        this.$scope$obs_mbox_list_$0$memo.clear();
        this.$scope$obs_mbox_list_$1$memo.clear();
        this.$scope$obs_mbox_list_$1_$0$memo.clear();
        this.$scope$obs_addr_list$memo.clear();
        this.$scope$obs_addr_list_$0$memo.clear();
        this.$scope$obs_addr_list_$1$memo.clear();
        this.$scope$obs_addr_list_$1_$0$memo.clear();
        this.$scope$obs_group_list$memo.clear();
        this.$scope$obs_group_list_$0$memo.clear();
        this.$scope$obs_local_part$memo.clear();
        this.$scope$obs_local_part_$0$memo.clear();
        this.$scope$obs_domain$memo.clear();
        this.$scope$obs_domain_$0$memo.clear();
        this.$scope$obs_dtext$memo.clear();
        this.$scope$obs_fields$memo.clear();
        this.$scope$obs_fields_$0$memo.clear();
        this.$scope$obs_orig_date$memo.clear();
        this.$scope$obs_from$memo.clear();
        this.$scope$obs_sender$memo.clear();
        this.$scope$obs_reply_to$memo.clear();
        this.$scope$obs_to$memo.clear();
        this.$scope$obs_cc$memo.clear();
        this.$scope$obs_bcc$memo.clear();
        this.$scope$obs_bcc_$0$memo.clear();
        this.$scope$obs_bcc_$0_$0$memo.clear();
        this.$scope$obs_bcc_$0_$0_$0$memo.clear();
        this.$scope$obs_message_id$memo.clear();
        this.$scope$obs_in_reply_to$memo.clear();
        this.$scope$obs_in_reply_to_$0$memo.clear();
        this.$scope$obs_references$memo.clear();
        this.$scope$obs_references_$0$memo.clear();
        this.$scope$obs_id_left$memo.clear();
        this.$scope$obs_id_right$memo.clear();
        this.$scope$obs_subject$memo.clear();
        this.$scope$obs_comments$memo.clear();
        this.$scope$obs_keywords$memo.clear();
        this.$scope$obs_resent_from$memo.clear();
        this.$scope$obs_resent_send$memo.clear();
        this.$scope$obs_resent_date$memo.clear();
        this.$scope$obs_resent_to$memo.clear();
        this.$scope$obs_resent_cc$memo.clear();
        this.$scope$obs_resent_bcc$memo.clear();
        this.$scope$obs_resent_bcc_$0$memo.clear();
        this.$scope$obs_resent_bcc_$0_$0$memo.clear();
        this.$scope$obs_resent_bcc_$0_$0_$0$memo.clear();
        this.$scope$obs_resent_mid$memo.clear();
        this.$scope$obs_resent_rply$memo.clear();
        this.$scope$obs_return$memo.clear();
        this.$scope$obs_received$memo.clear();
        this.$scope$obs_optional$memo.clear();
    }
    protected $scope$start$memo: Map<number, [Nullable<start>, PosInfo]> = new Map();
    protected $scope$CR$memo: Map<number, [Nullable<CR>, PosInfo]> = new Map();
    protected $scope$CRLF$memo: Map<number, [Nullable<CRLF>, PosInfo]> = new Map();
    protected $scope$DIGIT$memo: Map<number, [Nullable<DIGIT>, PosInfo]> = new Map();
    protected $scope$TWO_DIGIT$memo: Map<number, [Nullable<TWO_DIGIT>, PosInfo]> = new Map();
    protected $scope$FOUR_DIGIT$memo: Map<number, [Nullable<FOUR_DIGIT>, PosInfo]> = new Map();
    protected $scope$DQUOTE$memo: Map<number, [Nullable<DQUOTE>, PosInfo]> = new Map();
    protected $scope$HTAB$memo: Map<number, [Nullable<HTAB>, PosInfo]> = new Map();
    protected $scope$LF$memo: Map<number, [Nullable<LF>, PosInfo]> = new Map();
    protected $scope$SP$memo: Map<number, [Nullable<SP>, PosInfo]> = new Map();
    protected $scope$VCHAR$memo: Map<number, [Nullable<VCHAR>, PosInfo]> = new Map();
    protected $scope$WSP$memo: Map<number, [Nullable<WSP>, PosInfo]> = new Map();
    protected $scope$quoted_pair$memo: Map<number, [Nullable<quoted_pair>, PosInfo]> = new Map();
    protected $scope$quoted_pair_$0$memo: Map<number, [Nullable<quoted_pair_$0>, PosInfo]> = new Map();
    protected $scope$quoted_pair_$0_$0$memo: Map<number, [Nullable<quoted_pair_$0_$0>, PosInfo]> = new Map();
    protected $scope$FWS$memo: Map<number, [Nullable<FWS>, PosInfo]> = new Map();
    protected $scope$FWS_$0$memo: Map<number, [Nullable<FWS_$0>, PosInfo]> = new Map();
    protected $scope$FWS_$0_$0$memo: Map<number, [Nullable<FWS_$0_$0>, PosInfo]> = new Map();
    protected $scope$ctext$memo: Map<number, [Nullable<ctext>, PosInfo]> = new Map();
    protected $scope$ccontent$memo: Map<number, [Nullable<ccontent>, PosInfo]> = new Map();
    protected $scope$comment$memo: Map<number, [Nullable<comment>, PosInfo]> = new Map();
    protected $scope$comment_$0$memo: Map<number, [Nullable<comment_$0>, PosInfo]> = new Map();
    protected $scope$CFWS$memo: Map<number, [Nullable<CFWS>, PosInfo]> = new Map();
    protected $scope$CFWS_$0$memo: Map<number, [Nullable<CFWS_$0>, PosInfo]> = new Map();
    protected $scope$CFWS_$0_$0$memo: Map<number, [Nullable<CFWS_$0_$0>, PosInfo]> = new Map();
    protected $scope$atext$memo: Map<number, [Nullable<atext>, PosInfo]> = new Map();
    protected $scope$atom$memo: Map<number, [Nullable<atom>, PosInfo]> = new Map();
    protected $scope$dot_atom_text$memo: Map<number, [Nullable<dot_atom_text>, PosInfo]> = new Map();
    protected $scope$dot_atom_text_$0$memo: Map<number, [Nullable<dot_atom_text_$0>, PosInfo]> = new Map();
    protected $scope$dot_atom$memo: Map<number, [Nullable<dot_atom>, PosInfo]> = new Map();
    protected $scope$specials$memo: Map<number, [Nullable<specials>, PosInfo]> = new Map();
    protected $scope$qtext$memo: Map<number, [Nullable<qtext>, PosInfo]> = new Map();
    protected $scope$qcontent$memo: Map<number, [Nullable<qcontent>, PosInfo]> = new Map();
    protected $scope$quoted_string$memo: Map<number, [Nullable<quoted_string>, PosInfo]> = new Map();
    protected $scope$quoted_string_$0$memo: Map<number, [Nullable<quoted_string_$0>, PosInfo]> = new Map();
    protected $scope$word$memo: Map<number, [Nullable<word>, PosInfo]> = new Map();
    protected $scope$phrase$memo: Map<number, [Nullable<phrase>, PosInfo]> = new Map();
    protected $scope$unstructured$memo: Map<number, [Nullable<unstructured>, PosInfo]> = new Map();
    protected $scope$unstructured_$0$memo: Map<number, [Nullable<unstructured_$0>, PosInfo]> = new Map();
    protected $scope$unstructured_$0_$0$memo: Map<number, [Nullable<unstructured_$0_$0>, PosInfo]> = new Map();
    protected $scope$date_time$memo: Map<number, [Nullable<date_time>, PosInfo]> = new Map();
    protected $scope$date_time_$0$memo: Map<number, [Nullable<date_time_$0>, PosInfo]> = new Map();
    protected $scope$day_of_week$memo: Map<number, [Nullable<day_of_week>, PosInfo]> = new Map();
    protected $scope$day_of_week_$0$memo: Map<number, [Nullable<day_of_week_$0>, PosInfo]> = new Map();
    protected $scope$day_name$memo: Map<number, [Nullable<day_name>, PosInfo]> = new Map();
    protected $scope$date$memo: Map<number, [Nullable<date>, PosInfo]> = new Map();
    protected $scope$day$memo: Map<number, [Nullable<day>, PosInfo]> = new Map();
    protected $scope$day_$0$memo: Map<number, [Nullable<day_$0>, PosInfo]> = new Map();
    protected $scope$month$memo: Map<number, [Nullable<month>, PosInfo]> = new Map();
    protected $scope$year$memo: Map<number, [Nullable<year>, PosInfo]> = new Map();
    protected $scope$year_$0$memo: Map<number, [Nullable<year_$0>, PosInfo]> = new Map();
    protected $scope$time$memo: Map<number, [Nullable<time>, PosInfo]> = new Map();
    protected $scope$time_of_day$memo: Map<number, [Nullable<time_of_day>, PosInfo]> = new Map();
    protected $scope$time_of_day_$0$memo: Map<number, [Nullable<time_of_day_$0>, PosInfo]> = new Map();
    protected $scope$hour$memo: Map<number, [Nullable<hour>, PosInfo]> = new Map();
    protected $scope$minute$memo: Map<number, [Nullable<minute>, PosInfo]> = new Map();
    protected $scope$second$memo: Map<number, [Nullable<second>, PosInfo]> = new Map();
    protected $scope$zone$memo: Map<number, [Nullable<zone>, PosInfo]> = new Map();
    protected $scope$zone_$0$memo: Map<number, [Nullable<zone_$0>, PosInfo]> = new Map();
    protected $scope$zone_$0_$0$memo: Map<number, [Nullable<zone_$0_$0>, PosInfo]> = new Map();
    protected $scope$address$memo: Map<number, [Nullable<address>, PosInfo]> = new Map();
    protected $scope$mailbox$memo: Map<number, [Nullable<mailbox>, PosInfo]> = new Map();
    protected $scope$name_addr$memo: Map<number, [Nullable<name_addr>, PosInfo]> = new Map();
    protected $scope$angle_addr$memo: Map<number, [Nullable<angle_addr>, PosInfo]> = new Map();
    protected $scope$group$memo: Map<number, [Nullable<group>, PosInfo]> = new Map();
    protected $scope$display_name$memo: Map<number, [Nullable<display_name>, PosInfo]> = new Map();
    protected $scope$mailbox_list$memo: Map<number, [Nullable<mailbox_list>, PosInfo]> = new Map();
    protected $scope$mailbox_list_$0$memo: Map<number, [Nullable<mailbox_list_$0>, PosInfo]> = new Map();
    protected $scope$mailbox_list_$0_$0$memo: Map<number, [Nullable<mailbox_list_$0_$0>, PosInfo]> = new Map();
    protected $scope$address_list$memo: Map<number, [Nullable<address_list>, PosInfo]> = new Map();
    protected $scope$address_list_$0$memo: Map<number, [Nullable<address_list_$0>, PosInfo]> = new Map();
    protected $scope$address_list_$0_$0$memo: Map<number, [Nullable<address_list_$0_$0>, PosInfo]> = new Map();
    protected $scope$group_list$memo: Map<number, [Nullable<group_list>, PosInfo]> = new Map();
    protected $scope$addr_spec$memo: Map<number, [Nullable<addr_spec>, PosInfo]> = new Map();
    protected $scope$local_part$memo: Map<number, [Nullable<local_part>, PosInfo]> = new Map();
    protected $scope$domain$memo: Map<number, [Nullable<domain>, PosInfo]> = new Map();
    protected $scope$domain_literal$memo: Map<number, [Nullable<domain_literal>, PosInfo]> = new Map();
    protected $scope$domain_literal_$0$memo: Map<number, [Nullable<domain_literal_$0>, PosInfo]> = new Map();
    protected $scope$dtext$memo: Map<number, [Nullable<dtext>, PosInfo]> = new Map();
    protected $scope$message$memo: Map<number, [Nullable<message>, PosInfo]> = new Map();
    protected $scope$message_$0$memo: Map<number, [Nullable<message_$0>, PosInfo]> = new Map();
    protected $scope$message_$1$memo: Map<number, [Nullable<message_$1>, PosInfo]> = new Map();
    protected $scope$body$memo: Map<number, [Nullable<body>, PosInfo]> = new Map();
    protected $scope$body_$0$memo: Map<number, [Nullable<body_$0>, PosInfo]> = new Map();
    protected $scope$body_$0_$0$memo: Map<number, [Nullable<body_$0_$0>, PosInfo]> = new Map();
    protected $scope$text$memo: Map<number, [Nullable<text>, PosInfo]> = new Map();
    protected $scope$_998text$memo: Map<number, [Nullable<_998text>, PosInfo]> = new Map();
    protected $scope$fields$memo: Map<number, [Nullable<fields>, PosInfo]> = new Map();
    protected $scope$fields_$0$memo: Map<number, [Nullable<fields_$0>, PosInfo]> = new Map();
    protected $scope$fields_$0_$0$memo: Map<number, [Nullable<fields_$0_$0>, PosInfo]> = new Map();
    protected $scope$fields_$1$memo: Map<number, [Nullable<fields_$1>, PosInfo]> = new Map();
    protected $scope$orig_date$memo: Map<number, [Nullable<orig_date>, PosInfo]> = new Map();
    protected $scope$from$memo: Map<number, [Nullable<from>, PosInfo]> = new Map();
    protected $scope$sender$memo: Map<number, [Nullable<sender>, PosInfo]> = new Map();
    protected $scope$reply_to$memo: Map<number, [Nullable<reply_to>, PosInfo]> = new Map();
    protected $scope$to$memo: Map<number, [Nullable<to>, PosInfo]> = new Map();
    protected $scope$cc$memo: Map<number, [Nullable<cc>, PosInfo]> = new Map();
    protected $scope$bcc$memo: Map<number, [Nullable<bcc>, PosInfo]> = new Map();
    protected $scope$bcc_$0$memo: Map<number, [Nullable<bcc_$0>, PosInfo]> = new Map();
    protected $scope$message_id$memo: Map<number, [Nullable<message_id>, PosInfo]> = new Map();
    protected $scope$in_reply_to$memo: Map<number, [Nullable<in_reply_to>, PosInfo]> = new Map();
    protected $scope$references$memo: Map<number, [Nullable<references>, PosInfo]> = new Map();
    protected $scope$msg_id$memo: Map<number, [Nullable<msg_id>, PosInfo]> = new Map();
    protected $scope$id_left$memo: Map<number, [Nullable<id_left>, PosInfo]> = new Map();
    protected $scope$id_right$memo: Map<number, [Nullable<id_right>, PosInfo]> = new Map();
    protected $scope$no_fold_literal$memo: Map<number, [Nullable<no_fold_literal>, PosInfo]> = new Map();
    protected $scope$subject$memo: Map<number, [Nullable<subject>, PosInfo]> = new Map();
    protected $scope$comments$memo: Map<number, [Nullable<comments>, PosInfo]> = new Map();
    protected $scope$keywords$memo: Map<number, [Nullable<keywords>, PosInfo]> = new Map();
    protected $scope$keywords_$0$memo: Map<number, [Nullable<keywords_$0>, PosInfo]> = new Map();
    protected $scope$resent_date$memo: Map<number, [Nullable<resent_date>, PosInfo]> = new Map();
    protected $scope$resent_from$memo: Map<number, [Nullable<resent_from>, PosInfo]> = new Map();
    protected $scope$resent_sender$memo: Map<number, [Nullable<resent_sender>, PosInfo]> = new Map();
    protected $scope$resent_to$memo: Map<number, [Nullable<resent_to>, PosInfo]> = new Map();
    protected $scope$resent_cc$memo: Map<number, [Nullable<resent_cc>, PosInfo]> = new Map();
    protected $scope$resent_bcc$memo: Map<number, [Nullable<resent_bcc>, PosInfo]> = new Map();
    protected $scope$resent_bcc_$0$memo: Map<number, [Nullable<resent_bcc_$0>, PosInfo]> = new Map();
    protected $scope$resent_msg_id$memo: Map<number, [Nullable<resent_msg_id>, PosInfo]> = new Map();
    protected $scope$trace$memo: Map<number, [Nullable<trace>, PosInfo]> = new Map();
    protected $scope$return_path$memo: Map<number, [Nullable<return_path>, PosInfo]> = new Map();
    protected $scope$path$memo: Map<number, [Nullable<path>, PosInfo]> = new Map();
    protected $scope$path_$0$memo: Map<number, [Nullable<path_$0>, PosInfo]> = new Map();
    protected $scope$received$memo: Map<number, [Nullable<received>, PosInfo]> = new Map();
    protected $scope$received_token$memo: Map<number, [Nullable<received_token>, PosInfo]> = new Map();
    protected $scope$optional_field$memo: Map<number, [Nullable<optional_field>, PosInfo]> = new Map();
    protected $scope$field_name$memo: Map<number, [Nullable<field_name>, PosInfo]> = new Map();
    protected $scope$ftext$memo: Map<number, [Nullable<ftext>, PosInfo]> = new Map();
    protected $scope$obs_NO_WS_CTL$memo: Map<number, [Nullable<obs_NO_WS_CTL>, PosInfo]> = new Map();
    protected $scope$obs_ctext$memo: Map<number, [Nullable<obs_ctext>, PosInfo]> = new Map();
    protected $scope$obs_qtext$memo: Map<number, [Nullable<obs_qtext>, PosInfo]> = new Map();
    protected $scope$obs_utext$memo: Map<number, [Nullable<obs_utext>, PosInfo]> = new Map();
    protected $scope$obs_qp$memo: Map<number, [Nullable<obs_qp>, PosInfo]> = new Map();
    protected $scope$obs_qp_$0$memo: Map<number, [Nullable<obs_qp_$0>, PosInfo]> = new Map();
    protected $scope$obs_body$memo: Map<number, [Nullable<obs_body>, PosInfo]> = new Map();
    protected $scope$obs_body_$0$memo: Map<number, [Nullable<obs_body_$0>, PosInfo]> = new Map();
    protected $scope$obs_body_$0_$0$memo: Map<number, [Nullable<obs_body_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_body_$0_$0_$0$memo: Map<number, [Nullable<obs_body_$0_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_body_$0_$0_$0_$0$memo: Map<number, [Nullable<obs_body_$0_$0_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_unstruct$memo: Map<number, [Nullable<obs_unstruct>, PosInfo]> = new Map();
    protected $scope$obs_unstruct_$0$memo: Map<number, [Nullable<obs_unstruct_$0>, PosInfo]> = new Map();
    protected $scope$obs_unstruct_$0_$0$memo: Map<number, [Nullable<obs_unstruct_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_unstruct_$0_$0_$0$memo: Map<number, [Nullable<obs_unstruct_$0_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_phrase$memo: Map<number, [Nullable<obs_phrase>, PosInfo]> = new Map();
    protected $scope$obs_phrase_$0$memo: Map<number, [Nullable<obs_phrase_$0>, PosInfo]> = new Map();
    protected $scope$obs_phrase_list$memo: Map<number, [Nullable<obs_phrase_list>, PosInfo]> = new Map();
    protected $scope$obs_phrase_list_$0$memo: Map<number, [Nullable<obs_phrase_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_phrase_list_$1$memo: Map<number, [Nullable<obs_phrase_list_$1>, PosInfo]> = new Map();
    protected $scope$obs_phrase_list_$1_$0$memo: Map<number, [Nullable<obs_phrase_list_$1_$0>, PosInfo]> = new Map();
    protected $scope$obs_FWS$memo: Map<number, [Nullable<obs_FWS>, PosInfo]> = new Map();
    protected $scope$obs_FWS_$0$memo: Map<number, [Nullable<obs_FWS_$0>, PosInfo]> = new Map();
    protected $scope$obs_day_of_week$memo: Map<number, [Nullable<obs_day_of_week>, PosInfo]> = new Map();
    protected $scope$obs_day$memo: Map<number, [Nullable<obs_day>, PosInfo]> = new Map();
    protected $scope$obs_year$memo: Map<number, [Nullable<obs_year>, PosInfo]> = new Map();
    protected $scope$obs_hour$memo: Map<number, [Nullable<obs_hour>, PosInfo]> = new Map();
    protected $scope$obs_minute$memo: Map<number, [Nullable<obs_minute>, PosInfo]> = new Map();
    protected $scope$obs_second$memo: Map<number, [Nullable<obs_second>, PosInfo]> = new Map();
    protected $scope$obs_zone$memo: Map<number, [Nullable<obs_zone>, PosInfo]> = new Map();
    protected $scope$obs_angle_addr$memo: Map<number, [Nullable<obs_angle_addr>, PosInfo]> = new Map();
    protected $scope$obs_route$memo: Map<number, [Nullable<obs_route>, PosInfo]> = new Map();
    protected $scope$obs_domain_list$memo: Map<number, [Nullable<obs_domain_list>, PosInfo]> = new Map();
    protected $scope$obs_domain_list_$0$memo: Map<number, [Nullable<obs_domain_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_domain_list_$1$memo: Map<number, [Nullable<obs_domain_list_$1>, PosInfo]> = new Map();
    protected $scope$obs_domain_list_$1_$0$memo: Map<number, [Nullable<obs_domain_list_$1_$0>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list$memo: Map<number, [Nullable<obs_mbox_list>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list_$0$memo: Map<number, [Nullable<obs_mbox_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list_$1$memo: Map<number, [Nullable<obs_mbox_list_$1>, PosInfo]> = new Map();
    protected $scope$obs_mbox_list_$1_$0$memo: Map<number, [Nullable<obs_mbox_list_$1_$0>, PosInfo]> = new Map();
    protected $scope$obs_addr_list$memo: Map<number, [Nullable<obs_addr_list>, PosInfo]> = new Map();
    protected $scope$obs_addr_list_$0$memo: Map<number, [Nullable<obs_addr_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_addr_list_$1$memo: Map<number, [Nullable<obs_addr_list_$1>, PosInfo]> = new Map();
    protected $scope$obs_addr_list_$1_$0$memo: Map<number, [Nullable<obs_addr_list_$1_$0>, PosInfo]> = new Map();
    protected $scope$obs_group_list$memo: Map<number, [Nullable<obs_group_list>, PosInfo]> = new Map();
    protected $scope$obs_group_list_$0$memo: Map<number, [Nullable<obs_group_list_$0>, PosInfo]> = new Map();
    protected $scope$obs_local_part$memo: Map<number, [Nullable<obs_local_part>, PosInfo]> = new Map();
    protected $scope$obs_local_part_$0$memo: Map<number, [Nullable<obs_local_part_$0>, PosInfo]> = new Map();
    protected $scope$obs_domain$memo: Map<number, [Nullable<obs_domain>, PosInfo]> = new Map();
    protected $scope$obs_domain_$0$memo: Map<number, [Nullable<obs_domain_$0>, PosInfo]> = new Map();
    protected $scope$obs_dtext$memo: Map<number, [Nullable<obs_dtext>, PosInfo]> = new Map();
    protected $scope$obs_fields$memo: Map<number, [Nullable<obs_fields>, PosInfo]> = new Map();
    protected $scope$obs_fields_$0$memo: Map<number, [Nullable<obs_fields_$0>, PosInfo]> = new Map();
    protected $scope$obs_orig_date$memo: Map<number, [Nullable<obs_orig_date>, PosInfo]> = new Map();
    protected $scope$obs_from$memo: Map<number, [Nullable<obs_from>, PosInfo]> = new Map();
    protected $scope$obs_sender$memo: Map<number, [Nullable<obs_sender>, PosInfo]> = new Map();
    protected $scope$obs_reply_to$memo: Map<number, [Nullable<obs_reply_to>, PosInfo]> = new Map();
    protected $scope$obs_to$memo: Map<number, [Nullable<obs_to>, PosInfo]> = new Map();
    protected $scope$obs_cc$memo: Map<number, [Nullable<obs_cc>, PosInfo]> = new Map();
    protected $scope$obs_bcc$memo: Map<number, [Nullable<obs_bcc>, PosInfo]> = new Map();
    protected $scope$obs_bcc_$0$memo: Map<number, [Nullable<obs_bcc_$0>, PosInfo]> = new Map();
    protected $scope$obs_bcc_$0_$0$memo: Map<number, [Nullable<obs_bcc_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_bcc_$0_$0_$0$memo: Map<number, [Nullable<obs_bcc_$0_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_message_id$memo: Map<number, [Nullable<obs_message_id>, PosInfo]> = new Map();
    protected $scope$obs_in_reply_to$memo: Map<number, [Nullable<obs_in_reply_to>, PosInfo]> = new Map();
    protected $scope$obs_in_reply_to_$0$memo: Map<number, [Nullable<obs_in_reply_to_$0>, PosInfo]> = new Map();
    protected $scope$obs_references$memo: Map<number, [Nullable<obs_references>, PosInfo]> = new Map();
    protected $scope$obs_references_$0$memo: Map<number, [Nullable<obs_references_$0>, PosInfo]> = new Map();
    protected $scope$obs_id_left$memo: Map<number, [Nullable<obs_id_left>, PosInfo]> = new Map();
    protected $scope$obs_id_right$memo: Map<number, [Nullable<obs_id_right>, PosInfo]> = new Map();
    protected $scope$obs_subject$memo: Map<number, [Nullable<obs_subject>, PosInfo]> = new Map();
    protected $scope$obs_comments$memo: Map<number, [Nullable<obs_comments>, PosInfo]> = new Map();
    protected $scope$obs_keywords$memo: Map<number, [Nullable<obs_keywords>, PosInfo]> = new Map();
    protected $scope$obs_resent_from$memo: Map<number, [Nullable<obs_resent_from>, PosInfo]> = new Map();
    protected $scope$obs_resent_send$memo: Map<number, [Nullable<obs_resent_send>, PosInfo]> = new Map();
    protected $scope$obs_resent_date$memo: Map<number, [Nullable<obs_resent_date>, PosInfo]> = new Map();
    protected $scope$obs_resent_to$memo: Map<number, [Nullable<obs_resent_to>, PosInfo]> = new Map();
    protected $scope$obs_resent_cc$memo: Map<number, [Nullable<obs_resent_cc>, PosInfo]> = new Map();
    protected $scope$obs_resent_bcc$memo: Map<number, [Nullable<obs_resent_bcc>, PosInfo]> = new Map();
    protected $scope$obs_resent_bcc_$0$memo: Map<number, [Nullable<obs_resent_bcc_$0>, PosInfo]> = new Map();
    protected $scope$obs_resent_bcc_$0_$0$memo: Map<number, [Nullable<obs_resent_bcc_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_resent_bcc_$0_$0_$0$memo: Map<number, [Nullable<obs_resent_bcc_$0_$0_$0>, PosInfo]> = new Map();
    protected $scope$obs_resent_mid$memo: Map<number, [Nullable<obs_resent_mid>, PosInfo]> = new Map();
    protected $scope$obs_resent_rply$memo: Map<number, [Nullable<obs_resent_rply>, PosInfo]> = new Map();
    protected $scope$obs_return$memo: Map<number, [Nullable<obs_return>, PosInfo]> = new Map();
    protected $scope$obs_received$memo: Map<number, [Nullable<obs_received>, PosInfo]> = new Map();
    protected $scope$obs_optional$memo: Map<number, [Nullable<obs_optional>, PosInfo]> = new Map();
    public matchstart($$dpth: number, $$cr?: ErrorTracker): Nullable<start> {
        return this.memoise(
            () => {
                return this.matchmessage($$dpth + 1, $$cr);
            },
            this.$scope$start$memo,
        );
    }
    public matchCR($$dpth: number, $$cr?: ErrorTracker): Nullable<CR> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x0D)`, $$dpth + 1, $$cr);
            },
            this.$scope$CR$memo,
        );
    }
    public matchCRLF($$dpth: number, $$cr?: ErrorTracker): Nullable<CRLF> {
        return this.memoise(
            () => {
                return this.run<CRLF>($$dpth,
                    () => {
                        let $$res: Nullable<CRLF> = null;
                        if (true
                            && this.matchCR($$dpth + 1, $$cr) !== null
                            && this.matchLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.CRLF, };
                        }
                        return $$res;
                    });
            },
            this.$scope$CRLF$memo,
        );
    }
    public matchDIGIT($$dpth: number, $$cr?: ErrorTracker): Nullable<DIGIT> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x30-39)`, $$dpth + 1, $$cr);
            },
            this.$scope$DIGIT$memo,
        );
    }
    public matchTWO_DIGIT($$dpth: number, $$cr?: ErrorTracker): Nullable<TWO_DIGIT> {
        return this.memoise(
            () => {
                return this.run<TWO_DIGIT>($$dpth,
                    () => {
                        let $$res: Nullable<TWO_DIGIT> = null;
                        if (true
                            && this.matchDIGIT($$dpth + 1, $$cr) !== null
                            && this.matchDIGIT($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.TWO_DIGIT, };
                        }
                        return $$res;
                    });
            },
            this.$scope$TWO_DIGIT$memo,
        );
    }
    public matchFOUR_DIGIT($$dpth: number, $$cr?: ErrorTracker): Nullable<FOUR_DIGIT> {
        return this.memoise(
            () => {
                return this.run<FOUR_DIGIT>($$dpth,
                    () => {
                        let $$res: Nullable<FOUR_DIGIT> = null;
                        if (true
                            && this.matchTWO_DIGIT($$dpth + 1, $$cr) !== null
                            && this.matchTWO_DIGIT($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.FOUR_DIGIT, };
                        }
                        return $$res;
                    });
            },
            this.$scope$FOUR_DIGIT$memo,
        );
    }
    public matchDQUOTE($$dpth: number, $$cr?: ErrorTracker): Nullable<DQUOTE> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x22)`, $$dpth + 1, $$cr);
            },
            this.$scope$DQUOTE$memo,
        );
    }
    public matchHTAB($$dpth: number, $$cr?: ErrorTracker): Nullable<HTAB> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x09)`, $$dpth + 1, $$cr);
            },
            this.$scope$HTAB$memo,
        );
    }
    public matchLF($$dpth: number, $$cr?: ErrorTracker): Nullable<LF> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x0A)`, $$dpth + 1, $$cr);
            },
            this.$scope$LF$memo,
        );
    }
    public matchSP($$dpth: number, $$cr?: ErrorTracker): Nullable<SP> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:\x20)`, $$dpth + 1, $$cr);
            },
            this.$scope$SP$memo,
        );
    }
    public matchVCHAR($$dpth: number, $$cr?: ErrorTracker): Nullable<VCHAR> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:[\x21-\x7E])`, $$dpth + 1, $$cr);
            },
            this.$scope$VCHAR$memo,
        );
    }
    public matchWSP($$dpth: number, $$cr?: ErrorTracker): Nullable<WSP> {
        return this.memoise(
            () => {
                return this.choice<WSP>([
                    () => this.matchWSP_1($$dpth + 1, $$cr),
                    () => this.matchWSP_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$WSP$memo,
        );
    }
    public matchWSP_1($$dpth: number, $$cr?: ErrorTracker): Nullable<WSP_1> {
        return this.matchSP($$dpth + 1, $$cr);
    }
    public matchWSP_2($$dpth: number, $$cr?: ErrorTracker): Nullable<WSP_2> {
        return this.matchHTAB($$dpth + 1, $$cr);
    }
    public matchquoted_pair($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair> {
        return this.memoise(
            () => {
                return this.choice<quoted_pair>([
                    () => this.matchquoted_pair_1($$dpth + 1, $$cr),
                    () => this.matchquoted_pair_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$quoted_pair$memo,
        );
    }
    public matchquoted_pair_1($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_1> {
        return this.matchquoted_pair_$0($$dpth + 1, $$cr);
    }
    public matchquoted_pair_2($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_2> {
        return this.matchobs_qp($$dpth + 1, $$cr);
    }
    public matchquoted_pair_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0> {
        return this.memoise(
            () => {
                return this.run<quoted_pair_$0>($$dpth,
                    () => {
                        let $$res: Nullable<quoted_pair_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr) !== null
                            && this.matchquoted_pair_$0_$0($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.quoted_pair_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$quoted_pair_$0$memo,
        );
    }
    public matchquoted_pair_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0_$0> {
        return this.memoise(
            () => {
                return this.choice<quoted_pair_$0_$0>([
                    () => this.matchquoted_pair_$0_$0_1($$dpth + 1, $$cr),
                    () => this.matchquoted_pair_$0_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$quoted_pair_$0_$0$memo,
        );
    }
    public matchquoted_pair_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0_$0_1> {
        return this.matchVCHAR($$dpth + 1, $$cr);
    }
    public matchquoted_pair_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_pair_$0_$0_2> {
        return this.matchWSP($$dpth + 1, $$cr);
    }
    public matchFWS($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS> {
        return this.memoise(
            () => {
                return this.choice<FWS>([
                    () => this.matchFWS_1($$dpth + 1, $$cr),
                    () => this.matchFWS_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$FWS$memo,
        );
    }
    public matchFWS_1($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_1> {
        return this.matchFWS_$0($$dpth + 1, $$cr);
    }
    public matchFWS_2($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_2> {
        return this.matchobs_FWS($$dpth + 1, $$cr);
    }
    public matchFWS_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_$0> {
        return this.memoise(
            () => {
                return this.run<FWS_$0>($$dpth,
                    () => {
                        let $$res: Nullable<FWS_$0> = null;
                        if (true
                            && ((this.matchFWS_$0_$0($$dpth + 1, $$cr)) || true)
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), false) !== null
                        ) {
                            $$res = {kind: ASTKinds.FWS_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$FWS_$0$memo,
        );
    }
    public matchFWS_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<FWS_$0_$0> {
        return this.memoise(
            () => {
                return this.run<FWS_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<FWS_$0_$0> = null;
                        if (true
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.FWS_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$FWS_$0_$0$memo,
        );
    }
    public matchctext($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext> {
        return this.memoise(
            () => {
                return this.choice<ctext>([
                    () => this.matchctext_1($$dpth + 1, $$cr),
                    () => this.matchctext_2($$dpth + 1, $$cr),
                    () => this.matchctext_3($$dpth + 1, $$cr),
                    () => this.matchctext_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$ctext$memo,
        );
    }
    public matchctext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_1> {
        return this.regexAccept(String.raw`(?:[\x21-\x27])`, $$dpth + 1, $$cr);
    }
    public matchctext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_2> {
        return this.regexAccept(String.raw`(?:[\x2a-\x5b])`, $$dpth + 1, $$cr);
    }
    public matchctext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_3> {
        return this.regexAccept(String.raw`(?:[\x5d-\x7e])`, $$dpth + 1, $$cr);
    }
    public matchctext_4($$dpth: number, $$cr?: ErrorTracker): Nullable<ctext_4> {
        return this.matchobs_ctext($$dpth + 1, $$cr);
    }
    public matchccontent($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent> {
        return this.memoise(
            () => {
                return this.choice<ccontent>([
                    () => this.matchccontent_1($$dpth + 1, $$cr),
                    () => this.matchccontent_2($$dpth + 1, $$cr),
                    () => this.matchccontent_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$ccontent$memo,
        );
    }
    public matchccontent_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent_1> {
        return this.matchctext($$dpth + 1, $$cr);
    }
    public matchccontent_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent_2> {
        return this.matchquoted_pair($$dpth + 1, $$cr);
    }
    public matchccontent_3($$dpth: number, $$cr?: ErrorTracker): Nullable<ccontent_3> {
        return this.matchcomment($$dpth + 1, $$cr);
    }
    public matchcomment($$dpth: number, $$cr?: ErrorTracker): Nullable<comment> {
        return this.memoise(
            () => {
                return this.run<comment>($$dpth,
                    () => {
                        let $$res: Nullable<comment> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr) !== null
                            && this.loop<comment_$0>(() => this.matchcomment_$0($$dpth + 1, $$cr), true) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.comment, };
                        }
                        return $$res;
                    });
            },
            this.$scope$comment$memo,
        );
    }
    public matchcomment_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<comment_$0> {
        return this.memoise(
            () => {
                return this.run<comment_$0>($$dpth,
                    () => {
                        let $$res: Nullable<comment_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchccontent($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.comment_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$comment_$0$memo,
        );
    }
    public matchCFWS($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS> {
        return this.memoise(
            () => {
                return this.choice<CFWS>([
                    () => this.matchCFWS_1($$dpth + 1, $$cr),
                    () => this.matchCFWS_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$CFWS$memo,
        );
    }
    public matchCFWS_1($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_1> {
        return this.matchCFWS_$0($$dpth + 1, $$cr);
    }
    public matchCFWS_2($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_2> {
        return this.matchFWS($$dpth + 1, $$cr);
    }
    public matchCFWS_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_$0> {
        return this.memoise(
            () => {
                return this.run<CFWS_$0>($$dpth,
                    () => {
                        let $$res: Nullable<CFWS_$0> = null;
                        if (true
                            && this.loop<CFWS_$0_$0>(() => this.matchCFWS_$0_$0($$dpth + 1, $$cr), false) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.CFWS_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$CFWS_$0$memo,
        );
    }
    public matchCFWS_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<CFWS_$0_$0> {
        return this.memoise(
            () => {
                return this.run<CFWS_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<CFWS_$0_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchcomment($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.CFWS_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$CFWS_$0_$0$memo,
        );
    }
    public matchatext($$dpth: number, $$cr?: ErrorTracker): Nullable<atext> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:[A-Za-z0-9!#$%&\x27\*\+\-\/=?^_\`{|}~])`, $$dpth + 1, $$cr);
            },
            this.$scope$atext$memo,
        );
    }
    public matchatom($$dpth: number, $$cr?: ErrorTracker): Nullable<atom> {
        return this.memoise(
            () => {
                return this.run<atom>($$dpth,
                    () => {
                        let $$res: Nullable<atom> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.loop<atext>(() => this.matchatext($$dpth + 1, $$cr), false) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.atom, };
                        }
                        return $$res;
                    });
            },
            this.$scope$atom$memo,
        );
    }
    public matchdot_atom_text($$dpth: number, $$cr?: ErrorTracker): Nullable<dot_atom_text> {
        return this.memoise(
            () => {
                return this.run<dot_atom_text>($$dpth,
                    () => {
                        let $scope$_head_atext: Nullable<atext[]>;
                        let $scope$_tail_atext: Nullable<dot_atom_text_$0[]>;
                        let $$res: Nullable<dot_atom_text> = null;
                        if (true
                            && ($scope$_head_atext = this.loop<atext>(() => this.matchatext($$dpth + 1, $$cr), false)) !== null
                            && ($scope$_tail_atext = this.loop<dot_atom_text_$0>(() => this.matchdot_atom_text_$0($$dpth + 1, $$cr), true)) !== null
                        ) {
                            $$res = new dot_atom_text($scope$_head_atext, $scope$_tail_atext);
                        }
                        return $$res;
                    });
            },
            this.$scope$dot_atom_text$memo,
        );
    }
    public matchdot_atom_text_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<dot_atom_text_$0> {
        return this.memoise(
            () => {
                return this.run<dot_atom_text_$0>($$dpth,
                    () => {
                        let $scope$_atext: Nullable<atext[]>;
                        let $$res: Nullable<dot_atom_text_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr) !== null
                            && ($scope$_atext = this.loop<atext>(() => this.matchatext($$dpth + 1, $$cr), false)) !== null
                        ) {
                            $$res = {kind: ASTKinds.dot_atom_text_$0, _atext: $scope$_atext};
                        }
                        return $$res;
                    });
            },
            this.$scope$dot_atom_text_$0$memo,
        );
    }
    public matchdot_atom($$dpth: number, $$cr?: ErrorTracker): Nullable<dot_atom> {
        return this.memoise(
            () => {
                return this.run<dot_atom>($$dpth,
                    () => {
                        let $scope$_dot_atom_text: Nullable<dot_atom_text>;
                        let $$res: Nullable<dot_atom> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && ($scope$_dot_atom_text = this.matchdot_atom_text($$dpth + 1, $$cr)) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = new dot_atom($scope$_dot_atom_text);
                        }
                        return $$res;
                    });
            },
            this.$scope$dot_atom$memo,
        );
    }
    public matchspecials($$dpth: number, $$cr?: ErrorTracker): Nullable<specials> {
        return this.memoise(
            () => {
                return this.choice<specials>([
                    () => this.matchspecials_1($$dpth + 1, $$cr),
                    () => this.matchspecials_2($$dpth + 1, $$cr),
                    () => this.matchspecials_3($$dpth + 1, $$cr),
                    () => this.matchspecials_4($$dpth + 1, $$cr),
                    () => this.matchspecials_5($$dpth + 1, $$cr),
                    () => this.matchspecials_6($$dpth + 1, $$cr),
                    () => this.matchspecials_7($$dpth + 1, $$cr),
                    () => this.matchspecials_8($$dpth + 1, $$cr),
                    () => this.matchspecials_9($$dpth + 1, $$cr),
                    () => this.matchspecials_10($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$specials$memo,
        );
    }
    public matchspecials_1($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_1> {
        return this.regexAccept(String.raw`(?:\()`, $$dpth + 1, $$cr);
    }
    public matchspecials_2($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_2> {
        return this.regexAccept(String.raw`(?:\))`, $$dpth + 1, $$cr);
    }
    public matchspecials_3($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_3> {
        return this.regexAccept(String.raw`(?:[<>])`, $$dpth + 1, $$cr);
    }
    public matchspecials_4($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_4> {
        return this.regexAccept(String.raw`(?:\[)`, $$dpth + 1, $$cr);
    }
    public matchspecials_5($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_5> {
        return this.regexAccept(String.raw`(?:\])`, $$dpth + 1, $$cr);
    }
    public matchspecials_6($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_6> {
        return this.regexAccept(String.raw`(?:[:;@])`, $$dpth + 1, $$cr);
    }
    public matchspecials_7($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_7> {
        return this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr);
    }
    public matchspecials_8($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_8> {
        return this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr);
    }
    public matchspecials_9($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_9> {
        return this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr);
    }
    public matchspecials_10($$dpth: number, $$cr?: ErrorTracker): Nullable<specials_10> {
        return this.matchDQUOTE($$dpth + 1, $$cr);
    }
    public matchqtext($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext> {
        return this.memoise(
            () => {
                return this.choice<qtext>([
                    () => this.matchqtext_1($$dpth + 1, $$cr),
                    () => this.matchqtext_2($$dpth + 1, $$cr),
                    () => this.matchqtext_3($$dpth + 1, $$cr),
                    () => this.matchqtext_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$qtext$memo,
        );
    }
    public matchqtext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_1> {
        return this.regexAccept(String.raw`(?:\x21)`, $$dpth + 1, $$cr);
    }
    public matchqtext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_2> {
        return this.regexAccept(String.raw`(?:[\x23-\x5b])`, $$dpth + 1, $$cr);
    }
    public matchqtext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_3> {
        return this.regexAccept(String.raw`(?:[\x5d-\x7e])`, $$dpth + 1, $$cr);
    }
    public matchqtext_4($$dpth: number, $$cr?: ErrorTracker): Nullable<qtext_4> {
        return this.matchobs_qtext($$dpth + 1, $$cr);
    }
    public matchqcontent($$dpth: number, $$cr?: ErrorTracker): Nullable<qcontent> {
        return this.memoise(
            () => {
                return this.choice<qcontent>([
                    () => this.matchqcontent_1($$dpth + 1, $$cr),
                    () => this.matchqcontent_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$qcontent$memo,
        );
    }
    public matchqcontent_1($$dpth: number, $$cr?: ErrorTracker): Nullable<qcontent_1> {
        return this.matchqtext($$dpth + 1, $$cr);
    }
    public matchqcontent_2($$dpth: number, $$cr?: ErrorTracker): Nullable<qcontent_2> {
        return this.matchquoted_pair($$dpth + 1, $$cr);
    }
    public matchquoted_string($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_string> {
        return this.memoise(
            () => {
                return this.run<quoted_string>($$dpth,
                    () => {
                        let $scope$_contents: Nullable<quoted_string_$0[]>;
                        let $$res: Nullable<quoted_string> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchDQUOTE($$dpth + 1, $$cr) !== null
                            && ($scope$_contents = this.loop<quoted_string_$0>(() => this.matchquoted_string_$0($$dpth + 1, $$cr), true)) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchDQUOTE($$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = new quoted_string($scope$_contents);
                        }
                        return $$res;
                    });
            },
            this.$scope$quoted_string$memo,
        );
    }
    public matchquoted_string_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<quoted_string_$0> {
        return this.memoise(
            () => {
                return this.run<quoted_string_$0>($$dpth,
                    () => {
                        let $scope$_qcontent: Nullable<qcontent>;
                        let $$res: Nullable<quoted_string_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && ($scope$_qcontent = this.matchqcontent($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.quoted_string_$0, _qcontent: $scope$_qcontent};
                        }
                        return $$res;
                    });
            },
            this.$scope$quoted_string_$0$memo,
        );
    }
    public matchword($$dpth: number, $$cr?: ErrorTracker): Nullable<word> {
        return this.memoise(
            () => {
                return this.choice<word>([
                    () => this.matchword_1($$dpth + 1, $$cr),
                    () => this.matchword_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$word$memo,
        );
    }
    public matchword_1($$dpth: number, $$cr?: ErrorTracker): Nullable<word_1> {
        return this.matchatom($$dpth + 1, $$cr);
    }
    public matchword_2($$dpth: number, $$cr?: ErrorTracker): Nullable<word_2> {
        return this.matchquoted_string($$dpth + 1, $$cr);
    }
    public matchphrase($$dpth: number, $$cr?: ErrorTracker): Nullable<phrase> {
        return this.memoise(
            () => {
                return this.choice<phrase>([
                    () => this.matchphrase_1($$dpth + 1, $$cr),
                    () => this.matchphrase_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$phrase$memo,
        );
    }
    public matchphrase_1($$dpth: number, $$cr?: ErrorTracker): Nullable<phrase_1> {
        return this.loop<word>(() => this.matchword($$dpth + 1, $$cr), false);
    }
    public matchphrase_2($$dpth: number, $$cr?: ErrorTracker): Nullable<phrase_2> {
        return this.matchobs_phrase($$dpth + 1, $$cr);
    }
    public matchunstructured($$dpth: number, $$cr?: ErrorTracker): Nullable<unstructured> {
        return this.memoise(
            () => {
                return this.choice<unstructured>([
                    () => this.matchunstructured_1($$dpth + 1, $$cr),
                    () => this.matchunstructured_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$unstructured$memo,
        );
    }
    public matchunstructured_1($$dpth: number, $$cr?: ErrorTracker): Nullable<unstructured_1> {
        return this.matchunstructured_$0($$dpth + 1, $$cr);
    }
    public matchunstructured_2($$dpth: number, $$cr?: ErrorTracker): Nullable<unstructured_2> {
        return this.matchobs_unstruct($$dpth + 1, $$cr);
    }
    public matchunstructured_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<unstructured_$0> {
        return this.memoise(
            () => {
                return this.run<unstructured_$0>($$dpth,
                    () => {
                        let $$res: Nullable<unstructured_$0> = null;
                        if (true
                            && this.loop<unstructured_$0_$0>(() => this.matchunstructured_$0_$0($$dpth + 1, $$cr), true) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.unstructured_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$unstructured_$0$memo,
        );
    }
    public matchunstructured_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<unstructured_$0_$0> {
        return this.memoise(
            () => {
                return this.run<unstructured_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<unstructured_$0_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchVCHAR($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.unstructured_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$unstructured_$0_$0$memo,
        );
    }
    public matchdate_time($$dpth: number, $$cr?: ErrorTracker): Nullable<date_time> {
        return this.memoise(
            () => {
                return this.run<date_time>($$dpth,
                    () => {
                        let $$res: Nullable<date_time> = null;
                        if (true
                            && ((this.matchdate_time_$0($$dpth + 1, $$cr)) || true)
                            && this.matchdate($$dpth + 1, $$cr) !== null
                            && this.matchtime($$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.date_time, };
                        }
                        return $$res;
                    });
            },
            this.$scope$date_time$memo,
        );
    }
    public matchdate_time_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<date_time_$0> {
        return this.memoise(
            () => {
                return this.run<date_time_$0>($$dpth,
                    () => {
                        let $$res: Nullable<date_time_$0> = null;
                        if (true
                            && this.matchday_of_week($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.date_time_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$date_time_$0$memo,
        );
    }
    public matchday_of_week($$dpth: number, $$cr?: ErrorTracker): Nullable<day_of_week> {
        return this.memoise(
            () => {
                return this.choice<day_of_week>([
                    () => this.matchday_of_week_1($$dpth + 1, $$cr),
                    () => this.matchday_of_week_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$day_of_week$memo,
        );
    }
    public matchday_of_week_1($$dpth: number, $$cr?: ErrorTracker): Nullable<day_of_week_1> {
        return this.matchday_of_week_$0($$dpth + 1, $$cr);
    }
    public matchday_of_week_2($$dpth: number, $$cr?: ErrorTracker): Nullable<day_of_week_2> {
        return this.matchobs_day_of_week($$dpth + 1, $$cr);
    }
    public matchday_of_week_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<day_of_week_$0> {
        return this.memoise(
            () => {
                return this.run<day_of_week_$0>($$dpth,
                    () => {
                        let $$res: Nullable<day_of_week_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchday_name($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.day_of_week_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$day_of_week_$0$memo,
        );
    }
    public matchday_name($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name> {
        return this.memoise(
            () => {
                return this.choice<day_name>([
                    () => this.matchday_name_1($$dpth + 1, $$cr),
                    () => this.matchday_name_2($$dpth + 1, $$cr),
                    () => this.matchday_name_3($$dpth + 1, $$cr),
                    () => this.matchday_name_4($$dpth + 1, $$cr),
                    () => this.matchday_name_5($$dpth + 1, $$cr),
                    () => this.matchday_name_6($$dpth + 1, $$cr),
                    () => this.matchday_name_7($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$day_name$memo,
        );
    }
    public matchday_name_1($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name_1> {
        return this.regexAccept(String.raw`(?:Mon)`, $$dpth + 1, $$cr);
    }
    public matchday_name_2($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name_2> {
        return this.regexAccept(String.raw`(?:Tue)`, $$dpth + 1, $$cr);
    }
    public matchday_name_3($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name_3> {
        return this.regexAccept(String.raw`(?:Wed)`, $$dpth + 1, $$cr);
    }
    public matchday_name_4($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name_4> {
        return this.regexAccept(String.raw`(?:Thu)`, $$dpth + 1, $$cr);
    }
    public matchday_name_5($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name_5> {
        return this.regexAccept(String.raw`(?:Fri)`, $$dpth + 1, $$cr);
    }
    public matchday_name_6($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name_6> {
        return this.regexAccept(String.raw`(?:Sat)`, $$dpth + 1, $$cr);
    }
    public matchday_name_7($$dpth: number, $$cr?: ErrorTracker): Nullable<day_name_7> {
        return this.regexAccept(String.raw`(?:Sun)`, $$dpth + 1, $$cr);
    }
    public matchdate($$dpth: number, $$cr?: ErrorTracker): Nullable<date> {
        return this.memoise(
            () => {
                return this.run<date>($$dpth,
                    () => {
                        let $$res: Nullable<date> = null;
                        if (true
                            && this.matchday($$dpth + 1, $$cr) !== null
                            && this.matchmonth($$dpth + 1, $$cr) !== null
                            && this.matchyear($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.date, };
                        }
                        return $$res;
                    });
            },
            this.$scope$date$memo,
        );
    }
    public matchday($$dpth: number, $$cr?: ErrorTracker): Nullable<day> {
        return this.memoise(
            () => {
                return this.choice<day>([
                    () => this.matchday_1($$dpth + 1, $$cr),
                    () => this.matchday_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$day$memo,
        );
    }
    public matchday_1($$dpth: number, $$cr?: ErrorTracker): Nullable<day_1> {
        return this.matchday_$0($$dpth + 1, $$cr);
    }
    public matchday_2($$dpth: number, $$cr?: ErrorTracker): Nullable<day_2> {
        return this.matchobs_day($$dpth + 1, $$cr);
    }
    public matchday_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<day_$0> {
        return this.memoise(
            () => {
                return this.run<day_$0>($$dpth,
                    () => {
                        let $$res: Nullable<day_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.matchDIGIT($$dpth + 1, $$cr) !== null
                            && ((this.matchDIGIT($$dpth + 1, $$cr)) || true)
                            && this.matchFWS($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.day_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$day_$0$memo,
        );
    }
    public matchmonth($$dpth: number, $$cr?: ErrorTracker): Nullable<month> {
        return this.memoise(
            () => {
                return this.choice<month>([
                    () => this.matchmonth_1($$dpth + 1, $$cr),
                    () => this.matchmonth_2($$dpth + 1, $$cr),
                    () => this.matchmonth_3($$dpth + 1, $$cr),
                    () => this.matchmonth_4($$dpth + 1, $$cr),
                    () => this.matchmonth_5($$dpth + 1, $$cr),
                    () => this.matchmonth_6($$dpth + 1, $$cr),
                    () => this.matchmonth_7($$dpth + 1, $$cr),
                    () => this.matchmonth_8($$dpth + 1, $$cr),
                    () => this.matchmonth_9($$dpth + 1, $$cr),
                    () => this.matchmonth_10($$dpth + 1, $$cr),
                    () => this.matchmonth_11($$dpth + 1, $$cr),
                    () => this.matchmonth_12($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$month$memo,
        );
    }
    public matchmonth_1($$dpth: number, $$cr?: ErrorTracker): Nullable<month_1> {
        return this.regexAccept(String.raw`(?:Jan)`, $$dpth + 1, $$cr);
    }
    public matchmonth_2($$dpth: number, $$cr?: ErrorTracker): Nullable<month_2> {
        return this.regexAccept(String.raw`(?:Feb)`, $$dpth + 1, $$cr);
    }
    public matchmonth_3($$dpth: number, $$cr?: ErrorTracker): Nullable<month_3> {
        return this.regexAccept(String.raw`(?:Mar)`, $$dpth + 1, $$cr);
    }
    public matchmonth_4($$dpth: number, $$cr?: ErrorTracker): Nullable<month_4> {
        return this.regexAccept(String.raw`(?:Apr)`, $$dpth + 1, $$cr);
    }
    public matchmonth_5($$dpth: number, $$cr?: ErrorTracker): Nullable<month_5> {
        return this.regexAccept(String.raw`(?:May)`, $$dpth + 1, $$cr);
    }
    public matchmonth_6($$dpth: number, $$cr?: ErrorTracker): Nullable<month_6> {
        return this.regexAccept(String.raw`(?:Jun)`, $$dpth + 1, $$cr);
    }
    public matchmonth_7($$dpth: number, $$cr?: ErrorTracker): Nullable<month_7> {
        return this.regexAccept(String.raw`(?:Jul)`, $$dpth + 1, $$cr);
    }
    public matchmonth_8($$dpth: number, $$cr?: ErrorTracker): Nullable<month_8> {
        return this.regexAccept(String.raw`(?:Aug)`, $$dpth + 1, $$cr);
    }
    public matchmonth_9($$dpth: number, $$cr?: ErrorTracker): Nullable<month_9> {
        return this.regexAccept(String.raw`(?:Sep)`, $$dpth + 1, $$cr);
    }
    public matchmonth_10($$dpth: number, $$cr?: ErrorTracker): Nullable<month_10> {
        return this.regexAccept(String.raw`(?:Oct)`, $$dpth + 1, $$cr);
    }
    public matchmonth_11($$dpth: number, $$cr?: ErrorTracker): Nullable<month_11> {
        return this.regexAccept(String.raw`(?:Nov)`, $$dpth + 1, $$cr);
    }
    public matchmonth_12($$dpth: number, $$cr?: ErrorTracker): Nullable<month_12> {
        return this.regexAccept(String.raw`(?:Dec)`, $$dpth + 1, $$cr);
    }
    public matchyear($$dpth: number, $$cr?: ErrorTracker): Nullable<year> {
        return this.memoise(
            () => {
                return this.choice<year>([
                    () => this.matchyear_1($$dpth + 1, $$cr),
                    () => this.matchyear_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$year$memo,
        );
    }
    public matchyear_1($$dpth: number, $$cr?: ErrorTracker): Nullable<year_1> {
        return this.matchyear_$0($$dpth + 1, $$cr);
    }
    public matchyear_2($$dpth: number, $$cr?: ErrorTracker): Nullable<year_2> {
        return this.matchobs_year($$dpth + 1, $$cr);
    }
    public matchyear_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<year_$0> {
        return this.memoise(
            () => {
                return this.run<year_$0>($$dpth,
                    () => {
                        let $$res: Nullable<year_$0> = null;
                        if (true
                            && this.matchFWS($$dpth + 1, $$cr) !== null
                            && this.matchFOUR_DIGIT($$dpth + 1, $$cr) !== null
                            && this.loop<DIGIT>(() => this.matchDIGIT($$dpth + 1, $$cr), true) !== null
                            && this.matchFWS($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.year_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$year_$0$memo,
        );
    }
    public matchtime($$dpth: number, $$cr?: ErrorTracker): Nullable<time> {
        return this.memoise(
            () => {
                return this.run<time>($$dpth,
                    () => {
                        let $$res: Nullable<time> = null;
                        if (true
                            && this.matchtime_of_day($$dpth + 1, $$cr) !== null
                            && this.matchzone($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.time, };
                        }
                        return $$res;
                    });
            },
            this.$scope$time$memo,
        );
    }
    public matchtime_of_day($$dpth: number, $$cr?: ErrorTracker): Nullable<time_of_day> {
        return this.memoise(
            () => {
                return this.run<time_of_day>($$dpth,
                    () => {
                        let $$res: Nullable<time_of_day> = null;
                        if (true
                            && this.matchhour($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchminute($$dpth + 1, $$cr) !== null
                            && ((this.matchtime_of_day_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.time_of_day, };
                        }
                        return $$res;
                    });
            },
            this.$scope$time_of_day$memo,
        );
    }
    public matchtime_of_day_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<time_of_day_$0> {
        return this.memoise(
            () => {
                return this.run<time_of_day_$0>($$dpth,
                    () => {
                        let $$res: Nullable<time_of_day_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchsecond($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.time_of_day_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$time_of_day_$0$memo,
        );
    }
    public matchhour($$dpth: number, $$cr?: ErrorTracker): Nullable<hour> {
        return this.memoise(
            () => {
                return this.choice<hour>([
                    () => this.matchhour_1($$dpth + 1, $$cr),
                    () => this.matchhour_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$hour$memo,
        );
    }
    public matchhour_1($$dpth: number, $$cr?: ErrorTracker): Nullable<hour_1> {
        return this.matchTWO_DIGIT($$dpth + 1, $$cr);
    }
    public matchhour_2($$dpth: number, $$cr?: ErrorTracker): Nullable<hour_2> {
        return this.matchobs_hour($$dpth + 1, $$cr);
    }
    public matchminute($$dpth: number, $$cr?: ErrorTracker): Nullable<minute> {
        return this.memoise(
            () => {
                return this.choice<minute>([
                    () => this.matchminute_1($$dpth + 1, $$cr),
                    () => this.matchminute_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$minute$memo,
        );
    }
    public matchminute_1($$dpth: number, $$cr?: ErrorTracker): Nullable<minute_1> {
        return this.matchTWO_DIGIT($$dpth + 1, $$cr);
    }
    public matchminute_2($$dpth: number, $$cr?: ErrorTracker): Nullable<minute_2> {
        return this.matchobs_minute($$dpth + 1, $$cr);
    }
    public matchsecond($$dpth: number, $$cr?: ErrorTracker): Nullable<second> {
        return this.memoise(
            () => {
                return this.choice<second>([
                    () => this.matchsecond_1($$dpth + 1, $$cr),
                    () => this.matchsecond_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$second$memo,
        );
    }
    public matchsecond_1($$dpth: number, $$cr?: ErrorTracker): Nullable<second_1> {
        return this.matchTWO_DIGIT($$dpth + 1, $$cr);
    }
    public matchsecond_2($$dpth: number, $$cr?: ErrorTracker): Nullable<second_2> {
        return this.matchobs_second($$dpth + 1, $$cr);
    }
    public matchzone($$dpth: number, $$cr?: ErrorTracker): Nullable<zone> {
        return this.memoise(
            () => {
                return this.choice<zone>([
                    () => this.matchzone_1($$dpth + 1, $$cr),
                    () => this.matchzone_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$zone$memo,
        );
    }
    public matchzone_1($$dpth: number, $$cr?: ErrorTracker): Nullable<zone_1> {
        return this.matchzone_$0($$dpth + 1, $$cr);
    }
    public matchzone_2($$dpth: number, $$cr?: ErrorTracker): Nullable<zone_2> {
        return this.matchobs_zone($$dpth + 1, $$cr);
    }
    public matchzone_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<zone_$0> {
        return this.memoise(
            () => {
                return this.run<zone_$0>($$dpth,
                    () => {
                        let $$res: Nullable<zone_$0> = null;
                        if (true
                            && this.matchFWS($$dpth + 1, $$cr) !== null
                            && this.matchzone_$0_$0($$dpth + 1, $$cr) !== null
                            && this.matchFOUR_DIGIT($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.zone_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$zone_$0$memo,
        );
    }
    public matchzone_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<zone_$0_$0> {
        return this.memoise(
            () => {
                return this.choice<zone_$0_$0>([
                    () => this.matchzone_$0_$0_1($$dpth + 1, $$cr),
                    () => this.matchzone_$0_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$zone_$0_$0$memo,
        );
    }
    public matchzone_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<zone_$0_$0_1> {
        return this.regexAccept(String.raw`(?:\+)`, $$dpth + 1, $$cr);
    }
    public matchzone_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<zone_$0_$0_2> {
        return this.regexAccept(String.raw`(?:\-)`, $$dpth + 1, $$cr);
    }
    public matchaddress($$dpth: number, $$cr?: ErrorTracker): Nullable<address> {
        return this.memoise(
            () => {
                return this.choice<address>([
                    () => this.matchaddress_1($$dpth + 1, $$cr),
                    () => this.matchaddress_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$address$memo,
        );
    }
    public matchaddress_1($$dpth: number, $$cr?: ErrorTracker): Nullable<address_1> {
        return this.matchmailbox($$dpth + 1, $$cr);
    }
    public matchaddress_2($$dpth: number, $$cr?: ErrorTracker): Nullable<address_2> {
        return this.matchgroup($$dpth + 1, $$cr);
    }
    public matchmailbox($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox> {
        return this.memoise(
            () => {
                return this.choice<mailbox>([
                    () => this.matchmailbox_1($$dpth + 1, $$cr),
                    () => this.matchmailbox_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$mailbox$memo,
        );
    }
    public matchmailbox_1($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_1> {
        return this.matchname_addr($$dpth + 1, $$cr);
    }
    public matchmailbox_2($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_2> {
        return this.matchaddr_spec($$dpth + 1, $$cr);
    }
    public matchname_addr($$dpth: number, $$cr?: ErrorTracker): Nullable<name_addr> {
        return this.memoise(
            () => {
                return this.run<name_addr>($$dpth,
                    () => {
                        let $$res: Nullable<name_addr> = null;
                        if (true
                            && ((this.matchdisplay_name($$dpth + 1, $$cr)) || true)
                            && this.matchangle_addr($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.name_addr, };
                        }
                        return $$res;
                    });
            },
            this.$scope$name_addr$memo,
        );
    }
    public matchangle_addr($$dpth: number, $$cr?: ErrorTracker): Nullable<angle_addr> {
        return this.memoise(
            () => {
                return this.choice<angle_addr>([
                    () => this.matchangle_addr_1($$dpth + 1, $$cr),
                    () => this.matchangle_addr_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$angle_addr$memo,
        );
    }
    public matchangle_addr_1($$dpth: number, $$cr?: ErrorTracker): Nullable<angle_addr_1> {
        return this.run<angle_addr_1>($$dpth,
            () => {
                let $$res: Nullable<angle_addr_1> = null;
                if (true
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                    && this.regexAccept(String.raw`(?:<)`, $$dpth + 1, $$cr) !== null
                    && this.matchaddr_spec($$dpth + 1, $$cr) !== null
                    && this.regexAccept(String.raw`(?:>)`, $$dpth + 1, $$cr) !== null
                    && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                ) {
                    $$res = {kind: ASTKinds.angle_addr_1, };
                }
                return $$res;
            });
    }
    public matchangle_addr_2($$dpth: number, $$cr?: ErrorTracker): Nullable<angle_addr_2> {
        return this.matchobs_angle_addr($$dpth + 1, $$cr);
    }
    public matchgroup($$dpth: number, $$cr?: ErrorTracker): Nullable<group> {
        return this.memoise(
            () => {
                return this.run<group>($$dpth,
                    () => {
                        let $$res: Nullable<group> = null;
                        if (true
                            && this.matchdisplay_name($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchgroup_list($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:;)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.group, };
                        }
                        return $$res;
                    });
            },
            this.$scope$group$memo,
        );
    }
    public matchdisplay_name($$dpth: number, $$cr?: ErrorTracker): Nullable<display_name> {
        return this.memoise(
            () => {
                return this.matchphrase($$dpth + 1, $$cr);
            },
            this.$scope$display_name$memo,
        );
    }
    public matchmailbox_list($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list> {
        return this.memoise(
            () => {
                return this.choice<mailbox_list>([
                    () => this.matchmailbox_list_1($$dpth + 1, $$cr),
                    () => this.matchmailbox_list_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$mailbox_list$memo,
        );
    }
    public matchmailbox_list_1($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_1> {
        return this.matchmailbox_list_$0($$dpth + 1, $$cr);
    }
    public matchmailbox_list_2($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_2> {
        return this.matchobs_mbox_list($$dpth + 1, $$cr);
    }
    public matchmailbox_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_$0> {
        return this.memoise(
            () => {
                return this.run<mailbox_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<mailbox_list_$0> = null;
                        if (true
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.loop<mailbox_list_$0_$0>(() => this.matchmailbox_list_$0_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.mailbox_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$mailbox_list_$0$memo,
        );
    }
    public matchmailbox_list_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<mailbox_list_$0_$0> {
        return this.memoise(
            () => {
                return this.run<mailbox_list_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<mailbox_list_$0_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.mailbox_list_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$mailbox_list_$0_$0$memo,
        );
    }
    public matchaddress_list($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list> {
        return this.memoise(
            () => {
                return this.choice<address_list>([
                    () => this.matchaddress_list_1($$dpth + 1, $$cr),
                    () => this.matchaddress_list_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$address_list$memo,
        );
    }
    public matchaddress_list_1($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_1> {
        return this.matchaddress_list_$0($$dpth + 1, $$cr);
    }
    public matchaddress_list_2($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_2> {
        return this.matchobs_addr_list($$dpth + 1, $$cr);
    }
    public matchaddress_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_$0> {
        return this.memoise(
            () => {
                return this.run<address_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<address_list_$0> = null;
                        if (true
                            && this.matchaddress($$dpth + 1, $$cr) !== null
                            && this.loop<address_list_$0_$0>(() => this.matchaddress_list_$0_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.address_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$address_list_$0$memo,
        );
    }
    public matchaddress_list_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<address_list_$0_$0> {
        return this.memoise(
            () => {
                return this.run<address_list_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<address_list_$0_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.address_list_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$address_list_$0_$0$memo,
        );
    }
    public matchgroup_list($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list> {
        return this.memoise(
            () => {
                return this.choice<group_list>([
                    () => this.matchgroup_list_1($$dpth + 1, $$cr),
                    () => this.matchgroup_list_2($$dpth + 1, $$cr),
                    () => this.matchgroup_list_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$group_list$memo,
        );
    }
    public matchgroup_list_1($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list_1> {
        return this.matchmailbox_list($$dpth + 1, $$cr);
    }
    public matchgroup_list_2($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchgroup_list_3($$dpth: number, $$cr?: ErrorTracker): Nullable<group_list_3> {
        return this.matchobs_group_list($$dpth + 1, $$cr);
    }
    public matchaddr_spec($$dpth: number, $$cr?: ErrorTracker): Nullable<addr_spec> {
        return this.memoise(
            () => {
                return this.run<addr_spec>($$dpth,
                    () => {
                        let $scope$local_part: Nullable<local_part>;
                        let $scope$domain: Nullable<domain>;
                        let $$res: Nullable<addr_spec> = null;
                        if (true
                            && ($scope$local_part = this.matchlocal_part($$dpth + 1, $$cr)) !== null
                            && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                            && ($scope$domain = this.matchdomain($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.addr_spec, local_part: $scope$local_part, domain: $scope$domain};
                        }
                        return $$res;
                    });
            },
            this.$scope$addr_spec$memo,
        );
    }
    public matchlocal_part($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part> {
        return this.memoise(
            () => {
                return this.choice<local_part>([
                    () => this.matchlocal_part_1($$dpth + 1, $$cr),
                    () => this.matchlocal_part_2($$dpth + 1, $$cr),
                    () => this.matchlocal_part_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$local_part$memo,
        );
    }
    public matchlocal_part_1($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part_1> {
        return this.run<local_part_1>($$dpth,
            () => {
                let $scope$token: Nullable<dot_atom>;
                let $$res: Nullable<local_part_1> = null;
                if (true
                    && ($scope$token = this.matchdot_atom($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.local_part_1, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchlocal_part_2($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part_2> {
        return this.run<local_part_2>($$dpth,
            () => {
                let $scope$token: Nullable<quoted_string>;
                let $$res: Nullable<local_part_2> = null;
                if (true
                    && ($scope$token = this.matchquoted_string($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.local_part_2, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchlocal_part_3($$dpth: number, $$cr?: ErrorTracker): Nullable<local_part_3> {
        return this.run<local_part_3>($$dpth,
            () => {
                let $scope$token: Nullable<obs_local_part>;
                let $$res: Nullable<local_part_3> = null;
                if (true
                    && ($scope$token = this.matchobs_local_part($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.local_part_3, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain($$dpth: number, $$cr?: ErrorTracker): Nullable<domain> {
        return this.memoise(
            () => {
                return this.choice<domain>([
                    () => this.matchdomain_1($$dpth + 1, $$cr),
                    () => this.matchdomain_2($$dpth + 1, $$cr),
                    () => this.matchdomain_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$domain$memo,
        );
    }
    public matchdomain_1($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_1> {
        return this.run<domain_1>($$dpth,
            () => {
                let $scope$token: Nullable<dot_atom>;
                let $$res: Nullable<domain_1> = null;
                if (true
                    && ($scope$token = this.matchdot_atom($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.domain_1, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain_2($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_2> {
        return this.run<domain_2>($$dpth,
            () => {
                let $scope$token: Nullable<domain_literal>;
                let $$res: Nullable<domain_2> = null;
                if (true
                    && ($scope$token = this.matchdomain_literal($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.domain_2, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain_3($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_3> {
        return this.run<domain_3>($$dpth,
            () => {
                let $scope$token: Nullable<obs_domain>;
                let $$res: Nullable<domain_3> = null;
                if (true
                    && ($scope$token = this.matchobs_domain($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.domain_3, token: $scope$token};
                }
                return $$res;
            });
    }
    public matchdomain_literal($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_literal> {
        return this.memoise(
            () => {
                return this.run<domain_literal>($$dpth,
                    () => {
                        let $scope$_contents: Nullable<domain_literal_$0[]>;
                        let $$res: Nullable<domain_literal> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:\[)`, $$dpth + 1, $$cr) !== null
                            && ($scope$_contents = this.loop<domain_literal_$0>(() => this.matchdomain_literal_$0($$dpth + 1, $$cr), true)) !== null
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:\])`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.domain_literal, _contents: $scope$_contents};
                        }
                        return $$res;
                    });
            },
            this.$scope$domain_literal$memo,
        );
    }
    public matchdomain_literal_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<domain_literal_$0> {
        return this.memoise(
            () => {
                return this.run<domain_literal_$0>($$dpth,
                    () => {
                        let $scope$_dtext: Nullable<dtext>;
                        let $$res: Nullable<domain_literal_$0> = null;
                        if (true
                            && ((this.matchFWS($$dpth + 1, $$cr)) || true)
                            && ($scope$_dtext = this.matchdtext($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.domain_literal_$0, _dtext: $scope$_dtext};
                        }
                        return $$res;
                    });
            },
            this.$scope$domain_literal_$0$memo,
        );
    }
    public matchdtext($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext> {
        return this.memoise(
            () => {
                return this.choice<dtext>([
                    () => this.matchdtext_1($$dpth + 1, $$cr),
                    () => this.matchdtext_2($$dpth + 1, $$cr),
                    () => this.matchdtext_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$dtext$memo,
        );
    }
    public matchdtext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext_1> {
        return this.regexAccept(String.raw`(?:[\x21-\x5a])`, $$dpth + 1, $$cr);
    }
    public matchdtext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext_2> {
        return this.regexAccept(String.raw`(?:[\x5e-\x7e])`, $$dpth + 1, $$cr);
    }
    public matchdtext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<dtext_3> {
        return this.run<dtext_3>($$dpth,
            () => {
                let $scope$obs_dtext: Nullable<obs_dtext>;
                let $$res: Nullable<dtext_3> = null;
                if (true
                    && ($scope$obs_dtext = this.matchobs_dtext($$dpth + 1, $$cr)) !== null
                ) {
                    $$res = {kind: ASTKinds.dtext_3, obs_dtext: $scope$obs_dtext};
                }
                return $$res;
            });
    }
    public matchmessage($$dpth: number, $$cr?: ErrorTracker): Nullable<message> {
        return this.memoise(
            () => {
                return this.run<message>($$dpth,
                    () => {
                        let $$res: Nullable<message> = null;
                        if (true
                            && this.matchmessage_$0($$dpth + 1, $$cr) !== null
                            && ((this.matchmessage_$1($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.message, };
                        }
                        return $$res;
                    });
            },
            this.$scope$message$memo,
        );
    }
    public matchmessage_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<message_$0> {
        return this.memoise(
            () => {
                return this.choice<message_$0>([
                    () => this.matchmessage_$0_1($$dpth + 1, $$cr),
                    () => this.matchmessage_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$message_$0$memo,
        );
    }
    public matchmessage_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<message_$0_1> {
        return this.matchfields($$dpth + 1, $$cr);
    }
    public matchmessage_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<message_$0_2> {
        return this.matchobs_fields($$dpth + 1, $$cr);
    }
    public matchmessage_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<message_$1> {
        return this.memoise(
            () => {
                return this.run<message_$1>($$dpth,
                    () => {
                        let $$res: Nullable<message_$1> = null;
                        if (true
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                            && this.matchbody($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.message_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$message_$1$memo,
        );
    }
    public matchbody($$dpth: number, $$cr?: ErrorTracker): Nullable<body> {
        return this.memoise(
            () => {
                return this.choice<body>([
                    () => this.matchbody_1($$dpth + 1, $$cr),
                    () => this.matchbody_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$body$memo,
        );
    }
    public matchbody_1($$dpth: number, $$cr?: ErrorTracker): Nullable<body_1> {
        return this.matchbody_$0($$dpth + 1, $$cr);
    }
    public matchbody_2($$dpth: number, $$cr?: ErrorTracker): Nullable<body_2> {
        return this.matchobs_body($$dpth + 1, $$cr);
    }
    public matchbody_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<body_$0> {
        return this.memoise(
            () => {
                return this.run<body_$0>($$dpth,
                    () => {
                        let $$res: Nullable<body_$0> = null;
                        if (true
                            && this.loop<body_$0_$0>(() => this.matchbody_$0_$0($$dpth + 1, $$cr), true) !== null
                            && this.match_998text($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.body_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$body_$0$memo,
        );
    }
    public matchbody_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<body_$0_$0> {
        return this.memoise(
            () => {
                return this.run<body_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<body_$0_$0> = null;
                        if (true
                            && this.match_998text($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.body_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$body_$0_$0$memo,
        );
    }
    public matchtext($$dpth: number, $$cr?: ErrorTracker): Nullable<text> {
        return this.memoise(
            () => {
                return this.choice<text>([
                    () => this.matchtext_1($$dpth + 1, $$cr),
                    () => this.matchtext_2($$dpth + 1, $$cr),
                    () => this.matchtext_3($$dpth + 1, $$cr),
                    () => this.matchtext_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$text$memo,
        );
    }
    public matchtext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<text_1> {
        return this.regexAccept(String.raw`(?:[\x01-\x09])`, $$dpth + 1, $$cr);
    }
    public matchtext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<text_2> {
        return this.regexAccept(String.raw`(?:\x0B)`, $$dpth + 1, $$cr);
    }
    public matchtext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<text_3> {
        return this.regexAccept(String.raw`(?:\x0C)`, $$dpth + 1, $$cr);
    }
    public matchtext_4($$dpth: number, $$cr?: ErrorTracker): Nullable<text_4> {
        return this.regexAccept(String.raw`(?:[\x0E-\x7f])`, $$dpth + 1, $$cr);
    }
    public match_998text($$dpth: number, $$cr?: ErrorTracker): Nullable<_998text> {
        return this.memoise(
            () => {
                return this.regexAccept(String.raw`(?:[\x01-\x09\x0B\x0C\x0E-\x7F]{998,})`, $$dpth + 1, $$cr);
            },
            this.$scope$_998text$memo,
        );
    }
    public matchfields($$dpth: number, $$cr?: ErrorTracker): Nullable<fields> {
        return this.memoise(
            () => {
                return this.run<fields>($$dpth,
                    () => {
                        let $$res: Nullable<fields> = null;
                        if (true
                            && this.loop<fields_$0>(() => this.matchfields_$0($$dpth + 1, $$cr), true) !== null
                            && this.loop<fields_$1>(() => this.matchfields_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.fields, };
                        }
                        return $$res;
                    });
            },
            this.$scope$fields$memo,
        );
    }
    public matchfields_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0> {
        return this.memoise(
            () => {
                return this.choice<fields_$0>([
                    () => this.matchfields_$0_1($$dpth + 1, $$cr),
                    () => this.matchfields_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$fields_$0$memo,
        );
    }
    public matchfields_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_1> {
        return this.run<fields_$0_1>($$dpth,
            () => {
                let $$res: Nullable<fields_$0_1> = null;
                if (true
                    && this.matchtrace($$dpth + 1, $$cr) !== null
                    && this.loop<optional_field>(() => this.matchoptional_field($$dpth + 1, $$cr), true) !== null
                ) {
                    $$res = {kind: ASTKinds.fields_$0_1, };
                }
                return $$res;
            });
    }
    public matchfields_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_2> {
        return this.loop<fields_$0_$0>(() => this.matchfields_$0_$0($$dpth + 1, $$cr), true);
    }
    public matchfields_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0> {
        return this.memoise(
            () => {
                return this.choice<fields_$0_$0>([
                    () => this.matchfields_$0_$0_1($$dpth + 1, $$cr),
                    () => this.matchfields_$0_$0_2($$dpth + 1, $$cr),
                    () => this.matchfields_$0_$0_3($$dpth + 1, $$cr),
                    () => this.matchfields_$0_$0_4($$dpth + 1, $$cr),
                    () => this.matchfields_$0_$0_5($$dpth + 1, $$cr),
                    () => this.matchfields_$0_$0_6($$dpth + 1, $$cr),
                    () => this.matchfields_$0_$0_7($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$fields_$0_$0$memo,
        );
    }
    public matchfields_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0_1> {
        return this.matchresent_date($$dpth + 1, $$cr);
    }
    public matchfields_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0_2> {
        return this.matchresent_from($$dpth + 1, $$cr);
    }
    public matchfields_$0_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0_3> {
        return this.matchresent_sender($$dpth + 1, $$cr);
    }
    public matchfields_$0_$0_4($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0_4> {
        return this.matchresent_to($$dpth + 1, $$cr);
    }
    public matchfields_$0_$0_5($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0_5> {
        return this.matchresent_cc($$dpth + 1, $$cr);
    }
    public matchfields_$0_$0_6($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0_6> {
        return this.matchresent_bcc($$dpth + 1, $$cr);
    }
    public matchfields_$0_$0_7($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$0_$0_7> {
        return this.matchresent_msg_id($$dpth + 1, $$cr);
    }
    public matchfields_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1> {
        return this.memoise(
            () => {
                return this.choice<fields_$1>([
                    () => this.matchfields_$1_1($$dpth + 1, $$cr),
                    () => this.matchfields_$1_2($$dpth + 1, $$cr),
                    () => this.matchfields_$1_3($$dpth + 1, $$cr),
                    () => this.matchfields_$1_4($$dpth + 1, $$cr),
                    () => this.matchfields_$1_5($$dpth + 1, $$cr),
                    () => this.matchfields_$1_6($$dpth + 1, $$cr),
                    () => this.matchfields_$1_7($$dpth + 1, $$cr),
                    () => this.matchfields_$1_8($$dpth + 1, $$cr),
                    () => this.matchfields_$1_9($$dpth + 1, $$cr),
                    () => this.matchfields_$1_10($$dpth + 1, $$cr),
                    () => this.matchfields_$1_11($$dpth + 1, $$cr),
                    () => this.matchfields_$1_12($$dpth + 1, $$cr),
                    () => this.matchfields_$1_13($$dpth + 1, $$cr),
                    () => this.matchfields_$1_14($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$fields_$1$memo,
        );
    }
    public matchfields_$1_1($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_1> {
        return this.matchorig_date($$dpth + 1, $$cr);
    }
    public matchfields_$1_2($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_2> {
        return this.matchfrom($$dpth + 1, $$cr);
    }
    public matchfields_$1_3($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_3> {
        return this.matchsender($$dpth + 1, $$cr);
    }
    public matchfields_$1_4($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_4> {
        return this.matchreply_to($$dpth + 1, $$cr);
    }
    public matchfields_$1_5($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_5> {
        return this.matchto($$dpth + 1, $$cr);
    }
    public matchfields_$1_6($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_6> {
        return this.matchcc($$dpth + 1, $$cr);
    }
    public matchfields_$1_7($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_7> {
        return this.matchbcc($$dpth + 1, $$cr);
    }
    public matchfields_$1_8($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_8> {
        return this.matchmessage_id($$dpth + 1, $$cr);
    }
    public matchfields_$1_9($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_9> {
        return this.matchin_reply_to($$dpth + 1, $$cr);
    }
    public matchfields_$1_10($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_10> {
        return this.matchreferences($$dpth + 1, $$cr);
    }
    public matchfields_$1_11($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_11> {
        return this.matchsubject($$dpth + 1, $$cr);
    }
    public matchfields_$1_12($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_12> {
        return this.matchcomments($$dpth + 1, $$cr);
    }
    public matchfields_$1_13($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_13> {
        return this.matchkeywords($$dpth + 1, $$cr);
    }
    public matchfields_$1_14($$dpth: number, $$cr?: ErrorTracker): Nullable<fields_$1_14> {
        return this.matchoptional_field($$dpth + 1, $$cr);
    }
    public matchorig_date($$dpth: number, $$cr?: ErrorTracker): Nullable<orig_date> {
        return this.memoise(
            () => {
                return this.run<orig_date>($$dpth,
                    () => {
                        let $$res: Nullable<orig_date> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Date:)`, $$dpth + 1, $$cr) !== null
                            && this.matchdate_time($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.orig_date, };
                        }
                        return $$res;
                    });
            },
            this.$scope$orig_date$memo,
        );
    }
    public matchfrom($$dpth: number, $$cr?: ErrorTracker): Nullable<from> {
        return this.memoise(
            () => {
                return this.run<from>($$dpth,
                    () => {
                        let $$res: Nullable<from> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:From:)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.from, };
                        }
                        return $$res;
                    });
            },
            this.$scope$from$memo,
        );
    }
    public matchsender($$dpth: number, $$cr?: ErrorTracker): Nullable<sender> {
        return this.memoise(
            () => {
                return this.run<sender>($$dpth,
                    () => {
                        let $$res: Nullable<sender> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Sender:)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.sender, };
                        }
                        return $$res;
                    });
            },
            this.$scope$sender$memo,
        );
    }
    public matchreply_to($$dpth: number, $$cr?: ErrorTracker): Nullable<reply_to> {
        return this.memoise(
            () => {
                return this.run<reply_to>($$dpth,
                    () => {
                        let $$res: Nullable<reply_to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Reply_To:)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.reply_to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$reply_to$memo,
        );
    }
    public matchto($$dpth: number, $$cr?: ErrorTracker): Nullable<to> {
        return this.memoise(
            () => {
                return this.run<to>($$dpth,
                    () => {
                        let $$res: Nullable<to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:To:)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$to$memo,
        );
    }
    public matchcc($$dpth: number, $$cr?: ErrorTracker): Nullable<cc> {
        return this.memoise(
            () => {
                return this.run<cc>($$dpth,
                    () => {
                        let $$res: Nullable<cc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Cc:)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.cc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$cc$memo,
        );
    }
    public matchbcc($$dpth: number, $$cr?: ErrorTracker): Nullable<bcc> {
        return this.memoise(
            () => {
                return this.run<bcc>($$dpth,
                    () => {
                        let $$res: Nullable<bcc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Bcc:)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchbcc_$0($$dpth + 1, $$cr)) || true)
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.bcc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$bcc$memo,
        );
    }
    public matchbcc_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<bcc_$0> {
        return this.memoise(
            () => {
                return this.choice<bcc_$0>([
                    () => this.matchbcc_$0_1($$dpth + 1, $$cr),
                    () => this.matchbcc_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$bcc_$0$memo,
        );
    }
    public matchbcc_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<bcc_$0_1> {
        return this.matchaddress_list($$dpth + 1, $$cr);
    }
    public matchbcc_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<bcc_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchmessage_id($$dpth: number, $$cr?: ErrorTracker): Nullable<message_id> {
        return this.memoise(
            () => {
                return this.run<message_id>($$dpth,
                    () => {
                        let $$res: Nullable<message_id> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Message-ID:)`, $$dpth + 1, $$cr) !== null
                            && this.matchmsg_id($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.message_id, };
                        }
                        return $$res;
                    });
            },
            this.$scope$message_id$memo,
        );
    }
    public matchin_reply_to($$dpth: number, $$cr?: ErrorTracker): Nullable<in_reply_to> {
        return this.memoise(
            () => {
                return this.run<in_reply_to>($$dpth,
                    () => {
                        let $$res: Nullable<in_reply_to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:In-Reply-To:)`, $$dpth + 1, $$cr) !== null
                            && this.loop<msg_id>(() => this.matchmsg_id($$dpth + 1, $$cr), false) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.in_reply_to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$in_reply_to$memo,
        );
    }
    public matchreferences($$dpth: number, $$cr?: ErrorTracker): Nullable<references> {
        return this.memoise(
            () => {
                return this.run<references>($$dpth,
                    () => {
                        let $$res: Nullable<references> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:References:)`, $$dpth + 1, $$cr) !== null
                            && this.loop<msg_id>(() => this.matchmsg_id($$dpth + 1, $$cr), false) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.references, };
                        }
                        return $$res;
                    });
            },
            this.$scope$references$memo,
        );
    }
    public matchmsg_id($$dpth: number, $$cr?: ErrorTracker): Nullable<msg_id> {
        return this.memoise(
            () => {
                return this.run<msg_id>($$dpth,
                    () => {
                        let $$res: Nullable<msg_id> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:<)`, $$dpth + 1, $$cr) !== null
                            && this.matchid_left($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                            && this.matchid_right($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?:>)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.msg_id, };
                        }
                        return $$res;
                    });
            },
            this.$scope$msg_id$memo,
        );
    }
    public matchid_left($$dpth: number, $$cr?: ErrorTracker): Nullable<id_left> {
        return this.memoise(
            () => {
                return this.choice<id_left>([
                    () => this.matchid_left_1($$dpth + 1, $$cr),
                    () => this.matchid_left_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$id_left$memo,
        );
    }
    public matchid_left_1($$dpth: number, $$cr?: ErrorTracker): Nullable<id_left_1> {
        return this.matchdot_atom_text($$dpth + 1, $$cr);
    }
    public matchid_left_2($$dpth: number, $$cr?: ErrorTracker): Nullable<id_left_2> {
        return this.matchobs_id_left($$dpth + 1, $$cr);
    }
    public matchid_right($$dpth: number, $$cr?: ErrorTracker): Nullable<id_right> {
        return this.memoise(
            () => {
                return this.choice<id_right>([
                    () => this.matchid_right_1($$dpth + 1, $$cr),
                    () => this.matchid_right_2($$dpth + 1, $$cr),
                    () => this.matchid_right_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$id_right$memo,
        );
    }
    public matchid_right_1($$dpth: number, $$cr?: ErrorTracker): Nullable<id_right_1> {
        return this.matchdot_atom_text($$dpth + 1, $$cr);
    }
    public matchid_right_2($$dpth: number, $$cr?: ErrorTracker): Nullable<id_right_2> {
        return this.matchno_fold_literal($$dpth + 1, $$cr);
    }
    public matchid_right_3($$dpth: number, $$cr?: ErrorTracker): Nullable<id_right_3> {
        return this.matchobs_id_right($$dpth + 1, $$cr);
    }
    public matchno_fold_literal($$dpth: number, $$cr?: ErrorTracker): Nullable<no_fold_literal> {
        return this.memoise(
            () => {
                return this.run<no_fold_literal>($$dpth,
                    () => {
                        let $$res: Nullable<no_fold_literal> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\[)`, $$dpth + 1, $$cr) !== null
                            && this.loop<dtext>(() => this.matchdtext($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?:\])`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.no_fold_literal, };
                        }
                        return $$res;
                    });
            },
            this.$scope$no_fold_literal$memo,
        );
    }
    public matchsubject($$dpth: number, $$cr?: ErrorTracker): Nullable<subject> {
        return this.memoise(
            () => {
                return this.run<subject>($$dpth,
                    () => {
                        let $$res: Nullable<subject> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Subject:)`, $$dpth + 1, $$cr) !== null
                            && this.matchunstructured($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.subject, };
                        }
                        return $$res;
                    });
            },
            this.$scope$subject$memo,
        );
    }
    public matchcomments($$dpth: number, $$cr?: ErrorTracker): Nullable<comments> {
        return this.memoise(
            () => {
                return this.run<comments>($$dpth,
                    () => {
                        let $$res: Nullable<comments> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Comments:)`, $$dpth + 1, $$cr) !== null
                            && this.matchunstructured($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.comments, };
                        }
                        return $$res;
                    });
            },
            this.$scope$comments$memo,
        );
    }
    public matchkeywords($$dpth: number, $$cr?: ErrorTracker): Nullable<keywords> {
        return this.memoise(
            () => {
                return this.run<keywords>($$dpth,
                    () => {
                        let $$res: Nullable<keywords> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Keywords:)`, $$dpth + 1, $$cr) !== null
                            && this.matchphrase($$dpth + 1, $$cr) !== null
                            && this.loop<keywords_$0>(() => this.matchkeywords_$0($$dpth + 1, $$cr), true) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.keywords, };
                        }
                        return $$res;
                    });
            },
            this.$scope$keywords$memo,
        );
    }
    public matchkeywords_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<keywords_$0> {
        return this.memoise(
            () => {
                return this.run<keywords_$0>($$dpth,
                    () => {
                        let $$res: Nullable<keywords_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && this.matchphrase($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.keywords_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$keywords_$0$memo,
        );
    }
    public matchresent_date($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_date> {
        return this.memoise(
            () => {
                return this.run<resent_date>($$dpth,
                    () => {
                        let $$res: Nullable<resent_date> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Date:)`, $$dpth + 1, $$cr) !== null
                            && this.matchdate_time($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.resent_date, };
                        }
                        return $$res;
                    });
            },
            this.$scope$resent_date$memo,
        );
    }
    public matchresent_from($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_from> {
        return this.memoise(
            () => {
                return this.run<resent_from>($$dpth,
                    () => {
                        let $$res: Nullable<resent_from> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-From:)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.resent_from, };
                        }
                        return $$res;
                    });
            },
            this.$scope$resent_from$memo,
        );
    }
    public matchresent_sender($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_sender> {
        return this.memoise(
            () => {
                return this.run<resent_sender>($$dpth,
                    () => {
                        let $$res: Nullable<resent_sender> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Sender:)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.resent_sender, };
                        }
                        return $$res;
                    });
            },
            this.$scope$resent_sender$memo,
        );
    }
    public matchresent_to($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_to> {
        return this.memoise(
            () => {
                return this.run<resent_to>($$dpth,
                    () => {
                        let $$res: Nullable<resent_to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-To:)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.resent_to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$resent_to$memo,
        );
    }
    public matchresent_cc($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_cc> {
        return this.memoise(
            () => {
                return this.run<resent_cc>($$dpth,
                    () => {
                        let $$res: Nullable<resent_cc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Cc:)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.resent_cc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$resent_cc$memo,
        );
    }
    public matchresent_bcc($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_bcc> {
        return this.memoise(
            () => {
                return this.run<resent_bcc>($$dpth,
                    () => {
                        let $$res: Nullable<resent_bcc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Bcc:)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchresent_bcc_$0($$dpth + 1, $$cr)) || true)
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.resent_bcc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$resent_bcc$memo,
        );
    }
    public matchresent_bcc_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_bcc_$0> {
        return this.memoise(
            () => {
                return this.choice<resent_bcc_$0>([
                    () => this.matchresent_bcc_$0_1($$dpth + 1, $$cr),
                    () => this.matchresent_bcc_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$resent_bcc_$0$memo,
        );
    }
    public matchresent_bcc_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_bcc_$0_1> {
        return this.matchaddress_list($$dpth + 1, $$cr);
    }
    public matchresent_bcc_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_bcc_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchresent_msg_id($$dpth: number, $$cr?: ErrorTracker): Nullable<resent_msg_id> {
        return this.memoise(
            () => {
                return this.run<resent_msg_id>($$dpth,
                    () => {
                        let $$res: Nullable<resent_msg_id> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Message_ID:)`, $$dpth + 1, $$cr) !== null
                            && this.matchmsg_id($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.resent_msg_id, };
                        }
                        return $$res;
                    });
            },
            this.$scope$resent_msg_id$memo,
        );
    }
    public matchtrace($$dpth: number, $$cr?: ErrorTracker): Nullable<trace> {
        return this.memoise(
            () => {
                return this.run<trace>($$dpth,
                    () => {
                        let $$res: Nullable<trace> = null;
                        if (true
                            && ((this.matchreturn_path($$dpth + 1, $$cr)) || true)
                            && this.loop<received>(() => this.matchreceived($$dpth + 1, $$cr), false) !== null
                        ) {
                            $$res = {kind: ASTKinds.trace, };
                        }
                        return $$res;
                    });
            },
            this.$scope$trace$memo,
        );
    }
    public matchreturn_path($$dpth: number, $$cr?: ErrorTracker): Nullable<return_path> {
        return this.memoise(
            () => {
                return this.run<return_path>($$dpth,
                    () => {
                        let $$res: Nullable<return_path> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Return-Path:)`, $$dpth + 1, $$cr) !== null
                            && this.matchpath($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.return_path, };
                        }
                        return $$res;
                    });
            },
            this.$scope$return_path$memo,
        );
    }
    public matchpath($$dpth: number, $$cr?: ErrorTracker): Nullable<path> {
        return this.memoise(
            () => {
                return this.choice<path>([
                    () => this.matchpath_1($$dpth + 1, $$cr),
                    () => this.matchpath_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$path$memo,
        );
    }
    public matchpath_1($$dpth: number, $$cr?: ErrorTracker): Nullable<path_1> {
        return this.matchangle_addr($$dpth + 1, $$cr);
    }
    public matchpath_2($$dpth: number, $$cr?: ErrorTracker): Nullable<path_2> {
        return this.matchpath_$0($$dpth + 1, $$cr);
    }
    public matchpath_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<path_$0> {
        return this.memoise(
            () => {
                return this.run<path_$0>($$dpth,
                    () => {
                        let $$res: Nullable<path_$0> = null;
                        if (true
                            && this.matchCFWS($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?:<)`, $$dpth + 1, $$cr) !== null
                            && this.matchCFWS($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?:>)`, $$dpth + 1, $$cr) !== null
                            && this.matchCFWS($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.path_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$path_$0$memo,
        );
    }
    public matchreceived($$dpth: number, $$cr?: ErrorTracker): Nullable<received> {
        return this.memoise(
            () => {
                return this.run<received>($$dpth,
                    () => {
                        let $$res: Nullable<received> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Received:)`, $$dpth + 1, $$cr) !== null
                            && this.loop<received_token>(() => this.matchreceived_token($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?:;)`, $$dpth + 1, $$cr) !== null
                            && this.matchdate_time($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.received, };
                        }
                        return $$res;
                    });
            },
            this.$scope$received$memo,
        );
    }
    public matchreceived_token($$dpth: number, $$cr?: ErrorTracker): Nullable<received_token> {
        return this.memoise(
            () => {
                return this.choice<received_token>([
                    () => this.matchreceived_token_1($$dpth + 1, $$cr),
                    () => this.matchreceived_token_2($$dpth + 1, $$cr),
                    () => this.matchreceived_token_3($$dpth + 1, $$cr),
                    () => this.matchreceived_token_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$received_token$memo,
        );
    }
    public matchreceived_token_1($$dpth: number, $$cr?: ErrorTracker): Nullable<received_token_1> {
        return this.matchword($$dpth + 1, $$cr);
    }
    public matchreceived_token_2($$dpth: number, $$cr?: ErrorTracker): Nullable<received_token_2> {
        return this.matchangle_addr($$dpth + 1, $$cr);
    }
    public matchreceived_token_3($$dpth: number, $$cr?: ErrorTracker): Nullable<received_token_3> {
        return this.matchaddr_spec($$dpth + 1, $$cr);
    }
    public matchreceived_token_4($$dpth: number, $$cr?: ErrorTracker): Nullable<received_token_4> {
        return this.matchdomain($$dpth + 1, $$cr);
    }
    public matchoptional_field($$dpth: number, $$cr?: ErrorTracker): Nullable<optional_field> {
        return this.memoise(
            () => {
                return this.run<optional_field>($$dpth,
                    () => {
                        let $$res: Nullable<optional_field> = null;
                        if (true
                            && this.matchfield_name($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchunstructured($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.optional_field, };
                        }
                        return $$res;
                    });
            },
            this.$scope$optional_field$memo,
        );
    }
    public matchfield_name($$dpth: number, $$cr?: ErrorTracker): Nullable<field_name> {
        return this.memoise(
            () => {
                return this.loop<ftext>(() => this.matchftext($$dpth + 1, $$cr), false);
            },
            this.$scope$field_name$memo,
        );
    }
    public matchftext($$dpth: number, $$cr?: ErrorTracker): Nullable<ftext> {
        return this.memoise(
            () => {
                return this.choice<ftext>([
                    () => this.matchftext_1($$dpth + 1, $$cr),
                    () => this.matchftext_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$ftext$memo,
        );
    }
    public matchftext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<ftext_1> {
        return this.regexAccept(String.raw`(?:[\x21-\x39])`, $$dpth + 1, $$cr);
    }
    public matchftext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<ftext_2> {
        return this.regexAccept(String.raw`(?:[\x3b-\x7e])`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL> {
        return this.memoise(
            () => {
                return this.choice<obs_NO_WS_CTL>([
                    () => this.matchobs_NO_WS_CTL_1($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_2($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_3($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_4($$dpth + 1, $$cr),
                    () => this.matchobs_NO_WS_CTL_5($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_NO_WS_CTL$memo,
        );
    }
    public matchobs_NO_WS_CTL_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_1> {
        return this.regexAccept(String.raw`(?:[\x01-\x08])`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_2> {
        return this.regexAccept(String.raw`(?:\x0B)`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_3> {
        return this.regexAccept(String.raw`(?:\x0C)`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_4($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_4> {
        return this.regexAccept(String.raw`(?:[\x0E-\x1F])`, $$dpth + 1, $$cr);
    }
    public matchobs_NO_WS_CTL_5($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_NO_WS_CTL_5> {
        return this.regexAccept(String.raw`(?:\x7F)`, $$dpth + 1, $$cr);
    }
    public matchobs_ctext($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_ctext> {
        return this.memoise(
            () => {
                return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
            },
            this.$scope$obs_ctext$memo,
        );
    }
    public matchobs_qtext($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qtext> {
        return this.memoise(
            () => {
                return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
            },
            this.$scope$obs_qtext$memo,
        );
    }
    public matchobs_utext($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_utext> {
        return this.memoise(
            () => {
                return this.choice<obs_utext>([
                    () => this.matchobs_utext_1($$dpth + 1, $$cr),
                    () => this.matchobs_utext_2($$dpth + 1, $$cr),
                    () => this.matchobs_utext_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_utext$memo,
        );
    }
    public matchobs_utext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_utext_1> {
        return this.regexAccept(String.raw`(?:\x00)`, $$dpth + 1, $$cr);
    }
    public matchobs_utext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_utext_2> {
        return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
    }
    public matchobs_utext_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_utext_3> {
        return this.matchVCHAR($$dpth + 1, $$cr);
    }
    public matchobs_qp($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp> {
        return this.memoise(
            () => {
                return this.run<obs_qp>($$dpth,
                    () => {
                        let $$res: Nullable<obs_qp> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\\)`, $$dpth + 1, $$cr) !== null
                            && this.matchobs_qp_$0($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_qp, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_qp$memo,
        );
    }
    public matchobs_qp_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_qp_$0>([
                    () => this.matchobs_qp_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_qp_$0_2($$dpth + 1, $$cr),
                    () => this.matchobs_qp_$0_3($$dpth + 1, $$cr),
                    () => this.matchobs_qp_$0_4($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_qp_$0$memo,
        );
    }
    public matchobs_qp_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_1> {
        return this.regexAccept(String.raw`(?:\x00)`, $$dpth + 1, $$cr);
    }
    public matchobs_qp_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_2> {
        return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
    }
    public matchobs_qp_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_3> {
        return this.matchLF($$dpth + 1, $$cr);
    }
    public matchobs_qp_$0_4($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_qp_$0_4> {
        return this.matchCR($$dpth + 1, $$cr);
    }
    public matchobs_body($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body> {
        return this.memoise(
            () => {
                return this.loop<obs_body_$0>(() => this.matchobs_body_$0($$dpth + 1, $$cr), true);
            },
            this.$scope$obs_body$memo,
        );
    }
    public matchobs_body_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_body_$0>([
                    () => this.matchobs_body_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_body_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_body_$0$memo,
        );
    }
    public matchobs_body_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0_1> {
        return this.matchobs_body_$0_$0($$dpth + 1, $$cr);
    }
    public matchobs_body_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0_2> {
        return this.matchCRLF($$dpth + 1, $$cr);
    }
    public matchobs_body_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_body_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_body_$0_$0> = null;
                        if (true
                            && this.loop<LF>(() => this.matchLF($$dpth + 1, $$cr), true) !== null
                            && this.loop<CR>(() => this.matchCR($$dpth + 1, $$cr), true) !== null
                            && this.loop<obs_body_$0_$0_$0>(() => this.matchobs_body_$0_$0_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_body_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_body_$0_$0$memo,
        );
    }
    public matchobs_body_$0_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_body_$0_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_body_$0_$0_$0> = null;
                        if (true
                            && this.matchobs_body_$0_$0_$0_$0($$dpth + 1, $$cr) !== null
                            && this.loop<LF>(() => this.matchLF($$dpth + 1, $$cr), true) !== null
                            && this.loop<CR>(() => this.matchCR($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_body_$0_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_body_$0_$0_$0$memo,
        );
    }
    public matchobs_body_$0_$0_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0_$0_$0_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_body_$0_$0_$0_$0>([
                    () => this.matchobs_body_$0_$0_$0_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_body_$0_$0_$0_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_body_$0_$0_$0_$0$memo,
        );
    }
    public matchobs_body_$0_$0_$0_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0_$0_$0_$0_1> {
        return this.regexAccept(String.raw`(?:\x00)`, $$dpth + 1, $$cr);
    }
    public matchobs_body_$0_$0_$0_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_body_$0_$0_$0_$0_2> {
        return this.matchtext($$dpth + 1, $$cr);
    }
    public matchobs_unstruct($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_unstruct> {
        return this.memoise(
            () => {
                return this.loop<obs_unstruct_$0>(() => this.matchobs_unstruct_$0($$dpth + 1, $$cr), true);
            },
            this.$scope$obs_unstruct$memo,
        );
    }
    public matchobs_unstruct_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_unstruct_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_unstruct_$0>([
                    () => this.matchobs_unstruct_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_unstruct_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_unstruct_$0$memo,
        );
    }
    public matchobs_unstruct_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_unstruct_$0_1> {
        return this.matchobs_unstruct_$0_$0($$dpth + 1, $$cr);
    }
    public matchobs_unstruct_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_unstruct_$0_2> {
        return this.matchFWS($$dpth + 1, $$cr);
    }
    public matchobs_unstruct_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_unstruct_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_unstruct_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_unstruct_$0_$0> = null;
                        if (true
                            && this.loop<LF>(() => this.matchLF($$dpth + 1, $$cr), true) !== null
                            && this.loop<CR>(() => this.matchCR($$dpth + 1, $$cr), true) !== null
                            && this.loop<obs_unstruct_$0_$0_$0>(() => this.matchobs_unstruct_$0_$0_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_unstruct_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_unstruct_$0_$0$memo,
        );
    }
    public matchobs_unstruct_$0_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_unstruct_$0_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_unstruct_$0_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_unstruct_$0_$0_$0> = null;
                        if (true
                            && this.matchobs_utext($$dpth + 1, $$cr) !== null
                            && this.loop<LF>(() => this.matchLF($$dpth + 1, $$cr), true) !== null
                            && this.loop<CR>(() => this.matchCR($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_unstruct_$0_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_unstruct_$0_$0_$0$memo,
        );
    }
    public matchobs_phrase($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase> {
        return this.memoise(
            () => {
                return this.run<obs_phrase>($$dpth,
                    () => {
                        let $$res: Nullable<obs_phrase> = null;
                        if (true
                            && this.matchword($$dpth + 1, $$cr) !== null
                            && this.matchobs_phrase_$0($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_phrase, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_phrase$memo,
        );
    }
    public matchobs_phrase_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_phrase_$0>([
                    () => this.matchobs_phrase_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_phrase_$0_2($$dpth + 1, $$cr),
                    () => this.matchobs_phrase_$0_3($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_phrase_$0$memo,
        );
    }
    public matchobs_phrase_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0_1> {
        return this.matchword($$dpth + 1, $$cr);
    }
    public matchobs_phrase_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0_2> {
        return this.regexAccept(String.raw`(?:.)`, $$dpth + 1, $$cr);
    }
    public matchobs_phrase_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_$0_3> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_phrase_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list> {
        return this.memoise(
            () => {
                return this.run<obs_phrase_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_phrase_list> = null;
                        if (true
                            && this.matchobs_phrase_list_$0($$dpth + 1, $$cr) !== null
                            && this.loop<obs_phrase_list_$1>(() => this.matchobs_phrase_list_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_phrase_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_phrase_list$memo,
        );
    }
    public matchobs_phrase_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_phrase_list_$0>([
                    () => this.matchobs_phrase_list_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_phrase_list_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_phrase_list_$0$memo,
        );
    }
    public matchobs_phrase_list_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list_$0_1> {
        return this.matchphrase($$dpth + 1, $$cr);
    }
    public matchobs_phrase_list_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_phrase_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list_$1> {
        return this.memoise(
            () => {
                return this.run<obs_phrase_list_$1>($$dpth,
                    () => {
                        let $$res: Nullable<obs_phrase_list_$1> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchobs_phrase_list_$1_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_phrase_list_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_phrase_list_$1$memo,
        );
    }
    public matchobs_phrase_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list_$1_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_phrase_list_$1_$0>([
                    () => this.matchobs_phrase_list_$1_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_phrase_list_$1_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_phrase_list_$1_$0$memo,
        );
    }
    public matchobs_phrase_list_$1_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list_$1_$0_1> {
        return this.matchphrase($$dpth + 1, $$cr);
    }
    public matchobs_phrase_list_$1_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_phrase_list_$1_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_FWS($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_FWS> {
        return this.memoise(
            () => {
                return this.run<obs_FWS>($$dpth,
                    () => {
                        let $$res: Nullable<obs_FWS> = null;
                        if (true
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), false) !== null
                            && this.loop<obs_FWS_$0>(() => this.matchobs_FWS_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_FWS, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_FWS$memo,
        );
    }
    public matchobs_FWS_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_FWS_$0> {
        return this.memoise(
            () => {
                return this.run<obs_FWS_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_FWS_$0> = null;
                        if (true
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), false) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_FWS_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_FWS_$0$memo,
        );
    }
    public matchobs_day_of_week($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_day_of_week> {
        return this.memoise(
            () => {
                return this.run<obs_day_of_week>($$dpth,
                    () => {
                        let $$res: Nullable<obs_day_of_week> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchday_name($$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_day_of_week, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_day_of_week$memo,
        );
    }
    public matchobs_day($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_day> {
        return this.memoise(
            () => {
                return this.run<obs_day>($$dpth,
                    () => {
                        let $$res: Nullable<obs_day> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchDIGIT($$dpth + 1, $$cr) !== null
                            && ((this.matchDIGIT($$dpth + 1, $$cr)) || true)
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_day, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_day$memo,
        );
    }
    public matchobs_year($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_year> {
        return this.memoise(
            () => {
                return this.run<obs_year>($$dpth,
                    () => {
                        let $$res: Nullable<obs_year> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchTWO_DIGIT($$dpth + 1, $$cr) !== null
                            && this.loop<DIGIT>(() => this.matchDIGIT($$dpth + 1, $$cr), true) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_year, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_year$memo,
        );
    }
    public matchobs_hour($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_hour> {
        return this.memoise(
            () => {
                return this.run<obs_hour>($$dpth,
                    () => {
                        let $$res: Nullable<obs_hour> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchTWO_DIGIT($$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_hour, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_hour$memo,
        );
    }
    public matchobs_minute($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_minute> {
        return this.memoise(
            () => {
                return this.run<obs_minute>($$dpth,
                    () => {
                        let $$res: Nullable<obs_minute> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchTWO_DIGIT($$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_minute, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_minute$memo,
        );
    }
    public matchobs_second($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_second> {
        return this.memoise(
            () => {
                return this.run<obs_second>($$dpth,
                    () => {
                        let $$res: Nullable<obs_second> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.matchTWO_DIGIT($$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_second, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_second$memo,
        );
    }
    public matchobs_zone($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone> {
        return this.memoise(
            () => {
                return this.choice<obs_zone>([
                    () => this.matchobs_zone_1($$dpth + 1, $$cr),
                    () => this.matchobs_zone_2($$dpth + 1, $$cr),
                    () => this.matchobs_zone_3($$dpth + 1, $$cr),
                    () => this.matchobs_zone_4($$dpth + 1, $$cr),
                    () => this.matchobs_zone_5($$dpth + 1, $$cr),
                    () => this.matchobs_zone_6($$dpth + 1, $$cr),
                    () => this.matchobs_zone_7($$dpth + 1, $$cr),
                    () => this.matchobs_zone_8($$dpth + 1, $$cr),
                    () => this.matchobs_zone_9($$dpth + 1, $$cr),
                    () => this.matchobs_zone_10($$dpth + 1, $$cr),
                    () => this.matchobs_zone_11($$dpth + 1, $$cr),
                    () => this.matchobs_zone_12($$dpth + 1, $$cr),
                    () => this.matchobs_zone_13($$dpth + 1, $$cr),
                    () => this.matchobs_zone_14($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_zone$memo,
        );
    }
    public matchobs_zone_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_1> {
        return this.regexAccept(String.raw`(?:UT)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_2> {
        return this.regexAccept(String.raw`(?:GMT)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_3> {
        return this.regexAccept(String.raw`(?:EST)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_4($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_4> {
        return this.regexAccept(String.raw`(?:EDT)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_5($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_5> {
        return this.regexAccept(String.raw`(?:CST)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_6($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_6> {
        return this.regexAccept(String.raw`(?:CDT)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_7($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_7> {
        return this.regexAccept(String.raw`(?:MST)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_8($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_8> {
        return this.regexAccept(String.raw`(?:MDT)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_9($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_9> {
        return this.regexAccept(String.raw`(?:PST)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_10($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_10> {
        return this.regexAccept(String.raw`(?:PDT)`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_11($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_11> {
        return this.regexAccept(String.raw`(?:[\x41-\x49])`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_12($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_12> {
        return this.regexAccept(String.raw`(?:[\x4b-\x5a])`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_13($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_13> {
        return this.regexAccept(String.raw`(?:[\x61-\x69])`, $$dpth + 1, $$cr);
    }
    public matchobs_zone_14($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_zone_14> {
        return this.regexAccept(String.raw`(?:[\x6b-\x7a])`, $$dpth + 1, $$cr);
    }
    public matchobs_angle_addr($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_angle_addr> {
        return this.memoise(
            () => {
                return this.run<obs_angle_addr>($$dpth,
                    () => {
                        let $$res: Nullable<obs_angle_addr> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:<)`, $$dpth + 1, $$cr) !== null
                            && this.matchobs_route($$dpth + 1, $$cr) !== null
                            && this.matchaddr_spec($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?:>)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_angle_addr, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_angle_addr$memo,
        );
    }
    public matchobs_route($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_route> {
        return this.memoise(
            () => {
                return this.run<obs_route>($$dpth,
                    () => {
                        let $$res: Nullable<obs_route> = null;
                        if (true
                            && this.matchobs_domain_list($$dpth + 1, $$cr) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_route, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_route$memo,
        );
    }
    public matchobs_domain_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list> {
        return this.memoise(
            () => {
                return this.run<obs_domain_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_domain_list> = null;
                        if (true
                            && this.loop<obs_domain_list_$0>(() => this.matchobs_domain_list_$0($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                            && this.matchdomain($$dpth + 1, $$cr) !== null
                            && this.loop<obs_domain_list_$1>(() => this.matchobs_domain_list_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_list$memo,
        );
    }
    public matchobs_domain_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_domain_list_$0>([
                    () => this.matchobs_domain_list_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_domain_list_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_domain_list_$0$memo,
        );
    }
    public matchobs_domain_list_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0_1> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_domain_list_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$0_2> {
        return this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr);
    }
    public matchobs_domain_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$1> {
        return this.memoise(
            () => {
                return this.run<obs_domain_list_$1>($$dpth,
                    () => {
                        let $$res: Nullable<obs_domain_list_$1> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && ((this.matchobs_domain_list_$1_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_list_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_list_$1$memo,
        );
    }
    public matchobs_domain_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_list_$1_$0> {
        return this.memoise(
            () => {
                return this.run<obs_domain_list_$1_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_domain_list_$1_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:@)`, $$dpth + 1, $$cr) !== null
                            && this.matchdomain($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_list_$1_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_list_$1_$0$memo,
        );
    }
    public matchobs_mbox_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list> {
        return this.memoise(
            () => {
                return this.run<obs_mbox_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_mbox_list> = null;
                        if (true
                            && this.loop<obs_mbox_list_$0>(() => this.matchobs_mbox_list_$0($$dpth + 1, $$cr), true) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.loop<obs_mbox_list_$1>(() => this.matchobs_mbox_list_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_mbox_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_mbox_list$memo,
        );
    }
    public matchobs_mbox_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$0> {
        return this.memoise(
            () => {
                return this.run<obs_mbox_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_mbox_list_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_mbox_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_mbox_list_$0$memo,
        );
    }
    public matchobs_mbox_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1> {
        return this.memoise(
            () => {
                return this.run<obs_mbox_list_$1>($$dpth,
                    () => {
                        let $$res: Nullable<obs_mbox_list_$1> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchobs_mbox_list_$1_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_mbox_list_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_mbox_list_$1$memo,
        );
    }
    public matchobs_mbox_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_mbox_list_$1_$0>([
                    () => this.matchobs_mbox_list_$1_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_mbox_list_$1_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_mbox_list_$1_$0$memo,
        );
    }
    public matchobs_mbox_list_$1_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0_1> {
        return this.matchmailbox($$dpth + 1, $$cr);
    }
    public matchobs_mbox_list_$1_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_mbox_list_$1_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_addr_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list> {
        return this.memoise(
            () => {
                return this.run<obs_addr_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_addr_list> = null;
                        if (true
                            && this.loop<obs_addr_list_$0>(() => this.matchobs_addr_list_$0($$dpth + 1, $$cr), true) !== null
                            && this.matchaddress($$dpth + 1, $$cr) !== null
                            && this.loop<obs_addr_list_$1>(() => this.matchobs_addr_list_$1($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_addr_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_addr_list$memo,
        );
    }
    public matchobs_addr_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$0> {
        return this.memoise(
            () => {
                return this.run<obs_addr_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_addr_list_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_addr_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_addr_list_$0$memo,
        );
    }
    public matchobs_addr_list_$1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1> {
        return this.memoise(
            () => {
                return this.run<obs_addr_list_$1>($$dpth,
                    () => {
                        let $$res: Nullable<obs_addr_list_$1> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                            && ((this.matchobs_addr_list_$1_$0($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_addr_list_$1, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_addr_list_$1$memo,
        );
    }
    public matchobs_addr_list_$1_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_addr_list_$1_$0>([
                    () => this.matchobs_addr_list_$1_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_addr_list_$1_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_addr_list_$1_$0$memo,
        );
    }
    public matchobs_addr_list_$1_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0_1> {
        return this.matchaddress($$dpth + 1, $$cr);
    }
    public matchobs_addr_list_$1_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_addr_list_$1_$0_2> {
        return this.matchCFWS($$dpth + 1, $$cr);
    }
    public matchobs_group_list($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_group_list> {
        return this.memoise(
            () => {
                return this.run<obs_group_list>($$dpth,
                    () => {
                        let $$res: Nullable<obs_group_list> = null;
                        if (true
                            && this.loop<obs_group_list_$0>(() => this.matchobs_group_list_$0($$dpth + 1, $$cr), false) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_group_list, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_group_list$memo,
        );
    }
    public matchobs_group_list_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_group_list_$0> {
        return this.memoise(
            () => {
                return this.run<obs_group_list_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_group_list_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_group_list_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_group_list_$0$memo,
        );
    }
    public matchobs_local_part($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_local_part> {
        return this.memoise(
            () => {
                return this.run<obs_local_part>($$dpth,
                    () => {
                        let $$res: Nullable<obs_local_part> = null;
                        if (true
                            && this.matchword($$dpth + 1, $$cr) !== null
                            && this.loop<obs_local_part_$0>(() => this.matchobs_local_part_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_local_part, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_local_part$memo,
        );
    }
    public matchobs_local_part_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_local_part_$0> {
        return this.memoise(
            () => {
                return this.run<obs_local_part_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_local_part_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr) !== null
                            && this.matchword($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_local_part_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_local_part_$0$memo,
        );
    }
    public matchobs_domain($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain> {
        return this.memoise(
            () => {
                return this.run<obs_domain>($$dpth,
                    () => {
                        let $scope$head_atom: Nullable<atom>;
                        let $$res: Nullable<obs_domain> = null;
                        if (true
                            && ($scope$head_atom = this.matchatom($$dpth + 1, $$cr)) !== null
                            && this.loop<obs_domain_$0>(() => this.matchobs_domain_$0($$dpth + 1, $$cr), true) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain, head_atom: $scope$head_atom};
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain$memo,
        );
    }
    public matchobs_domain_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_domain_$0> {
        return this.memoise(
            () => {
                return this.run<obs_domain_$0>($$dpth,
                    () => {
                        let $scope$tail_atom: Nullable<atom>;
                        let $$res: Nullable<obs_domain_$0> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:\.)`, $$dpth + 1, $$cr) !== null
                            && ($scope$tail_atom = this.matchatom($$dpth + 1, $$cr)) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_domain_$0, tail_atom: $scope$tail_atom};
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_domain_$0$memo,
        );
    }
    public matchobs_dtext($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_dtext> {
        return this.memoise(
            () => {
                return this.choice<obs_dtext>([
                    () => this.matchobs_dtext_1($$dpth + 1, $$cr),
                    () => this.matchobs_dtext_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_dtext$memo,
        );
    }
    public matchobs_dtext_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_dtext_1> {
        return this.matchobs_NO_WS_CTL($$dpth + 1, $$cr);
    }
    public matchobs_dtext_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_dtext_2> {
        return this.matchquoted_pair($$dpth + 1, $$cr);
    }
    public matchobs_fields($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields> {
        return this.memoise(
            () => {
                return this.loop<obs_fields_$0>(() => this.matchobs_fields_$0($$dpth + 1, $$cr), true);
            },
            this.$scope$obs_fields$memo,
        );
    }
    public matchobs_fields_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_fields_$0>([
                    () => this.matchobs_fields_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_2($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_3($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_4($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_5($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_6($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_7($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_8($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_9($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_10($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_11($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_12($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_13($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_14($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_15($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_16($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_17($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_18($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_19($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_20($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_21($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_22($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_23($$dpth + 1, $$cr),
                    () => this.matchobs_fields_$0_24($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_fields_$0$memo,
        );
    }
    public matchobs_fields_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_1> {
        return this.matchobs_return($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_2> {
        return this.matchobs_received($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_3($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_3> {
        return this.matchobs_orig_date($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_4($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_4> {
        return this.matchobs_from($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_5($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_5> {
        return this.matchobs_sender($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_6($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_6> {
        return this.matchobs_reply_to($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_7($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_7> {
        return this.matchobs_to($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_8($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_8> {
        return this.matchobs_cc($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_9($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_9> {
        return this.matchobs_bcc($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_10($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_10> {
        return this.matchobs_message_id($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_11($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_11> {
        return this.matchobs_in_reply_to($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_12($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_12> {
        return this.matchobs_references($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_13($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_13> {
        return this.matchobs_subject($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_14($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_14> {
        return this.matchobs_comments($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_15($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_15> {
        return this.matchobs_keywords($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_16($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_16> {
        return this.matchobs_resent_date($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_17($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_17> {
        return this.matchobs_resent_from($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_18($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_18> {
        return this.matchobs_resent_send($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_19($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_19> {
        return this.matchobs_resent_rply($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_20($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_20> {
        return this.matchobs_resent_to($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_21($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_21> {
        return this.matchobs_resent_cc($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_22($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_22> {
        return this.matchobs_resent_bcc($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_23($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_23> {
        return this.matchobs_resent_mid($$dpth + 1, $$cr);
    }
    public matchobs_fields_$0_24($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_fields_$0_24> {
        return this.matchobs_optional($$dpth + 1, $$cr);
    }
    public matchobs_orig_date($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_orig_date> {
        return this.memoise(
            () => {
                return this.run<obs_orig_date>($$dpth,
                    () => {
                        let $$res: Nullable<obs_orig_date> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Date)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchdate_time($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_orig_date, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_orig_date$memo,
        );
    }
    public matchobs_from($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_from> {
        return this.memoise(
            () => {
                return this.run<obs_from>($$dpth,
                    () => {
                        let $$res: Nullable<obs_from> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:From)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_from, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_from$memo,
        );
    }
    public matchobs_sender($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_sender> {
        return this.memoise(
            () => {
                return this.run<obs_sender>($$dpth,
                    () => {
                        let $$res: Nullable<obs_sender> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Sender)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_sender, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_sender$memo,
        );
    }
    public matchobs_reply_to($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_reply_to> {
        return this.memoise(
            () => {
                return this.run<obs_reply_to>($$dpth,
                    () => {
                        let $$res: Nullable<obs_reply_to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Reply-To)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_reply_to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_reply_to$memo,
        );
    }
    public matchobs_to($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_to> {
        return this.memoise(
            () => {
                return this.run<obs_to>($$dpth,
                    () => {
                        let $$res: Nullable<obs_to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:To)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_to$memo,
        );
    }
    public matchobs_cc($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_cc> {
        return this.memoise(
            () => {
                return this.run<obs_cc>($$dpth,
                    () => {
                        let $$res: Nullable<obs_cc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Cc)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_cc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_cc$memo,
        );
    }
    public matchobs_bcc($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_bcc> {
        return this.memoise(
            () => {
                return this.run<obs_bcc>($$dpth,
                    () => {
                        let $$res: Nullable<obs_bcc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Bcc)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchobs_bcc_$0($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_bcc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_bcc$memo,
        );
    }
    public matchobs_bcc_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_bcc_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_bcc_$0>([
                    () => this.matchobs_bcc_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_bcc_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_bcc_$0$memo,
        );
    }
    public matchobs_bcc_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_bcc_$0_1> {
        return this.matchaddress_list($$dpth + 1, $$cr);
    }
    public matchobs_bcc_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_bcc_$0_2> {
        return this.matchobs_bcc_$0_$0($$dpth + 1, $$cr);
    }
    public matchobs_bcc_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_bcc_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_bcc_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_bcc_$0_$0> = null;
                        if (true
                            && this.loop<obs_bcc_$0_$0_$0>(() => this.matchobs_bcc_$0_$0_$0($$dpth + 1, $$cr), true) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_bcc_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_bcc_$0_$0$memo,
        );
    }
    public matchobs_bcc_$0_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_bcc_$0_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_bcc_$0_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_bcc_$0_$0_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_bcc_$0_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_bcc_$0_$0_$0$memo,
        );
    }
    public matchobs_message_id($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_message_id> {
        return this.memoise(
            () => {
                return this.run<obs_message_id>($$dpth,
                    () => {
                        let $$res: Nullable<obs_message_id> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Message-ID)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchmsg_id($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_message_id, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_message_id$memo,
        );
    }
    public matchobs_in_reply_to($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_in_reply_to> {
        return this.memoise(
            () => {
                return this.run<obs_in_reply_to>($$dpth,
                    () => {
                        let $$res: Nullable<obs_in_reply_to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:In-Reply-To)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.loop<obs_in_reply_to_$0>(() => this.matchobs_in_reply_to_$0($$dpth + 1, $$cr), true) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_in_reply_to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_in_reply_to$memo,
        );
    }
    public matchobs_in_reply_to_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_in_reply_to_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_in_reply_to_$0>([
                    () => this.matchobs_in_reply_to_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_in_reply_to_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_in_reply_to_$0$memo,
        );
    }
    public matchobs_in_reply_to_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_in_reply_to_$0_1> {
        return this.matchphrase($$dpth + 1, $$cr);
    }
    public matchobs_in_reply_to_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_in_reply_to_$0_2> {
        return this.matchmsg_id($$dpth + 1, $$cr);
    }
    public matchobs_references($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_references> {
        return this.memoise(
            () => {
                return this.run<obs_references>($$dpth,
                    () => {
                        let $$res: Nullable<obs_references> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:References)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.loop<obs_references_$0>(() => this.matchobs_references_$0($$dpth + 1, $$cr), true) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_references, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_references$memo,
        );
    }
    public matchobs_references_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_references_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_references_$0>([
                    () => this.matchobs_references_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_references_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_references_$0$memo,
        );
    }
    public matchobs_references_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_references_$0_1> {
        return this.matchphrase($$dpth + 1, $$cr);
    }
    public matchobs_references_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_references_$0_2> {
        return this.matchmsg_id($$dpth + 1, $$cr);
    }
    public matchobs_id_left($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_id_left> {
        return this.memoise(
            () => {
                return this.matchlocal_part($$dpth + 1, $$cr);
            },
            this.$scope$obs_id_left$memo,
        );
    }
    public matchobs_id_right($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_id_right> {
        return this.memoise(
            () => {
                return this.matchdomain($$dpth + 1, $$cr);
            },
            this.$scope$obs_id_right$memo,
        );
    }
    public matchobs_subject($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_subject> {
        return this.memoise(
            () => {
                return this.run<obs_subject>($$dpth,
                    () => {
                        let $$res: Nullable<obs_subject> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Subject)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchunstructured($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_subject, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_subject$memo,
        );
    }
    public matchobs_comments($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_comments> {
        return this.memoise(
            () => {
                return this.run<obs_comments>($$dpth,
                    () => {
                        let $$res: Nullable<obs_comments> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Comments)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchunstructured($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_comments, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_comments$memo,
        );
    }
    public matchobs_keywords($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_keywords> {
        return this.memoise(
            () => {
                return this.run<obs_keywords>($$dpth,
                    () => {
                        let $$res: Nullable<obs_keywords> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Keywords)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchobs_phrase_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_keywords, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_keywords$memo,
        );
    }
    public matchobs_resent_from($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_from> {
        return this.memoise(
            () => {
                return this.run<obs_resent_from>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_from> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-From)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_from, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_from$memo,
        );
    }
    public matchobs_resent_send($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_send> {
        return this.memoise(
            () => {
                return this.run<obs_resent_send>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_send> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Sender)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchmailbox($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_send, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_send$memo,
        );
    }
    public matchobs_resent_date($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_date> {
        return this.memoise(
            () => {
                return this.run<obs_resent_date>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_date> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Date)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchdate_time($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_date, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_date$memo,
        );
    }
    public matchobs_resent_to($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_to> {
        return this.memoise(
            () => {
                return this.run<obs_resent_to>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_to> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-To)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_to, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_to$memo,
        );
    }
    public matchobs_resent_cc($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_cc> {
        return this.memoise(
            () => {
                return this.run<obs_resent_cc>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_cc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Cc)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_cc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_cc$memo,
        );
    }
    public matchobs_resent_bcc($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_bcc> {
        return this.memoise(
            () => {
                return this.run<obs_resent_bcc>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_bcc> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Bcc)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchobs_resent_bcc_$0($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_bcc, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_bcc$memo,
        );
    }
    public matchobs_resent_bcc_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_bcc_$0> {
        return this.memoise(
            () => {
                return this.choice<obs_resent_bcc_$0>([
                    () => this.matchobs_resent_bcc_$0_1($$dpth + 1, $$cr),
                    () => this.matchobs_resent_bcc_$0_2($$dpth + 1, $$cr),
                ]);
            },
            this.$scope$obs_resent_bcc_$0$memo,
        );
    }
    public matchobs_resent_bcc_$0_1($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_bcc_$0_1> {
        return this.matchaddress_list($$dpth + 1, $$cr);
    }
    public matchobs_resent_bcc_$0_2($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_bcc_$0_2> {
        return this.matchobs_resent_bcc_$0_$0($$dpth + 1, $$cr);
    }
    public matchobs_resent_bcc_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_bcc_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_resent_bcc_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_bcc_$0_$0> = null;
                        if (true
                            && this.loop<obs_resent_bcc_$0_$0_$0>(() => this.matchobs_resent_bcc_$0_$0_$0($$dpth + 1, $$cr), true) !== null
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_bcc_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_bcc_$0_$0$memo,
        );
    }
    public matchobs_resent_bcc_$0_$0_$0($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_bcc_$0_$0_$0> {
        return this.memoise(
            () => {
                return this.run<obs_resent_bcc_$0_$0_$0>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_bcc_$0_$0_$0> = null;
                        if (true
                            && ((this.matchCFWS($$dpth + 1, $$cr)) || true)
                            && this.regexAccept(String.raw`(?:,)`, $$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_bcc_$0_$0_$0, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_bcc_$0_$0_$0$memo,
        );
    }
    public matchobs_resent_mid($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_mid> {
        return this.memoise(
            () => {
                return this.run<obs_resent_mid>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_mid> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Message-ID)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchmsg_id($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_mid, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_mid$memo,
        );
    }
    public matchobs_resent_rply($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_resent_rply> {
        return this.memoise(
            () => {
                return this.run<obs_resent_rply>($$dpth,
                    () => {
                        let $$res: Nullable<obs_resent_rply> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Resent-Reply-To)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchaddress_list($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_resent_rply, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_resent_rply$memo,
        );
    }
    public matchobs_return($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_return> {
        return this.memoise(
            () => {
                return this.run<obs_return>($$dpth,
                    () => {
                        let $$res: Nullable<obs_return> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Return-Path)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchpath($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_return, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_return$memo,
        );
    }
    public matchobs_received($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_received> {
        return this.memoise(
            () => {
                return this.run<obs_received>($$dpth,
                    () => {
                        let $$res: Nullable<obs_received> = null;
                        if (true
                            && this.regexAccept(String.raw`(?:Received)`, $$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.loop<received_token>(() => this.matchreceived_token($$dpth + 1, $$cr), true) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_received, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_received$memo,
        );
    }
    public matchobs_optional($$dpth: number, $$cr?: ErrorTracker): Nullable<obs_optional> {
        return this.memoise(
            () => {
                return this.run<obs_optional>($$dpth,
                    () => {
                        let $$res: Nullable<obs_optional> = null;
                        if (true
                            && this.matchfield_name($$dpth + 1, $$cr) !== null
                            && this.loop<WSP>(() => this.matchWSP($$dpth + 1, $$cr), true) !== null
                            && this.regexAccept(String.raw`(?::)`, $$dpth + 1, $$cr) !== null
                            && this.matchunstructured($$dpth + 1, $$cr) !== null
                            && this.matchCRLF($$dpth + 1, $$cr) !== null
                        ) {
                            $$res = {kind: ASTKinds.obs_optional, };
                        }
                        return $$res;
                    });
            },
            this.$scope$obs_optional$memo,
        );
    }
    public test(): boolean {
        const mrk = this.mark();
        const res = this.matchstart(0);
        const ans = res !== null;
        this.reset(mrk);
        return ans;
    }
    public parse(): ParseResult {
        const mrk = this.mark();
        const res = this.matchstart(0);
        if (res)
            return {ast: res, errs: []};
        this.reset(mrk);
        const rec = new ErrorTracker();
        this.clearMemos();
        this.matchstart(0, rec);
        const err = rec.getErr()
        return {ast: res, errs: err !== null ? [err] : []}
    }
    public mark(): PosInfo {
        return this.pos;
    }
    private loop<T>(func: $$RuleType<T>, star: boolean = false): Nullable<T[]> {
        const mrk = this.mark();
        const res: T[] = [];
        for (;;) {
            const preMrk = this.mark();
            const t = func();
            if (t === null || this.pos.overallPos === preMrk.overallPos) {
                break;
            }
            res.push(t);
        }
        if (star || res.length > 0) {
            return res;
        }
        this.reset(mrk);
        return null;
    }
    private run<T>($$dpth: number, fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn()
        if (res !== null)
            return res;
        this.reset(mrk);
        return null;
    }
    private choice<T>(fns: Array<$$RuleType<T>>): Nullable<T> {
        for (const f of fns) {
            const res = f();
            if (res !== null) {
                return res;
            }
        }
        return null;
    }
    private regexAccept(match: string, dpth: number, cr?: ErrorTracker): Nullable<string> {
        return this.run<string>(dpth,
            () => {
                const reg = new RegExp(match, "y");
                const mrk = this.mark();
                reg.lastIndex = mrk.overallPos;
                const res = this.tryConsume(reg);
                if(cr) {
                    cr.record(mrk, res, {
                        kind: "RegexMatch",
                        // We substring from 3 to len - 1 to strip off the
                        // non-capture group syntax added as a WebKit workaround
                        literal: match.substring(3, match.length - 1),
                        negated: this.negating,
                    });
                }
                return res;
            });
    }
    private tryConsume(reg: RegExp): Nullable<string> {
        const res = reg.exec(this.input);
        if (res) {
            let lineJmp = 0;
            let lind = -1;
            for (let i = 0; i < res[0].length; ++i) {
                if (res[0][i] === "\n") {
                    ++lineJmp;
                    lind = i;
                }
            }
            this.pos = {
                overallPos: reg.lastIndex,
                line: this.pos.line + lineJmp,
                offset: lind === -1 ? this.pos.offset + res[0].length : (res[0].length - lind - 1)
            };
            return res[0];
        }
        return null;
    }
    private noConsume<T>(fn: $$RuleType<T>): Nullable<T> {
        const mrk = this.mark();
        const res = fn();
        this.reset(mrk);
        return res;
    }
    private negate<T>(fn: $$RuleType<T>): Nullable<boolean> {
        const mrk = this.mark();
        const oneg = this.negating;
        this.negating = !oneg;
        const res = fn();
        this.negating = oneg;
        this.reset(mrk);
        return res === null ? true : null;
    }
    private memoise<K>(rule: $$RuleType<K>, memo: Map<number, [Nullable<K>, PosInfo]>): Nullable<K> {
        const $scope$pos = this.mark();
        const $scope$memoRes = memo.get($scope$pos.overallPos);
        if(this.memoSafe && $scope$memoRes !== undefined) {
        this.reset($scope$memoRes[1]);
        return $scope$memoRes[0];
        }
        const $scope$result = rule();
        if(this.memoSafe)
        memo.set($scope$pos.overallPos, [$scope$result, this.mark()]);
        return $scope$result;
    }
}
export function parse(s: string): ParseResult {
    const p = new Parser(s);
    return p.parse();
}
export interface ParseResult {
    ast: Nullable<start>;
    errs: SyntaxErr[];
}
export interface PosInfo {
    readonly overallPos: number;
    readonly line: number;
    readonly offset: number;
}
export interface RegexMatch {
    readonly kind: "RegexMatch";
    readonly negated: boolean;
    readonly literal: string;
}
export type EOFMatch = { kind: "EOF"; negated: boolean };
export type MatchAttempt = RegexMatch | EOFMatch;
export class SyntaxErr {
    public pos: PosInfo;
    public expmatches: MatchAttempt[];
    constructor(pos: PosInfo, expmatches: MatchAttempt[]) {
        this.pos = pos;
        this.expmatches = [...expmatches];
    }
    public toString(): string {
        return `Syntax Error at line ${this.pos.line}:${this.pos.offset}. Expected one of ${this.expmatches.map(x => x.kind === "EOF" ? " EOF" : ` ${x.negated ? 'not ': ''}'${x.literal}'`)}`;
    }
}
class ErrorTracker {
    private mxpos: PosInfo = {overallPos: -1, line: -1, offset: -1};
    private regexset: Set<string> = new Set();
    private pmatches: MatchAttempt[] = [];
    public record(pos: PosInfo, result: any, att: MatchAttempt) {
        if ((result === null) === att.negated)
            return;
        if (pos.overallPos > this.mxpos.overallPos) {
            this.mxpos = pos;
            this.pmatches = [];
            this.regexset.clear()
        }
        if (this.mxpos.overallPos === pos.overallPos) {
            if(att.kind === "RegexMatch") {
                if(!this.regexset.has(att.literal))
                    this.pmatches.push(att);
                this.regexset.add(att.literal);
            } else {
                this.pmatches.push(att);
            }
        }
    }
    public getErr(): SyntaxErr | null {
        if (this.mxpos.overallPos !== -1)
            return new SyntaxErr(this.mxpos, this.pmatches);
        return null;
    }
}